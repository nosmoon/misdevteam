<?xml version="1.0" encoding="EUC-KR"?>
<?xml-stylesheet type="text/css" href="/css/style_sheet.css" ?>
<!--*************************************************************************************************
* 파일명 : SE_RCP_4500.xrw
* 기능 : 입금관리 - 지국주소일괄변경
* 작성일자 : 2009-02-02
* 작성자 : 배창희
**************************************************************************************************-->
<xhtml:html xmlns:ex="http://www.comsquare.co.kr/xforms/excel" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:ms="urn:schemas-microsoft-com:xslt" xmlns:my="http://www.comsquare.co.kr/example" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/2002/01/xforms" xmlns:ev="http://www.w3.org/2001/xml-events" xmlns:cs="http://www.comsquare.co.kr/xforms">
	<xhtml:head>
		<xhtml:title>Untitle</xhtml:title>
		<model id="model1">
			<instance id="instance1">
				<root xmlns="">
					<initData>
						<session/>
						<comboSet>
							<medi_cd>
								<item>
									<label/>
									<value/>
								</item>
							</medi_cd>
						</comboSet>
						<pageInfo/>
					</initData>
					<reqData>
						<fwdData>
						</fwdData>
						<searchData>
							<bo_cd/>
							<medi_cd/>
							<yymm/>
							<bo_nm/>
						</searchData>
						<reqform>
							<multiUpDate/>
						</reqform>
					</reqData>
					<resData>
						<resform>
						</resform>
						<gridData>
							<record>
								<yymm/>
								<tms/>
								<curmm_val_qty/>
								<curmm_no_val_qty/>
								<curmm_issu_qty/>
								<gnr_enty_qty/>
								<isenty_qty/>
								<isicdc_qty/>
								<rdr_extn_enty_qty/>
								<val_movm_qty/>
								<val_icdc_qty/>
							</record>
						</gridData>
						<MsgData/>
					</resData>
					<tempData>
						<keyData/>
					</tempData>
				</root>
			</instance>
			<submission id="se_qty_1400_m" action="/se/qty/1400" mediatype="application/x-www-form-urlencoded" method="post" resultref="/root/initData/comboSet"/>
			<submission id="se_qty_1410_l" action="/se/qty/1410" mediatype="application/x-www-form-urlencoded" method="post" ref="/root/reqData/searchData" resultref="/root/resData/gridData"/>
			<script type="javascript" ev:event="xforms-ready">
				<![CDATA[				
					model.send("se_qty_1400_m");	
					
					model.setValue("/root/reqData/searchData/yymm", getCurrentDate());
					combo6.select(0);
					model.refresh();
				]]>
			</script>
		</model>
		<script type="javascript" src="/js/TFCommon.js"/>
		<script type="javascript" src="/js/CIISComm.js"/>
		<script type="javascript" src="/js/se_comm.js"/>
		<script type="javascript">
			<![CDATA[
				//지국선택(팝업에서 호출)
				function jsGetBocdSeq(bo_cd,bo_seq,bo_nm,callgb){
					model.setValue("/root/reqData/searchData/bo_cd", bo_cd+bo_seq);
					model.setValue("/root/reqData/searchData/bo_nm", bo_nm);
					
					model.refresh();
				}

			]]>
		</script>
	</xhtml:head>
	<xhtml:body class="main" pagewidth="946" pageheight="765" guideline="1,10;1,936;2,63;2,70;2,725;2,120;2,102;" style="font-family:돋움; font-size:12px; ">
		<button id="button7" class="btn03" crud="R" style="left:737px; top:44px; width:63px; height:21px; ">
			<caption>조회</caption>
			<script type="javascript" ev:event="onclick">
				<![CDATA[
				if(commReqCheck(group_scr)) model.send("se_qty_1410_l");
				else return;
				se_chkGridCnt("datagrid1");
				
				]]>
			</script>
		</button>
		<group id="group_line" class="gro_line" style="left:10px; top:102px; width:926px; height:5px; "/>
		<group id="group_scr" class="gro_sel" style="left:10px; top:70px; width:926px; height:26px; ">
			<caption id="caption74" class="list_cap02" style="left:0px; top:0px; width:926px; height:26px; "/>
			<caption id="caption8" class="list_cap01" style="left:0px; top:0px; width:70px; height:26px; ">지대년월</caption>
			<input id="ipt_yymm" ref="/root/reqData/searchData/yymm" class="req" format="yyyy-mm" caption="지대년월" style="left:74px; top:4px; width:70px; height:18px; "/>
			<caption id="caption1" style="left:147px; top:5px; width:15px; height:15px; ">~</caption>
			<input id="input1" ref="/root/reqData/searchData/yymm" class="req" format="yyyy-mm" caption="지대년월" style="left:161px; top:4px; width:70px; height:18px; "/>
		</group>
		<import id="iv_Title" src="/common/xrw/iv_TitleBar.xrw" style="left:10px; top:5px; width:926px; height:29px; "/>
		<button id="btnClose" class="btn03" style="left:873px; top:44px; width:63px; height:21px; ">
			<caption>종료</caption>
			<script type="javascript" ev:event="onclick">
				<![CDATA[
				viewer("mainFrame").window.javaScript.closeMDIWindow(model.getValue("/root/initData/pageInfo/pageID"));
				]]>
			</script>
		</button>
		<datagrid id="datagrid1" nodeset="/root/resData/gridData/record" caption="년월^시작 입금일자^종료 입금일자" colsep="^" colwidth="300, 300, 258" mergecellsfixedrows="bycolrec" rowheader="update" rowsep="|" style="left:10px; top:120px; width:926px; height:605px; ">
			<col ref="yymm" type="input" format="yyyy-mm" style="left:20px; top:25px; width:80px; height:20px; "/>
			<col ref="val_movm_qty" type="inputdate" format="#,###" style="text-align:right; "/>
			<col ref="val_icdc_qty" type="inputdate" format="#,###" style="text-align:right; "/>
		</datagrid>
		<button id="button9" class="btn03" crud="U" style="left:805px; top:44px; width:63px; height:21px; ">
			<caption>저장</caption>
			<script type="javascript" ev:event="onclick">
				<![CDATA[
				
				if(!commConfirmBox("저장 하시겠습니까?")) return;
				
				var sAccflag = model.getValue("/root/reqData/reqform/accflag");				
				
				var iSel = switch1.selectedIndex;	
				
				if(iSel == 0){			//지국기본정보
					
				       var orgn_clsf = model.getValue("/root/resData/resform/tab1form/orgn_clsf");
					if(sAccflag == "I"){
						
						if(orgn_clsf == ""){
							commAlert("등록구분을 선택해 주십시오.");
							return;							
						}
						
						if(orgn_clsf == "1"){		//독립지국
							var sBocdseq = model.getValue("/root/resData/resform/tab1form/ref_bo_cd");
									
							if(sBocdseq.length != 8){
								commAlert("참조지국을 선택해 주십시오");
								return;
							}
					
						}else if(orgn_clsf == "2"){		//분리
							var sBocdseq = model.getValue("/root/resData/resform/tab1form/div_motr_bo_cd");
							
							if(sBocdseq.length != 8){
								commAlert("분리 모지국을 선택해 주십시오");
								return;
							}
							
						}else if(orgn_clsf == "3"){		//교체
							var sBocdseq = model.getValue("/root/tempData/tab1temp/org_bo_cd");
							
							if(sBocdseq.length != 8){
								commAlert("교체대상 지국을 선택해 주십시오");
								return;
							}
							
						}
					
					}
					
					var cntr_stat_clsf = model.getValue("/root/resData/resform/tab1form/cntr_stat_clsf");
					var org_cntr_stat_clsf = model.getValue("/root/resData/resform/tab1form/org_cntr_stat_clsf");					
					//교체신임 현임처리 하는 경우
					if(orgn_clsf == "3" && cntr_stat_clsf == "1" && cntr_stat_clsf != org_cntr_stat_clsf){						
						if(!commConfirmBox("이전 지국은 해약처리됩니다. 계속 진행하시겠습니까?")) return;
					}
								
					var sBo_cd = model.getValue("/root/resData/resform/tab1form/bo_cd");	
					if(sBo_cd == ""){
						commAlert("지국코드가 없습니다.");	
						return;
					}
								
					if(!commReqCheck("case1")) return;
								
					model.copyNode("/root/reqData/reqform","/root/resData/resform/tab1form");
					
					var node1 = instance1.createElement("accflag");	// input 에 입력한 값으로 엘리먼트 생성함
					var selnode = instance1.selectSingleNode("/root/reqData/reqform");	// 생성할 엘리먼트를 위치할 노드 선택함
					selnode.appendChild(node1);	// 생성한 엘리먼트를 선택한 노드의 하위에 적용함
										
					model.setValue("/root/reqData/reqform/accflag",sAccflag);
												
					model.send("se_boi_1060_a");
									
									
					//model.send("se_boi_1010_l", true);
															
				}else if(iSel == 1){		//지국장 정보
				
					if(sAccflag == "I"){
						var sBo_head_prn = model.getValue("/root/resData/resform/tab2form/dtlform/bo_head_prn");	
						if(sBo_head_prn == ""){
							commAlert("지국을 먼저 등록해야 합니다.");	
							return;
						}
					}
					
					if(!commGridReqCheck("datagrid6")) return;
					if(!commGridReqCheck("datagrid3")) return;
					
					model.setValue("/root/resData/resform/tab2form/dtlform/accflag",sAccflag);
			        	model.setValue("/root/resData/resform/tab2form/dtlform/multiUpdateData1", datagrid2.getUpdateData());
			        	model.setValue("/root/resData/resform/tab2form/dtlform/multiUpdateData2", datagrid6.getUpdateData());
			        	model.setValue("/root/resData/resform/tab2form/dtlform/multiUpdateData3", datagrid3.getUpdateData());
			        	
					/*
					model.copyNode("/root/reqData/reqform","/root/resData/resform/tab2form/dtlform");
					
					var node1 = instance1.createElement("accflag");	// input 에 입력한 값으로 엘리먼트 생성함
					var node2 = instance1.createElement("multiUpdateData1");	// input 에 입력한 값으로 엘리먼트 생성함
					var node3 = instance1.createElement("multiUpdateData2");	// input 에 입력한 값으로 엘리먼트 생성함
					var node4 = instance1.createElement("multiUpdateData3");	// input 에 입력한 값으로 엘리먼트 생성함
					var selnode = instance1.selectSingleNode("/root/reqData/reqform");	// 생성할 엘리먼트를 위치할 노드 선택함
					selnode.appendChild(node1);	// 생성한 엘리먼트를 선택한 노드의 하위에 적용함
					selnode.appendChild(node2);	// 생성한 엘리먼트를 선택한 노드의 하위에 적용함
					selnode.appendChild(node3);	// 생성한 엘리먼트를 선택한 노드의 하위에 적용함
					selnode.appendChild(node4);	// 생성한 엘리먼트를 선택한 노드의 하위에 적용함
										
					model.setValue("/root/reqData/reqform/accflag",sAccflag);
			        	model.setValue("/root/reqData/reqform/multiUpdateData1", datagrid2.getUpdateData());
			        	model.setValue("/root/reqData/reqform/multiUpdateData2", datagrid6.getUpdateData());
			        	model.setValue("/root/reqData/reqform/multiUpdateData3", datagrid3.getUpdateData());
													
					upload1.attribute("nodeset") = "/root/reqData/reqform/bo_head_phot";
					*/
							
					model.send("se_boi_1070_a");
									
					//model.send("se_boi_1010_l", true);
												
				}else if(iSel == 2){		//지국기타정보
				
					var sBocdseq = "";
					var sBo_cd = "";
					var sBo_seq = "";
					
					if(sAccflag == "I"){
						sBo_cd = model.getValue("/root/resData/resform/tab1form/bo_cd");	
						sBo_seq = model.getValue("/root/resData/resform/tab1form/bo_seq");	
					
					}else{
						sBo_cd = model.getValue("/root/reqData/searchData/searchDtl/bo_cd");	
						sBo_seq = model.getValue("/root/reqData/searchData/searchDtl/bo_seq");	
					}
					
					if(sBo_cd == ""){
						commAlert("지국정보가 없습니다.");	
						return;
					}
					
					if(!commGridReqCheck("datagrid1")) return;
											
					model.copyNode("/root/reqData/reqform","/root/resData/resform/tab3form/dtlform");
					
					var node1 = instance1.createElement("accflag");	
					var node2 = instance1.createElement("multiUpdateData");		
					var node3 = instance1.createElement("bo_cd");	
					var node4 = instance1.createElement("bo_seq");	
					var selnode = instance1.selectSingleNode("/root/reqData/reqform");	// 생성할 엘리먼트를 위치할 노드 선택함
					selnode.appendChild(node1);	// 생성한 엘리먼트를 선택한 노드의 하위에 적용함
					selnode.appendChild(node2);	// 생성한 엘리먼트를 선택한 노드의 하위에 적용함
					selnode.appendChild(node3);	// 생성한 엘리먼트를 선택한 노드의 하위에 적용함
					selnode.appendChild(node4);	// 생성한 엘리먼트를 선택한 노드의 하위에 적용함
										
					model.setValue("/root/reqData/reqform/accflag",sAccflag);
					model.setValue("/root/reqData/reqform/bo_cd",sBo_cd);
					model.setValue("/root/reqData/reqform/bo_seq",sBo_seq);
			        	model.setValue("/root/reqData/reqform/multiUpdateData", datagrid1.getUpdateData());
													
					model.send("se_boi_1080_a");
						
				}else if(iSel == 3){		//지국수지현황
					
					var sBocdseq = "";
					var sBo_cd = "";
					var sBo_seq = "";
					
					if(sAccflag == "I"){
						sBo_cd = model.getValue("/root/resData/resform/tab1form/bo_cd");	
						sBo_seq = model.getValue("/root/resData/resform/tab1form/bo_seq");	
					}else{
						sBo_cd = model.getValue("/root/reqData/searchData/searchDtl/bo_cd");	
						sBo_seq = model.getValue("/root/reqData/searchData/searchDtl/bo_seq");	
					}
					
					if(sBo_cd == ""){
						commAlert("지국정보가 없습니다.");	
						return;
					}
							
					if(!commGridReqCheck("datagrid8")) return;
					if(!commGridReqCheck("datagrid10")) return;
																
					var rowCnt = datagrid8.rows;
					var val1 = "";
					var val2 = "";
					for(var i=1; i<=rowCnt; i++){
						val1 = datagrid8.valueMatrix(i,2);
						for(var j=i+1; j<=rowCnt; j++){
							val2 = datagrid8.valueMatrix(j,2);
							if(val1 == val2){
								commAlert("수입구분이 중복됩니다");
								return;
							}
						}
					}		
												
					rowCnt = datagrid10.rows;
					for(var i=1; i<=rowCnt; i++){
						val1 = datagrid10.valueMatrix(i,2);
						for(var j=i+1; j<=rowCnt; j++){
							val2 = datagrid10.valueMatrix(j,2);
							if(val1 == val2){
								commAlert("지출구분이 중복됩니다");
								return;
							}
						}
					}				
						
					model.copyNode("/root/reqData/reqform","/root/resData/resform/tab4form/inexform/dtlform");
					
					var node1 = instance1.createElement("accflag");		
					var node2= instance1.createElement("yymm");		
					var node3= instance1.createElement("bo_cd");	
					var node4 = instance1.createElement("bo_seq");	
					var node5 = instance1.createElement("multiUpdateData");	
					var node6 = instance1.createElement("multiUpdateData2");	
					var selnode = instance1.selectSingleNode("/root/reqData/reqform");	// 생성할 엘리먼트를 위치할 노드 선택함
					selnode.appendChild(node1);	// 생성한 엘리먼트를 선택한 노드의 하위에 적용함
					selnode.appendChild(node2);	// 생성한 엘리먼트를 선택한 노드의 하위에 적용함
					selnode.appendChild(node3);	// 생성한 엘리먼트를 선택한 노드의 하위에 적용함
					selnode.appendChild(node4);	// 생성한 엘리먼트를 선택한 노드의 하위에 적용함
					selnode.appendChild(node5);	// 생성한 엘리먼트를 선택한 노드의 하위에 적용함
					selnode.appendChild(node6);	// 생성한 엘리먼트를 선택한 노드의 하위에 적용함
										
					model.setValue("/root/reqData/reqform/accflag",sAccflag);
					model.setValue("/root/reqData/reqform/bo_cd",sBo_cd);
					model.setValue("/root/reqData/reqform/bo_seq",sBo_seq);
					model.setValue("/root/reqData/reqform/yymm",model.getValue("/root/reqData/searchData/searchDtl/yymm"));
			        	model.setValue("/root/reqData/reqform/multiUpdateData", datagrid8.getUpdateData());
			        	model.setValue("/root/reqData/reqform/multiUpdateData2", datagrid10.getUpdateData());
																
					model.send("se_boi_1090_a");
					
					model.send("se_boi_1055_l", true);
					
				}else if(iSel == 4){		//지국대행관리자
				
					var sBocdseq = "";
					var sBo_cd = "";
					var sBo_seq = "";
					
					if(sAccflag == "I"){
						sBo_cd = model.getValue("/root/resData/resform/tab1form/bo_cd");	
						sBo_seq = model.getValue("/root/resData/resform/tab1form/bo_seq");	
					
					}else{
						sBo_cd = model.getValue("/root/reqData/searchData/searchDtl/bo_cd");	
						sBo_seq = model.getValue("/root/reqData/searchData/searchDtl/bo_seq");	
					}
					
					if(sBo_cd == ""){
						commAlert("지국정보가 없습니다.");	
						return;
					}
					
					if(!commGridReqCheck("datagrid11")) return;
							
					if(instance1.selectSingleNode("/root/reqData/reqform/accflag") == null){
						model.makeNode("/root/reqData/reqform/accflag");
					}								
					if(instance1.selectSingleNode("/root/reqData/reqform/multiUpDate") == null){
						model.makeNode("/root/reqData/reqform/multiUpDate");
					}	
					if(instance1.selectSingleNode("/root/reqData/reqform/bo_cd") == null){
						model.makeNode("/root/reqData/reqform/bo_cd");
					}
					if(instance1.selectSingleNode("/root/reqData/reqform/bo_seq") == null){
						model.makeNode("/root/reqData/reqform/bo_seq");
					}
										
					model.setValue("/root/reqData/reqform/accflag",sAccflag);
					model.setValue("/root/reqData/reqform/bo_cd",sBo_cd);
					model.setValue("/root/reqData/reqform/bo_seq",sBo_seq);
			        	model.setValue("/root/reqData/reqform/multiUpDate", datagrid11.getUpdateData());
													
					model.send("se_boi_1091_a");
						
				}
					
				]]>
			</script>
		</button>
	</xhtml:body>
</xhtml:html>

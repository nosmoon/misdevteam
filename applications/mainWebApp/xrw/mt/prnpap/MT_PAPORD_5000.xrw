<?xml version="1.0" encoding="EUC-KR"?>
<?xml-stylesheet href="../../../css/style_sheet.css" type="text/css" ?>
<xhtml:html xmlns:ex="http://www.comsquare.co.kr/xforms/excel" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:ms="urn:schemas-microsoft-com:xslt" xmlns:my="http://www.comsquare.co.kr/example" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/2002/01/xforms" xmlns:ev="http://www.w3.org/2001/xml-events" xmlns:cs="http://www.comsquare.co.kr/xforms">
	<xhtml:head>
		<xhtml:title>Untitle</xhtml:title>
		<model id="model1">
			<instance id="instance1">
				<root xmlns="">
					<initData>
						<pageInfo>
							<pageID/>
						</pageInfo>
						<session>
						</session>
						<comboSet>
							<fac_clsf>
								<item>
									<value/>
									<label/>
								</item>
							</fac_clsf>
						</comboSet>
					</initData>
					<reqData>
						<searchData>
							<issu_dt_fr/>
							<issu_dt_to/>
							<fac_clsf/>
							<gubun/>
							<roll_a/>
							<roll_b/>
							<roll_c/>
						</searchData>
						<baljuSearchData>
							<issu_dt/>
							<fac_clsf/>
						</baljuSearchData>
						<saveGubun>
							<gubun/>
							<ordr_dt/>
						</saveGubun>
						<reqForm>
							<multiUpData1/>
							<multiUpData2/>
							<fac_clsf/>
						</reqForm>
					</reqData>
					<resData>
						<gridData1>
							<record>
								<issu_dt/>
								<fac_clsf_nm/>
								<jg_roll_cnt_a/>
								<jg_wgt_a/>
								<jg_roll_cnt_b/>
								<jg_wgt_b/>
								<jg_roll_cnt_c/>
								<jg_wgt_c/>
								<somo_cnt_a/>
								<somo_wgt_a/>
								<somo_cnt_b/>
								<somo_wgt_b/>
								<somo_cnt_c/>
								<somo_wgt_c/>
								<ordr_roll_cnt_a/>
								<ordr_wgt_a/>
								<ordr_roll_cnt_b/>
								<ordr_wgt_b/>
								<ordr_roll_cnt_c/>
								<ordr_wgt_c/>
								<balju_ratio_a/>
								<balju_ratio_b/>
								<balju_ratio_c/>
								<bi_roll_cnt_a/>
								<bi_wgt_a/>
								<bi_roll_cnt_b/>
								<bi_wgt_b/>
								<bi_roll_cnt_c/>
								<bi_wgt_c/>
								<fac_clsf/>
								<fix_roll_cnt_a/>
								<fix_wgt_a/>
								<fix_roll_cnt_b/>
								<fix_wgt_b/>
								<fix_roll_cnt_c/>
								<fix_wgt_c/>
								<tot_wgt_a/>
								<tot_wgt_b/>
								<tot_wgt_c/>
							</record>
						</gridData1>
						<gridData2>
							<record>
								<papcmpy_nm/>
								<matr_cd_a/>
								<roll_wgt_a/>
								<somo_cnt_a/>
								<somo_wgt_a/>
								<ordr_roll_cnt_a/>
								<ordr_wgt_a/>
								<car_kind_a/>
								<car_a/>
								<seq_a/>
								<occr_dt_a/>
								<car_prd_cnt_a/>
								<roll_other_a/>
								<matr_cd_b/>
								<roll_wgt_b/>
								<somo_cnt_b/>
								<somo_wgt_b/>
								<ordr_roll_cnt_b/>
								<ordr_wgt_b/>
								<car_kind_b/>
								<car_b/>
								<seq_b/>
								<occr_dt_b/>
								<car_prd_cnt_b/>
								<roll_other_b/>
								<matr_cd_c/>
								<roll_wgt_c/>
								<somo_cnt_c/>
								<somo_wgt_c/>
								<ordr_roll_cnt_c/>
								<ordr_wgt_c/>
								<car_kind_c/>
								<car_c/>
								<seq_c/>
								<occr_dt_c/>
								<car_prd_cnt_c/>
								<roll_other_c/>
								<papcmpy_cd/>
								<matr_cd_a/>
								<matr_cd_b/>
								<matr_cd_c/>
								<roll_car_a/>
								<roll_car_b/>
								<roll_car_c/>
							</record>
						</gridData2>
						<gridData2_sum>
							<sum_ordr_roll_cnt_a/>
							<sum_ordr_wgt_a/>
							<sum_car_prd_cnt_a/>
							<sum_roll_other_a/>
							<sum_ordr_roll_cnt_b/>
							<sum_ordr_wgt_b/>
							<sum_car_prd_cnt_b/>
							<sum_roll_other_b/>
							<sum_ordr_roll_cnt_c/>
							<sum_ordr_wgt_c/>
							<sum_car_prd_cnt_c/>
							<sum_roll_other_c/>
						</gridData2_sum>
						<gridData3>
							<record>
								<ordr_dt/>
								<fac_clsf/>
								<matr_cd/>
								<papcmpy_cd/>
								<roll_wgt/>
								<expt_roll_cnt/>
								<expt_wgt/>
								<ordr_roll_cnt/>
								<ordr_wgt/>
								<car_occr_dt/>
								<car_seq/>
								<car_prd_cnt/>
							</record>
						</gridData3>
						<gridData4>
							<record>
								<issu_dt/>
								<papcmpy_cd/>
								<matr_cd/>
								<somo_roll/>
								<somo_wgt/>
								<ord_roll/>
								<ord_wgt/>
								<car_occr_dt/>
								<car_seq/>
								<car_cnt/>
							</record>
						</gridData4>
						<papcmpy_cd>
							<record/>
						</papcmpy_cd>
					</resData>
					<tempData/>
				</root>
			</instance>
			<script type="javascript" ev:event="xforms-ready">
				<![CDATA[
					initBody();
					model.removenode("/root/resData/gridData4/record");
					model.removenode("/root/resData/gridData3/record");
					datagrid4.refresh();
					button9.disabled = true;
					button2.disabled = true;
				]]>
			</script>
			<submission id="mt_papord_5000_m" action="/mt/papord/5000" mediatype="application/x-www-form-urlencoded" method="post" resultref="/root/tempData"/>
			<submission id="mt_papord_5001_l" action="/mt/papord/5001" mediatype="application/x-www-form-urlencoded" method="post" resultref="/root/tempData"/>
			<submission id="mt_papord_5002_l" action="/mt/papord/5002" mediatype="application/x-www-form-urlencoded" method="post" ref="/root/reqData/searchData" resultref="/root/tempData"/>
			<submission id="mt_papord_5003_l" action="/mt/papord/5003" mediatype="application/x-www-form-urlencoded" method="post" ref="/root/reqData/baljuSearchData" resultref="/root/tempData"/>
			<submission id="mt_papord_5004_a" action="/mt/papord/5004" mediatype="application/x-www-form-urlencoded" method="post" ref="/root/reqData/reqForm" resultref="/root/tempData"/>
			<submission id="mt_papord_5005_l" action="/mt/papord/5005" mediatype="application/x-www-form-urlencoded" method="post" ref="/root/reqData/searchData/fac_clsf" resultref="/root/tempData"/>
			<submission id="mt_papord_5006_l" action="/mt/papord/5006" mediatype="application/x-www-form-urlencoded" method="post" ref="/root/reqData/searchData" resultref="/root/tempData"/>
			<submission id="mt_papord_5007_l" action="/mt/papord/5007" mediatype="application/x-www-form-urlencoded" method="post" ref="/root/reqData/searchData" resultref="/root/tempData"/>
			<submission id="mt_papord_5008_l" action="/mt/papord/5008" mediatype="application/x-www-form-urlencoded" method="post" ref="/root/reqData/searchData" resultref="/root/tempData"/>
		</model>
		<script type="javascript">
			<![CDATA[
				function initBody() {
					model1.send("mt_papord_5000_m");		//공장콤보
					model1.copyNode("/root/initData/comboSet/fac_clsf","/root/tempData/fac_clsf");
					model1.copyNode("/root/resData/gridData2","/root/tempData/papcmpy_cd");
					
					//model1.send("mt_papord_5001_l");		//제지사별발주량 ready - 제지사 조회
					//model1.copyNode("/root/resData/gridData2","/root/tempData/gridData2");
					
					
					model.setValue("/root/reqData/searchData/issu_dt_fr", "20090907");
					model.setValue("/root/reqData/searchData/issu_dt_to", "20090913");
					model.setValue("/root/reqData/searchData/fac_clsf", "25");
					
					model.setValue("/root/reqData/searchData/issu_dt_fr", "20091102");
					model.setValue("/root/reqData/searchData/issu_dt_to", "20091108");
					model.setValue("/root/reqData/searchData/fac_clsf", "10");
					
					datagrid1.initStyle("background-color");
					datagrid2.initStyle("background-color");
					model1.refresh();
				}
				
				function funBjSearch(){
					if(!commReqCheck("group1")) return;
					
					model1.send("mt_papord_5005_l");
					model1.makeValue("/root/reqData/facpaperamss/std_ewh_roll_cnt_a",model1.getValue("/root/tempData/conf/std_ewh_roll_cnt_a"));
					model1.makeValue("/root/reqData/facpaperamss/std_ewh_roll_cnt_b",model1.getValue("/root/tempData/conf/std_ewh_roll_cnt_b"));
					model1.makeValue("/root/reqData/facpaperamss/std_ewh_roll_cnt_c",model1.getValue("/root/tempData/conf/std_ewh_roll_cnt_c"));
					model1.makeValue("/root/reqData/facpaperamss/std_ewh_wgt_a",model1.getValue("/root/tempData/conf/std_ewh_wgt_a"));
					model1.makeValue("/root/reqData/facpaperamss/std_ewh_wgt_b",model1.getValue("/root/tempData/conf/std_ewh_wgt_b"));
					model1.makeValue("/root/reqData/facpaperamss/std_ewh_wgt_c",model1.getValue("/root/tempData/conf/std_ewh_wgt_c"));
					model1.makeValue("/root/reqData/facpaperamss/amss_wgt_a",model1.getValue("/root/tempData/conf/amss_wgt_a"));
					model1.makeValue("/root/reqData/facpaperamss/amss_wgt_b",model1.getValue("/root/tempData/conf/amss_wgt_b"));
					model1.makeValue("/root/reqData/facpaperamss/amss_wgt_c",model1.getValue("/root/tempData/conf/amss_wgt_c"));
					model1.makeValue("/root/reqData/facpaperamss/roll_cnt_a",model1.getValue("/root/tempData/conf/roll_cnt_a"));
					model1.makeValue("/root/reqData/facpaperamss/roll_cnt_b",model1.getValue("/root/tempData/conf/roll_cnt_b"));
					model1.makeValue("/root/reqData/facpaperamss/roll_cnt_c",model1.getValue("/root/tempData/conf/roll_cnt_c"));
					model1.makeValue("/root/reqData/facpaperamss/max_ewh_wgt",model1.getValue("/root/tempData/conf/max_ewh_wgt"));
					
					
					model1.send("mt_papord_5006_l");
					model1.copyNode("/root/resData/gridData1","/root/tempData/gridData1");
					model1.copyNode("/root/resData/gridData2","/root/tempData/gridData2");
					model1.copyNode("/root/resData/gridData3","/root/tempData/gridData3");
					model1.copyNode("/root/resData/gridData4","/root/tempData/gridData4");
					
					datagrid1.refresh();
					datagrid2.refresh();
					datagrid3.refresh();
					datagrid4.refresh();
					/*
					datagrid1.allStyle("data", "background-color") = "#FFFFFF";
					
					var nodeList = instance1.selectNodes("/root/resData/gridData1/record");
					for (var i=0; i<nodeList.length; i++){
						//nodeList.item(i).getElementsByTagName("ordr_roll_cnt_a").item(0).value = nodeList.item(i).getElementsByTagName("fix_roll_cnt_a").item(0).value;
						//nodeList.item(i).getElementsByTagName("ordr_roll_cnt_b").item(0).value = nodeList.item(i).getElementsByTagName("fix_roll_cnt_b").item(0).value;
						//nodeList.item(i).getElementsByTagName("ordr_roll_cnt_c").item(0).value = nodeList.item(i).getElementsByTagName("fix_roll_cnt_c").item(0).value;
						//nodeList.item(i).getElementsByTagName("ordr_wgt_a").item(0).value = nodeList.item(i).getElementsByTagName("fix_wgt_a").item(0).value;
						//nodeList.item(i).getElementsByTagName("ordr_wgt_b").item(0).value = nodeList.item(i).getElementsByTagName("fix_wgt_b").item(0).value;
						//nodeList.item(i).getElementsByTagName("ordr_wgt_c").item(0).value = nodeList.item(i).getElementsByTagName("fix_wgt_c").item(0).value;
						
						
						if (nodeList.item(i).getElementsByTagName("same_a").item(0).value != "Y"){
							datagrid1.cellstyle("background-color", (i + 3), 9) = "#AAAAFF";
							datagrid1.cellstyle("background-color", (i + 3), 10) = "#AAAAFF";
						}
						if (nodeList.item(i).getElementsByTagName("same_b").item(0).value != "Y"){
							datagrid1.cellstyle("background-color", (i + 3), 11) = "#AAAAFF";
							datagrid1.cellstyle("background-color", (i + 3), 12) = "#AAAAFF";
						}
						if (nodeList.item(i).getElementsByTagName("same_c").item(0).value != "Y"){
							datagrid1.cellstyle("background-color", (i + 3), 13) = "#AAAAFF";
							datagrid1.cellstyle("background-color", (i + 3), 14) = "#AAAAFF";
						}
						
					}
					*/
					model.setValue("/root/reqData/searchData/gubun", "U");
					
					funJGResult();
					/*
					datagrid1.colHidden(datagrid1.colRef("fix_roll_cnt_a")) = false;
					datagrid1.colHidden(datagrid1.colRef("fix_wgt_a")) = false;
					datagrid1.colHidden(datagrid1.colRef("fix_roll_cnt_b")) = false;
					datagrid1.colHidden(datagrid1.colRef("fix_wgt_b")) = false;
					datagrid1.colHidden(datagrid1.colRef("fix_roll_cnt_c")) = false;
					datagrid1.colHidden(datagrid1.colRef("fix_wgt_c")) = false;
						
					datagrid1.colHidden(datagrid1.colRef("ordr_roll_cnt_a")) = true;
					datagrid1.colHidden(datagrid1.colRef("ordr_wgt_a")) = true;
					datagrid1.colHidden(datagrid1.colRef("ordr_roll_cnt_b")) = true;
					datagrid1.colHidden(datagrid1.colRef("ordr_wgt_b")) = true;
					datagrid1.colHidden(datagrid1.colRef("ordr_roll_cnt_c")) = true;
					datagrid1.colHidden(datagrid1.colRef("ordr_wgt_c")) = true;
					*/
				}
				
				function funSearch() {
					//필수항목 체크
					if(!commReqCheck("group1")) return;
					
					model1.send("mt_papord_5005_l");
					model1.makeValue("/root/reqData/facpaperamss/std_ewh_roll_cnt_a",model1.getValue("/root/tempData/conf/std_ewh_roll_cnt_a"));
					model1.makeValue("/root/reqData/facpaperamss/std_ewh_roll_cnt_b",model1.getValue("/root/tempData/conf/std_ewh_roll_cnt_b"));
					model1.makeValue("/root/reqData/facpaperamss/std_ewh_roll_cnt_c",model1.getValue("/root/tempData/conf/std_ewh_roll_cnt_c"));
					model1.makeValue("/root/reqData/facpaperamss/std_ewh_wgt_a",model1.getValue("/root/tempData/conf/std_ewh_wgt_a"));
					model1.makeValue("/root/reqData/facpaperamss/std_ewh_wgt_b",model1.getValue("/root/tempData/conf/std_ewh_wgt_b"));
					model1.makeValue("/root/reqData/facpaperamss/std_ewh_wgt_c",model1.getValue("/root/tempData/conf/std_ewh_wgt_c"));
					model1.makeValue("/root/reqData/facpaperamss/amss_wgt_a",model1.getValue("/root/tempData/conf/amss_wgt_a"));
					model1.makeValue("/root/reqData/facpaperamss/amss_wgt_b",model1.getValue("/root/tempData/conf/amss_wgt_b"));
					model1.makeValue("/root/reqData/facpaperamss/amss_wgt_c",model1.getValue("/root/tempData/conf/amss_wgt_c"));
					model1.makeValue("/root/reqData/facpaperamss/roll_cnt_a",model1.getValue("/root/tempData/conf/roll_cnt_a"));
					model1.makeValue("/root/reqData/facpaperamss/roll_cnt_b",model1.getValue("/root/tempData/conf/roll_cnt_b"));
					model1.makeValue("/root/reqData/facpaperamss/roll_cnt_c",model1.getValue("/root/tempData/conf/roll_cnt_c"));
					model1.makeValue("/root/reqData/facpaperamss/max_ewh_wgt",model1.getValue("/root/tempData/conf/max_ewh_wgt"));

					model1.copyNode("/root/resData/papcmpy_cd", "/root/tempData/papcmpy_cd");
					
					model1.send("mt_papord_5002_l");
					model1.copyNode("/root/resData/gridData1","/root/tempData/gridData1");
					
					model1.copyNode("/root/resData/gridData2","/root/tempData/gridData2");
					
					datagrid1.refresh();
					datagrid2.refresh();
					for (var i=datagrid1.fixedRows; i<datagrid1.rows; i++){
						datagrid1.cellStyle("background-color", datagrid1.fixedRows, datagrid1.fixedCols, datagrid1.rows-1, datagrid1.cols-1) = "#FFFFFF";
					}
					for (var i=datagrid2.fixedRows; i<datagrid2.rows; i++){
						datagrid2.cellStyle("background-color", datagrid2.fixedRows, datagrid2.fixedCols, datagrid2.rows-1, datagrid2.cols-1) = "#FFFFFF";
					}
					//for (var i=datagrid1.fixedRows; i<datagrid1.rows; i++){
					/*	
					datagrid1.colHidden(datagrid1.colRef("fix_roll_cnt_a")) = true;
					datagrid1.colHidden(datagrid1.colRef("fix_wgt_a")) = true;
					datagrid1.colHidden(datagrid1.colRef("fix_roll_cnt_b")) = true;
					datagrid1.colHidden(datagrid1.colRef("fix_wgt_b")) = true;
					datagrid1.colHidden(datagrid1.colRef("fix_roll_cnt_c")) = true;
					datagrid1.colHidden(datagrid1.colRef("fix_wgt_c")) = true;
						
					datagrid1.colHidden(datagrid1.colRef("ordr_roll_cnt_a")) = false;
					datagrid1.colHidden(datagrid1.colRef("ordr_wgt_a")) = false;
					datagrid1.colHidden(datagrid1.colRef("ordr_roll_cnt_b")) = false;
					datagrid1.colHidden(datagrid1.colRef("ordr_wgt_b")) = false;
					datagrid1.colHidden(datagrid1.colRef("ordr_roll_cnt_c")) = false;
					datagrid1.colHidden(datagrid1.colRef("ordr_wgt_c")) = false;
					*/
					//}
					
					for (var i=datagrid2.fixedRows; i<datagrid2.rows; i++){
						if (datagrid2.valueMatrix(i, datagrid2.colRef("matr_cd_a")) == "0000000"){
							datagrid2.isReadOnly(i, datagrid2.colRef("matr_cd_a"), i, datagrid2.colRef("matr_cd_a") + 4) = true;
							datagrid2.cellStyle("background-color", i, datagrid2.colRef("matr_cd_a") + 2) = "#EEEEEE";
							datagrid2.cellStyle("background-color", i, datagrid2.colRef("matr_cd_a") + 3) = "#EEEEEE";
							datagrid2.cellStyle("background-color", i, datagrid2.colRef("matr_cd_a") + 4) = "#EEEEEE";
						}
						if (datagrid2.valueMatrix(i, datagrid2.colRef("matr_cd_b")) == "0000000"){
							datagrid2.isReadOnly(i, datagrid2.colRef("matr_cd_b"), i, datagrid2.colRef("matr_cd_b") + 4) = true;
							datagrid2.cellStyle("background-color", i, datagrid2.colRef("matr_cd_b") + 2) = "#EEEEEE";
							datagrid2.cellStyle("background-color", i, datagrid2.colRef("matr_cd_b") + 3) = "#EEEEEE";
							datagrid2.cellStyle("background-color", i, datagrid2.colRef("matr_cd_b") + 4) = "#EEEEEE";
						}
						if (datagrid2.valueMatrix(i, datagrid2.colRef("matr_cd_c")) == "0000000"){
							datagrid2.isReadOnly(i, datagrid2.colRef("matr_cd_c"), i, datagrid2.colRef("matr_cd_c") + 4) = true;
							datagrid2.cellStyle("background-color", i, datagrid2.colRef("matr_cd_c") + 2) = "#EEEEEE";
							datagrid2.cellStyle("background-color", i, datagrid2.colRef("matr_cd_c") + 3) = "#EEEEEE";
							datagrid2.cellStyle("background-color", i, datagrid2.colRef("matr_cd_c") + 4) = "#EEEEEE";
						}
					}
					
					model.setValue("/root/reqData/searchData/gubun", "I");
					
					funJGResult();
					button9.disabled = false;
					button2.disabled = false;
				}
				
				function f_makeResult(iRow){
					var jg_roll_cnt_a      = 0;    //현재고롤A
					var jg_wgt_a           = 0;    //현재고중량A
					var jg_roll_cnt_b      = 0;    //현재고롤B
					var jg_wgt_b           = 0;    //현재고중량B
					var jg_roll_cnt_c      = 0;    //현재고롤C
					var jg_wgt_c           = 0;    //현재고중량C
					var somo_cnt_a         = 0;    //소모롤A
					var somo_wgt_a         = 0;    //소모중량A
					var somo_cnt_b         = 0;    //소모롤B
					var somo_wgt_b         = 0;    //소모중량B
					var somo_cnt_c         = 0;    //소모롤C
					var somo_wgt_c         = 0;    //소모중량C
					var ordr_roll_cnt_a    = 0;    //발주롤A
					var ordr_wgt_a         = 0;    //발주중량A
					var ordr_roll_cnt_b    = 0;    //발주롤B
					var ordr_wgt_b         = 0;    //발주중량B
					var ordr_roll_cnt_c    = 0;    //발주롤C
					var ordr_wgt_c         = 0;    //발주중량C
					var balju_ratio        = 0;    //발주포함수용비율
					var bi_roll_cnt_a      = 0;    //비축롤A
					var bi_wgt_a      	   = 0;    //비축중량A
					var bi_roll_cnt_b      = 0;    //비축롤B
					var bi_wgt_b      	   = 0;    //비축중량B
					var bi_roll_cnt_c      = 0;    //비축롤C
					var bi_wgt_c      	   = 0;    //비축중량C
					
					var max_ewh_wgt      	= 0;
					var std_roll_cnt_a		= 0;
					var std_roll_cnt_b		= 0;
					var std_roll_cnt_c		= 0;
					
					var roll_ratio_a       = 0;
					var roll_ratio_b       = 0;
					var roll_ratio_c       = 0;
					
					var roll_cnt_a         = 0;    //현재고롤A(temp)
					var wgt_a              = 0;    //현재고중량A(temp)
					var roll_cnt_b         = 0;    //현재고롤B(temp)
					var wgt_b              = 0;    //현재고중량B(temp)
					var roll_cnt_c         = 0;    //현재고롤C(temp)
					var wgt_c              = 0;    //현재고중량C(temp)
					
					max_ewh_wgt 	= parseInt(model1.getValue("/root/reqData/facpaperamss/max_ewh_wgt"));
					std_roll_cnt_a	= parseInt(model1.getValue("/root/reqData/facpaperamss/std_ewh_wgt_a"));
					std_roll_cnt_b	= parseInt(model1.getValue("/root/reqData/facpaperamss/std_ewh_wgt_b"));
					std_roll_cnt_c	= parseInt(model1.getValue("/root/reqData/facpaperamss/std_ewh_wgt_c"));
					
					datagrid1.valueMatrix(iRow, datagrid1.colRef("mat_wgt")) = max_ewh_wgt;
					
					/*현재고 중량, 롤*/
					jg_roll_cnt_a      = eval(datagrid1.valueMatrix(iRow, datagrid1.colRef("jg_roll_cnt_a")));
					jg_wgt_a           = eval(datagrid1.valueMatrix(iRow, datagrid1.colRef("jg_wgt_a")));
					jg_roll_cnt_b      = eval(datagrid1.valueMatrix(iRow, datagrid1.colRef("jg_roll_cnt_b")));
					jg_wgt_b           = eval(datagrid1.valueMatrix(iRow, datagrid1.colRef("jg_wgt_b")));
					jg_roll_cnt_c      = eval(datagrid1.valueMatrix(iRow, datagrid1.colRef("jg_roll_cnt_c")));
					jg_wgt_c           = eval(datagrid1.valueMatrix(iRow, datagrid1.colRef("jg_wgt_c")));
					/* 비축	*/
					bi_roll_cnt_a		= eval(datagrid1.valueMatrix(iRow, datagrid1.colRef("bi_roll_cnt_a")));
					bi_roll_cnt_b		= eval(datagrid1.valueMatrix(iRow, datagrid1.colRef("bi_roll_cnt_b")));
					bi_roll_cnt_c		= eval(datagrid1.valueMatrix(iRow, datagrid1.colRef("bi_roll_cnt_c")));
					bi_wgt_a			= eval(datagrid1.valueMatrix(iRow, datagrid1.colRef("bi_wgt_a")));
					bi_wgt_b			= eval(datagrid1.valueMatrix(iRow, datagrid1.colRef("bi_wgt_b")));
					bi_wgt_c			= eval(datagrid1.valueMatrix(iRow, datagrid1.colRef("bi_wgt_c")));
					
					/*소모중량, 롤*/
					somo_cnt_a         = eval(datagrid1.valueMatrix(iRow, datagrid1.colRef("somo_cnt_a")));
					somo_wgt_a         = eval(datagrid1.valueMatrix(iRow, datagrid1.colRef("somo_wgt_a")));
					somo_cnt_b         = eval(datagrid1.valueMatrix(iRow, datagrid1.colRef("somo_cnt_b")));
					somo_wgt_b         = eval(datagrid1.valueMatrix(iRow, datagrid1.colRef("somo_wgt_b")));
					somo_cnt_c         = eval(datagrid1.valueMatrix(iRow, datagrid1.colRef("somo_cnt_c")));
					somo_wgt_c         = eval(datagrid1.valueMatrix(iRow, datagrid1.colRef("somo_wgt_c")));
						
					/*발주중량, 롤*/
					ordr_roll_cnt_a    = eval(datagrid1.valueMatrix(iRow, datagrid1.colRef("ordr_roll_cnt_a")));
					ordr_wgt_a         = eval(datagrid1.valueMatrix(iRow, datagrid1.colRef("ordr_wgt_a")));
					ordr_roll_cnt_b    = eval(datagrid1.valueMatrix(iRow, datagrid1.colRef("ordr_roll_cnt_b")));
					ordr_wgt_b         = eval(datagrid1.valueMatrix(iRow, datagrid1.colRef("ordr_wgt_b")));
					ordr_roll_cnt_c    = eval(datagrid1.valueMatrix(iRow, datagrid1.colRef("ordr_roll_cnt_c")));
					ordr_wgt_c         = eval(datagrid1.valueMatrix(iRow, datagrid1.colRef("ordr_wgt_c")));

						
					/***************************************************************************************
					* 다음레코드의 현재고 =
					*      현재고 + 비축 - 소모 + 발주
					****************************************************************************************/
					roll_cnt_a         = (jg_roll_cnt_a + bi_roll_cnt_a) - somo_cnt_a + ordr_roll_cnt_a;
					wgt_a              = (jg_wgt_a + bi_wgt_a)      - somo_wgt_a + ordr_wgt_a;
					roll_cnt_b         = (jg_roll_cnt_b + bi_roll_cnt_b) - somo_cnt_b + ordr_roll_cnt_b;
					wgt_b              = (jg_wgt_b + bi_wgt_b)      - somo_wgt_b + ordr_wgt_b;
					roll_cnt_c         = (jg_roll_cnt_c + bi_roll_cnt_c) - somo_cnt_c + ordr_roll_cnt_c;
					wgt_c              = (jg_wgt_c + bi_wgt_c)      - somo_wgt_c + ordr_wgt_c;
					
					//roll_cnt_a         = (jg_roll_cnt_a ) - somo_cnt_a + ordr_roll_cnt_a;
					//wgt_a              = (jg_wgt_a )      - somo_wgt_a + ordr_wgt_a;
					//roll_cnt_b         = (jg_roll_cnt_b ) - somo_cnt_b + ordr_roll_cnt_b;
					//wgt_b              = (jg_wgt_b )      - somo_wgt_b + ordr_wgt_b;
					//roll_cnt_c         = (jg_roll_cnt_c ) - somo_cnt_c + ordr_roll_cnt_c;
					//wgt_c              = (jg_wgt_c )      - somo_wgt_c + ordr_wgt_c;
					
					roll_ratio_a       = (wgt_a / std_roll_cnt_a) * 100;
					roll_ratio_b       = (wgt_b / std_roll_cnt_b) * 100;
					roll_ratio_c       = (wgt_c / std_roll_cnt_c) * 100;

					roll_ratio_a = roll_ratio_a.GetRound(-3,0);
					roll_ratio_b = roll_ratio_b.GetRound(-3,0);
					roll_ratio_c = roll_ratio_c.GetRound(-3,0);
					
					datagrid1.valueMatrix(iRow, datagrid1.colRef("tot_wgt_a")) = roll_cnt_a;
					datagrid1.valueMatrix(iRow, datagrid1.colRef("tot_wgt_b")) = roll_cnt_b;
					datagrid1.valueMatrix(iRow, datagrid1.colRef("tot_wgt_c")) = roll_cnt_c;
					//model1.setValue("/root/resData/gridData1/record["+(i)+"]/tot_wgt",(wgt_a + wgt_b + wgt_c));
					
					datagrid1.valueMatrix(iRow, datagrid1.colRef("balju_ratio_a")) = roll_ratio_a + "%";
					datagrid1.valueMatrix(iRow, datagrid1.colRef("balju_ratio_b")) = roll_ratio_b + "%";
					datagrid1.valueMatrix(iRow, datagrid1.colRef("balju_ratio_c")) = roll_ratio_c + "%";
					
					datagrid1.valueMatrix(iRow, datagrid1.colRef("balju_ratio_tot")) = Math.round(((wgt_a + wgt_b + wgt_c) / max_ewh_wgt) * 100, 2) + "%";
					
					datagrid1.valueMatrix(iRow + 1, datagrid1.colRef("jg_roll_cnt_a")) 	= roll_cnt_a;
					datagrid1.valueMatrix(iRow + 1, datagrid1.colRef("jg_wgt_a")) 		= wgt_a;
					datagrid1.valueMatrix(iRow + 1, datagrid1.colRef("jg_roll_cnt_b"))	= roll_cnt_b;
					datagrid1.valueMatrix(iRow + 1, datagrid1.colRef("jg_wgt_b"))		= wgt_b;
					datagrid1.valueMatrix(iRow + 1, datagrid1.colRef("jg_roll_cnt_c"))	= roll_cnt_c;
					datagrid1.valueMatrix(iRow + 1, datagrid1.colRef("jg_wgt_c"))		= wgt_c;
					
					if (datagrid1.valueMatrix(iRow + 1, datagrid1.colRef("jg_roll_cnt_a")) <1){
						datagrid1.cellStyle("background-color", iRow + 1, datagrid1.colRef("jg_roll_cnt_a")) = "#000FFF";
						datagrid1.cellStyle("background-color", iRow + 1, datagrid1.colRef("jg_wgt_a")) = "#000FFF";
					} else {
						datagrid1.cellStyle("background-color", iRow + 1, datagrid1.colRef("jg_roll_cnt_a")) = "#FFFFFF";
						datagrid1.cellStyle("background-color", iRow + 1, datagrid1.colRef("jg_wgt_a")) = "#FFFFFF";
					}
					
					if (datagrid1.valueMatrix(iRow + 1, datagrid1.colRef("jg_roll_cnt_b")) <1){
						datagrid1.cellStyle("background-color", iRow + 1, datagrid1.colRef("jg_roll_cnt_b")) = "#000FFF";
						datagrid1.cellStyle("background-color", iRow + 1, datagrid1.colRef("jg_wgt_b")) = "#000FFF";
					} else {
						datagrid1.cellStyle("background-color", iRow + 1, datagrid1.colRef("jg_roll_cnt_b")) = "#FFFFFF";
						datagrid1.cellStyle("background-color", iRow + 1, datagrid1.colRef("jg_wgt_b")) = "#FFFFFF";
					}
					
					if (datagrid1.valueMatrix(iRow + 1, datagrid1.colRef("jg_roll_cnt_c")) <1){
						datagrid1.cellStyle("background-color", iRow + 1, datagrid1.colRef("jg_roll_cnt_c")) = "#000FFF";
						datagrid1.cellStyle("background-color", iRow + 1, datagrid1.colRef("jg_wgt_c")) = "#000FFF";
					} else {
						datagrid1.cellStyle("background-color", iRow + 1, datagrid1.colRef("jg_roll_cnt_c")) = "#FFFFFF";
						datagrid1.cellStyle("background-color", iRow + 1, datagrid1.colRef("jg_wgt_c")) = "#FFFFFF";
					}
				}
				
				function f_makeResult2(iRow){
					var iLimit		= datagrid1.rows- 1;
					var std_ewh_wgt_a	= eval(model1.getValue("/root/reqData/facpaperamss/std_ewh_wgt_a"));
					var std_ewh_wgt_b	= eval(model1.getValue("/root/reqData/facpaperamss/std_ewh_wgt_b"));
					var std_ewh_wgt_c	= eval(model1.getValue("/root/reqData/facpaperamss/std_ewh_wgt_c"));
					var std_ewh_roll_a	= eval(model1.getValue("/root/reqData/facpaperamss/std_ewh_roll_cnt_a"));
					var std_ewh_roll_b	= eval(model1.getValue("/root/reqData/facpaperamss/std_ewh_roll_cnt_b"));
					var std_ewh_roll_c	= eval(model1.getValue("/root/reqData/facpaperamss/std_ewh_roll_cnt_c"));
					
					var amss_a		= eval(model1.getValue("/root/reqData/facpaperamss/amss_wgt_a"));
					var amss_b		= eval(model1.getValue("/root/reqData/facpaperamss/amss_wgt_b"));
					var amss_c		= eval(model1.getValue("/root/reqData/facpaperamss/amss_wgt_c"));
					var stok_wgt_a		= 0;
					var stok_wgt_b		= 0;
					var stok_wgt_c		= 0;
					var stok_roll_a	= 0;
					var stok_roll_b	= 0;
					var stok_roll_c	= 0;
					var exp_wgt_a		= 0;
					var exp_wgt_b		= 0;
					var exp_wgt_c		= 0;
					var exp_roll_a		= 0;
					var exp_roll_b		= 0;
					var exp_roll_c		= 0;
					var jj_wgt_a		= 0;
					var jj_wgt_b		= 0;
					var jj_wgt_c		= 0;
					var jj_roll_a		= 0;
					var jj_roll_b		= 0;
					var jj_roll_c		= 0;
					var tot_exp_wgt	= 0;
					var chg_yn		= "";
					
					if (iLimit == iRow){
						return;
					}
					stok_wgt_a = eval(datagrid1.valueMatrix(iRow + 1, datagrid1.colRef("jg_wgt_a"))) - eval(datagrid1.valueMatrix(iRow + 1, datagrid1.colRef("somo_wgt_a"))) + eval(datagrid1.valueMatrix(iRow + 1, datagrid1.colRef("bi_wgt_a")));
					stok_wgt_b = eval(datagrid1.valueMatrix(iRow + 1, datagrid1.colRef("jg_wgt_b"))) - eval(datagrid1.valueMatrix(iRow + 1, datagrid1.colRef("somo_wgt_b"))) + eval(datagrid1.valueMatrix(iRow + 1, datagrid1.colRef("bi_wgt_b")));
					stok_wgt_c = eval(datagrid1.valueMatrix(iRow + 1, datagrid1.colRef("jg_wgt_c"))) - eval(datagrid1.valueMatrix(iRow + 1, datagrid1.colRef("somo_wgt_c"))) + eval(datagrid1.valueMatrix(iRow + 1, datagrid1.colRef("bi_wgt_c")));
						
					//alert(stok_wgt_a + "\n" + stok_wgt_b + "\n" + stok_wgt_c);
						
					stok_roll_a	= (stok_wgt_a / eval(datagrid1.valueMatrix(iRow + 1, datagrid1.colRef("roll_wgt_a"))) ) ;
					stok_roll_b	= (stok_wgt_b / eval(datagrid1.valueMatrix(iRow + 1, datagrid1.colRef("roll_wgt_b"))) ) ;
					stok_roll_c	= (stok_wgt_c / eval(datagrid1.valueMatrix(iRow + 1, datagrid1.colRef("roll_wgt_c"))) ) ;
						
						//stok_roll_a	= stok_wgt_a / eval(datagrid1.valueMatrix(i, datagrid1.colRef("roll_wgt_a")));
						//stok_roll_b	= stok_wgt_b / eval(datagrid1.valueMatrix(i, datagrid1.colRef("roll_wgt_b")));
						//stok_roll_c	= stok_wgt_c / eval(datagrid1.valueMatrix(i, datagrid1.colRef("roll_wgt_c")));
						
						//alert(stok_roll_a + "\n" + stok_roll_b + "\n" + stok_roll_c);
						
					exp_roll_a = Math.ceil(std_ewh_roll_a - stok_roll_a);
					exp_roll_b = Math.ceil(std_ewh_roll_b - stok_roll_b);
					exp_roll_c = Math.ceil(std_ewh_roll_c - stok_roll_c);
						
					if (eval(datagrid1.valueMatrix(iRow + 1, datagrid1.colRef("somo_wgt_a"))) == 0){
						exp_roll_a = 0;
					}
					if (eval(datagrid1.valueMatrix(iRow + 1, datagrid1.colRef("somo_wgt_b"))) == 0){
						exp_roll_b = 0;
					}
					if (eval(datagrid1.valueMatrix(iRow + 1, datagrid1.colRef("somo_wgt_c"))) == 0){
						exp_roll_c = 0;
					}
						
					//model.setValue("/root/reqData/searchData/roll_a", exp_roll_a);
					//model.setValue("/root/reqData/searchData/roll_b", exp_roll_b);
					//model.setValue("/root/reqData/searchData/roll_c", exp_roll_c);
					//model.send("mt_papord_5008_l");
					
					//datagrid1.valueMatrix(i, datagrid1.colRef("ordr_roll_cnt_a")) = model.getValue("/root/tempData/CURLIST/record/a_roll");
					//datagrid1.valueMatrix(i, datagrid1.colRef("ordr_roll_cnt_b")) = model.getValue("/root/tempData/CURLIST/record/b_roll");
					//datagrid1.valueMatrix(i, datagrid1.colRef("ordr_roll_cnt_c")) = model.getValue("/root/tempData/CURLIST/record/c_roll");
					//datagrid1.valueMatrix(i, datagrid1.colRef("ordr_wgt_a"))		= eval(datagrid1.valueMatrix(i, datagrid1.colRef("ordr_roll_cnt_a"))) * eval(datagrid1.valueMatrix(i, datagrid1.colRef("roll_wgt_a")));
					//datagrid1.valueMatrix(i, datagrid1.colRef("ordr_wgt_b"))		= eval(datagrid1.valueMatrix(i, datagrid1.colRef("ordr_roll_cnt_b"))) * eval(datagrid1.valueMatrix(i, datagrid1.colRef("roll_wgt_b")));
					//datagrid1.valueMatrix(i, datagrid1.colRef("ordr_wgt_c"))		= eval(datagrid1.valueMatrix(i, datagrid1.colRef("ordr_roll_cnt_c"))) * eval(datagrid1.valueMatrix(i, datagrid1.colRef("roll_wgt_c")));
					
					if (exp_roll_a <= 0){
						datagrid1.valueMatrix(iRow + 1, datagrid1.colRef("ordr_roll_cnt_a")) 	= 0;
						datagrid1.valueMatrix(iRow + 1, datagrid1.colRef("ordr_wgt_a"))		= 0;
					} else {
						datagrid1.valueMatrix(iRow + 1, datagrid1.colRef("ordr_roll_cnt_a")) 	= exp_roll_a;
						datagrid1.valueMatrix(iRow + 1, datagrid1.colRef("ordr_wgt_a"))		= exp_roll_a * eval(datagrid1.valueMatrix(iRow + 1, datagrid1.colRef("roll_wgt_a")));
					}
					if (exp_roll_b <= 0){
						datagrid1.valueMatrix(iRow + 1, datagrid1.colRef("ordr_roll_cnt_b")) 	= 0;
						datagrid1.valueMatrix(iRow + 1, datagrid1.colRef("ordr_wgt_b"))		= 0;
					} else {
						datagrid1.valueMatrix(iRow + 1, datagrid1.colRef("ordr_roll_cnt_b")) 	= exp_roll_b;
						datagrid1.valueMatrix(iRow + 1, datagrid1.colRef("ordr_wgt_b"))		= exp_roll_b * eval(datagrid1.valueMatrix(iRow + 1, datagrid1.colRef("roll_wgt_b")));
					}
					
					if (exp_roll_c <= 0){
						datagrid1.valueMatrix(iRow + 1, datagrid1.colRef("ordr_roll_cnt_c")) 	= 0;
						datagrid1.valueMatrix(iRow + 1, datagrid1.colRef("ordr_wgt_c"))		= 0;
					} else {
						datagrid1.valueMatrix(iRow + 1, datagrid1.colRef("ordr_roll_cnt_c")) 	= exp_roll_c;
						datagrid1.valueMatrix(iRow + 1, datagrid1.colRef("ordr_wgt_c"))		= exp_roll_c * eval(datagrid1.valueMatrix(iRow + 1, datagrid1.colRef("roll_wgt_c")));
					}
					//alert(exp_roll_a +"\n" + exp_roll_b + "\n" + exp_roll_c );
					//f_makeResult(i);
				}
				
				function funJGResult() {
					var jg_roll_cnt_a      = 0;    //현재고롤A
					var jg_wgt_a           = 0;    //현재고중량A
					var jg_roll_cnt_b      = 0;    //현재고롤B
					var jg_wgt_b           = 0;    //현재고중량B
					var jg_roll_cnt_c      = 0;    //현재고롤C
					var jg_wgt_c           = 0;    //현재고중량C
					var somo_cnt_a         = 0;    //소모롤A
					var somo_wgt_a         = 0;    //소모중량A
					var somo_cnt_b         = 0;    //소모롤B
					var somo_wgt_b         = 0;    //소모중량B
					var somo_cnt_c         = 0;    //소모롤C
					var somo_wgt_c         = 0;    //소모중량C
					var ordr_roll_cnt_a    = 0;    //발주롤A
					var ordr_wgt_a         = 0;    //발주중량A
					var ordr_roll_cnt_b    = 0;    //발주롤B
					var ordr_wgt_b         = 0;    //발주중량B
					var ordr_roll_cnt_c    = 0;    //발주롤C
					var ordr_wgt_c         = 0;    //발주중량C
					var balju_ratio        = 0;    //발주포함수용비율
					var bi_roll_cnt_a      = 0;    //비축롤A
					var bi_roll_wgt_a      = 0;    //비축중량A
					var bi_roll_cnt_b      = 0;    //비축롤B
					var bi_roll_wgt_b      = 0;    //비축중량B
					var bi_roll_cnt_c      = 0;    //비축롤C
					var bi_roll_wgt_c      = 0;    //비축중량C
					var roll_wgt_a			= 0;		//롤당중량A
					var roll_wgt_b			= 0;		//롤당중량A
					var roll_wgt_c			= 0;		//롤당중량A
					
					var max_ewh_wgt      	= 0;
					var std_wgt_a		= 0;
					var std_wgt_b		= 0;
					var std_wgt_c		= 0;
					
					var roll_ratio_a       = 0;
					var roll_ratio_b       = 0;
					var roll_ratio_c       = 0;
					
					var roll_cnt_a         = 0;    //현재고롤A(temp)
					var wgt_a              = 0;    //현재고중량A(temp)
					var roll_cnt_b         = 0;    //현재고롤B(temp)
					var wgt_b              = 0;    //현재고중량B(temp)
					var roll_cnt_c         = 0;    //현재고롤C(temp)
					var wgt_c              = 0;    //현재고중량C(temp)
					
					var rowCnt             = 0;    //Data Cnt
					
					rowCnt = datagrid1.rows;
					
					max_ewh_wgt = parseInt(model1.getValue("/root/reqData/facpaperamss/max_ewh_wgt"));
					std_wgt_a	= parseInt(model1.getValue("/root/reqData/facpaperamss/std_ewh_wgt_a"));
					std_wgt_b	= parseInt(model1.getValue("/root/reqData/facpaperamss/std_ewh_wgt_b"));
					std_wgt_c	= parseInt(model1.getValue("/root/reqData/facpaperamss/std_ewh_wgt_c"));
					
					//for (var i=datagrid1.fixedRows; i<datagrid1.rows; i++){
					//	
					//}
					
					for(var i=1; i <= (rowCnt - 3); i++) {
						/*현재고 중량, 롤*/
						jg_roll_cnt_a      = model1.getValue("/root/resData/gridData1/record["+i+"]/jg_roll_cnt_a");
						jg_wgt_a           = model1.getValue("/root/resData/gridData1/record["+i+"]/jg_wgt_a");
						jg_roll_cnt_b      = model1.getValue("/root/resData/gridData1/record["+i+"]/jg_roll_cnt_b");
						jg_wgt_b           = model1.getValue("/root/resData/gridData1/record["+i+"]/jg_wgt_b");
						jg_roll_cnt_c      = model1.getValue("/root/resData/gridData1/record["+i+"]/jg_roll_cnt_c");
						jg_wgt_c           = model1.getValue("/root/resData/gridData1/record["+i+"]/jg_wgt_c");
						
						//roll_wgt_a		= model1.getValue("/root/resData/gridData1/record["+i+"]/roll_wgt_a");
						//roll_wgt_b		= model1.getValue("/root/resData/gridData1/record["+i+"]/roll_wgt_b");
						//roll_wgt_c		= model1.getValue("/root/resData/gridData1/record["+i+"]/roll_wgt_c");
						/*비축중량, 롤*/
						//bi_roll_cnt_a      = model1.getValue("/root/resData/gridData1/record["+i+"]/bi_roll_cnt_a");
						//bi_roll_wgt_a      = model1.getValue("/root/resData/gridData1/record["+i+"]/bi_roll_wgt_a");
						//bi_roll_cnt_b      = model1.getValue("/root/resData/gridData1/record["+i+"]/bi_roll_cnt_b");
						//bi_roll_wgt_b      = model1.getValue("/root/resData/gridData1/record["+i+"]/bi_roll_wgt_b");
						//bi_roll_cnt_c      = model1.getValue("/root/resData/gridData1/record["+i+"]/bi_roll_cnt_c");
						//bi_roll_wgt_c      = model1.getValue("/root/resData/gridData1/record["+i+"]/bi_roll_wgt_c");
						
						/*소모중량, 롤*/
						somo_cnt_a         = model1.getValue("/root/resData/gridData1/record["+i+"]/somo_cnt_a");
						somo_wgt_a         = model1.getValue("/root/resData/gridData1/record["+i+"]/somo_wgt_a");
						somo_cnt_b         = model1.getValue("/root/resData/gridData1/record["+i+"]/somo_cnt_b");
						somo_wgt_b         = model1.getValue("/root/resData/gridData1/record["+i+"]/somo_wgt_b");
						somo_cnt_c         = model1.getValue("/root/resData/gridData1/record["+i+"]/somo_cnt_c");
						somo_wgt_c         = model1.getValue("/root/resData/gridData1/record["+i+"]/somo_wgt_c");
						
						/*발주중량, 롤*/
						/*
						ordr_roll_cnt_a    = model1.getValue("/root/resData/gridData1/record["+i+"]/ordr_roll_cnt_a");
						ordr_wgt_a         = model1.getValue("/root/resData/gridData1/record["+i+"]/ordr_wgt_a");
						ordr_roll_cnt_b    = model1.getValue("/root/resData/gridData1/record["+i+"]/ordr_roll_cnt_b");
						ordr_wgt_b         = model1.getValue("/root/resData/gridData1/record["+i+"]/ordr_wgt_b");
						ordr_roll_cnt_c    = model1.getValue("/root/resData/gridData1/record["+i+"]/ordr_roll_cnt_c");
						ordr_wgt_c         = model1.getValue("/root/resData/gridData1/record["+i+"]/ordr_wgt_c");
						*/
						ordr_roll_cnt_a    = model1.getValue("/root/resData/gridData1/record["+i+"]/ordr_roll_cnt_a");
						ordr_wgt_a         = model1.getValue("/root/resData/gridData1/record["+i+"]/ordr_wgt_a");
						ordr_roll_cnt_b    = model1.getValue("/root/resData/gridData1/record["+i+"]/ordr_roll_cnt_b");
						ordr_wgt_b         = model1.getValue("/root/resData/gridData1/record["+i+"]/ordr_wgt_b");
						ordr_roll_cnt_c    = model1.getValue("/root/resData/gridData1/record["+i+"]/ordr_roll_cnt_c");
						ordr_wgt_c         = model1.getValue("/root/resData/gridData1/record["+i+"]/ordr_wgt_c");
						
						/***************************************************************************************
						* 다음레코드의 현재고 =
						*      현재고 + 비축 - 소모 + 발주
						****************************************************************************************/
						/*
						roll_cnt_a         = parseInt(jg_roll_cnt_a) + parseInt(bi_roll_cnt_a) - parseInt(somo_cnt_a) + parseInt(ordr_roll_cnt_a);
						wgt_a              = parseInt(jg_wgt_a)      + parseInt(bi_roll_wgt_a) - parseInt(somo_wgt_a) + parseInt(ordr_wgt_a);
						roll_cnt_b         = parseInt(jg_roll_cnt_b) + parseInt(bi_roll_cnt_b) - parseInt(somo_cnt_b) + parseInt(ordr_roll_cnt_b);
						wgt_b              = parseInt(jg_wgt_b)      + parseInt(bi_roll_wgt_b) - parseInt(somo_wgt_b) + parseInt(ordr_wgt_b);
						roll_cnt_c         = parseInt(jg_roll_cnt_c) + parseInt(bi_roll_cnt_c) - parseInt(somo_cnt_c) + parseInt(ordr_roll_cnt_c);
						wgt_c              = parseInt(jg_wgt_c)      + parseInt(bi_roll_wgt_c) - parseInt(somo_wgt_c) + parseInt(ordr_wgt_c);
						*/
						
						roll_cnt_a         = parseInt(jg_roll_cnt_a) - parseInt(somo_cnt_a) + parseInt(ordr_roll_cnt_a);
						wgt_a              = parseInt(jg_wgt_a)      - parseInt(somo_wgt_a) + parseInt(ordr_wgt_a);
						roll_cnt_b         = parseInt(jg_roll_cnt_b) - parseInt(somo_cnt_b) + parseInt(ordr_roll_cnt_b);
						wgt_b              = parseInt(jg_wgt_b)      - parseInt(somo_wgt_b) + parseInt(ordr_wgt_b);
						roll_cnt_c         = parseInt(jg_roll_cnt_c) - parseInt(somo_cnt_c) + parseInt(ordr_roll_cnt_c);
						wgt_c              = parseInt(jg_wgt_c)      - parseInt(somo_wgt_c) + parseInt(ordr_wgt_c);
						
						roll_ratio_a       = (wgt_a / std_wgt_a) * 100;
						roll_ratio_b       = (wgt_b / std_wgt_b) * 100;
						roll_ratio_c       = (wgt_c / std_wgt_c) * 100;

						roll_ratio_a = roll_ratio_a.GetRound(-3,0);
						roll_ratio_b = roll_ratio_b.GetRound(-3,0);
						roll_ratio_c = roll_ratio_c.GetRound(-3,0);
						//datagrid1.valueMatrix(i, datagrid1.colRef("mat_wgt")) = max_ewh_wgt;
						model1.setValue("/root/resData/gridData1/record["+(i)+"]/max_wgt",max_ewh_wgt);
						model1.setValue("/root/resData/gridData1/record["+(i)+"]/tot_wgt_a", wgt_a);
						model1.setValue("/root/resData/gridData1/record["+(i)+"]/tot_wgt_b", wgt_b);
						model1.setValue("/root/resData/gridData1/record["+(i)+"]/tot_wgt_c", wgt_c);
						
						model1.setValue("/root/resData/gridData1/record["+(i)+"]/balju_ratio_a",roll_ratio_a + "%");
						model1.setValue("/root/resData/gridData1/record["+(i)+"]/balju_ratio_b",roll_ratio_b + "%");
						model1.setValue("/root/resData/gridData1/record["+(i)+"]/balju_ratio_c",roll_ratio_c + "%");
						model1.setValue("/root/resData/gridData1/record["+(i)+"]/balju_ratio_tot",Math.round(((wgt_a + wgt_b + wgt_c) / max_ewh_wgt) * 100, 2) + "%");
						//datagrid1.valueMatrix(iRow, datagrid1.colRef("balju_ratio_tot")) = Math.round(((wgt_a + wgt_b + wgt_c) / max_ewh_wgt) * 100, 2) + "%";
						
						if(i == (rowCnt - 3)) {
							model1.setValue("/root/resData/gridData1/record["+(i)+"]/jg_roll_cnt_a",roll_cnt_a);
							model1.setValue("/root/resData/gridData1/record["+(i)+"]/jg_wgt_a",wgt_a);
							model1.setValue("/root/resData/gridData1/record["+(i)+"]/jg_roll_cnt_b",roll_cnt_b);
							model1.setValue("/root/resData/gridData1/record["+(i)+"]/jg_wgt_b",wgt_b);
							model1.setValue("/root/resData/gridData1/record["+(i)+"]/jg_roll_cnt_c",roll_cnt_c);
							model1.setValue("/root/resData/gridData1/record["+(i)+"]/jg_wgt_c",wgt_c);
						} else {
							model1.setValue("/root/resData/gridData1/record["+(i+1)+"]/jg_roll_cnt_a",roll_cnt_a);
							model1.setValue("/root/resData/gridData1/record["+(i+1)+"]/jg_wgt_a",wgt_a);
							model1.setValue("/root/resData/gridData1/record["+(i+1)+"]/jg_roll_cnt_b",roll_cnt_b);
							model1.setValue("/root/resData/gridData1/record["+(i+1)+"]/jg_wgt_b",wgt_b);
							model1.setValue("/root/resData/gridData1/record["+(i+1)+"]/jg_roll_cnt_c",roll_cnt_c);
							model1.setValue("/root/resData/gridData1/record["+(i+1)+"]/jg_wgt_c",wgt_c);
						}
						
						
					}
				}
				
				function funMakeOrder(row_1, row_2){
					var nodeRow_1 = row_1 - 3;
					var nodeRow_2 = row_2 - 3;
					var nodeList1 = instance1.selectNodes("/root/resData/gridData1/record");
					var nodeList2 = instance1.selectNodes("/root/resData/gridData2/record");
					
					//alert(nodeList1.item(nodeRow_1).getElementsByTagName("somo_wgt_a").item(0).value);
					var std_ewh_wgt_a = eval(model.getValue("/root/reqData/facpaperamss/std_ewh_wgt_a"));
					var std_ewh_wgt_b = eval(model.getValue("/root/reqData/facpaperamss/std_ewh_wgt_b"));
					var std_ewh_wgt_c = eval(model.getValue("/root/reqData/facpaperamss/std_ewh_wgt_c"));
					
					var ordr_wgt_a = std_ewh_wgt_a - (eval(nodeList1.item(nodeRow_1).getElementsByTagName("jg_wgt_a").item(0).value) - eval(nodeList1.item(nodeRow_1).getElementsByTagName("somo_wgt_a").item(0).value));
					var ordr_wgt_b = std_ewh_wgt_b - (eval(nodeList1.item(nodeRow_1).getElementsByTagName("jg_wgt_b").item(0).value) - eval(nodeList1.item(nodeRow_1).getElementsByTagName("somo_wgt_b").item(0).value));
					var ordr_wgt_c = std_ewh_wgt_c - (eval(nodeList1.item(nodeRow_1).getElementsByTagName("jg_wgt_c").item(0).value) - eval(nodeList1.item(nodeRow_1).getElementsByTagName("somo_wgt_c").item(0).value));
					
					var ordr_roll_a = Math.floor(ordr_wgt_a / eval(nodeList1.item(nodeRow_1).getElementsByTagName("roll_wgt_a").item(0).value));
					var ordr_roll_b = Math.floor(ordr_wgt_b / eval(nodeList1.item(nodeRow_1).getElementsByTagName("roll_wgt_b").item(0).value));
					var ordr_roll_c = Math.floor(ordr_wgt_c / eval(nodeList1.item(nodeRow_1).getElementsByTagName("roll_wgt_c").item(0).value));
					
					//alert(std_ewh_wgt_a + "\n" + std_ewh_wgt_b + "\n" + std_ewh_wgt_c);
					//alert(nodeList1.item(nodeRow_1).getElementsByTagName("jg_wgt_a").item(0).value + "\n" + nodeList1.item(nodeRow_1).getElementsByTagName("jg_wgt_b").item(0).value + "\n" + nodeList1.item(nodeRow_1).getElementsByTagName("jg_wgt_c").item(0).value);
					//alert(nodeList1.item(nodeRow_1).getElementsByTagName("somo_wgt_a").item(0).value + "\n" + nodeList1.item(nodeRow_1).getElementsByTagName("somo_wgt_b").item(0).value + "\n" + nodeList1.item(nodeRow_1).getElementsByTagName("somo_wgt_c").item(0).value);
					
					if (std_ewh_wgt_a == 0){
						nodeList2.item(nodeRow_2).getElementsByTagName("ordr_roll_a").item(0).value = 0;
						nodeList2.item(nodeRow_2).getElementsByTagName("ordr_wgt_a").item(0).value = 0;
					} else {
							nodeList2.item(nodeRow_2).getElementsByTagName("ordr_roll_a").item(0).value = ordr_roll_a;
						nodeList2.item(nodeRow_2).getElementsByTagName("ordr_wgt_a").item(0).value = ordr_wgt_a;
					}
					if (std_ewh_wgt_b == 0){
						nodeList2.item(nodeRow_2).getElementsByTagName("ordr_roll_b").item(0).value = 0;
						nodeList2.item(nodeRow_2).getElementsByTagName("ordr_wgt_b").item(0).value = 0;
					} else {
						nodeList2.item(nodeRow_2).getElementsByTagName("ordr_roll_b").item(0).value = ordr_roll_b;
						nodeList2.item(nodeRow_2).getElementsByTagName("ordr_wgt_b").item(0).value = ordr_wgt_b
					}
					if (std_ewh_wgt_c == 0){
						nodeList2.item(nodeRow_2).getElementsByTagName("ordr_roll_c").item(0).value = 0;
						nodeList2.item(nodeRow_2).getElementsByTagName("ordr_wgt_c").item(0).value = 0;
					} else {
						nodeList2.item(nodeRow_2).getElementsByTagName("ordr_roll_c").item(0).value = ordr_roll_c;
						nodeList2.item(nodeRow_2).getElementsByTagName("ordr_wgt_c").item(0).value = ordr_wgt_c;
					}
					
					/*
					nodeList2.item(nodeRow_2).getElementsByTagName("ordr_roll_a").item(0).value = nodeList1.item(nodeRow_1).getElementsByTagName("somo_cnt_a").item(0).value;
					nodeList2.item(nodeRow_2).getElementsByTagName("ordr_wgt_a").item(0).value = nodeList1.item(nodeRow_1).getElementsByTagName("somo_wgt_a").item(0).value;
					nodeList2.item(nodeRow_2).getElementsByTagName("ordr_roll_b").item(0).value = nodeList1.item(nodeRow_1).getElementsByTagName("somo_cnt_b").item(0).value;
					nodeList2.item(nodeRow_2).getElementsByTagName("ordr_wgt_b").item(0).value = nodeList1.item(nodeRow_1).getElementsByTagName("somo_wgt_b").item(0).value;
					nodeList2.item(nodeRow_2).getElementsByTagName("ordr_roll_c").item(0).value = nodeList1.item(nodeRow_1).getElementsByTagName("somo_cnt_c").item(0).value;
					nodeList2.item(nodeRow_2).getElementsByTagName("ordr_wgt_c").item(0).value = nodeList1.item(nodeRow_1).getElementsByTagName("somo_wgt_c").item(0).value;
					*/
					nodeList2.item(nodeRow_2).getElementsByTagName("somo_roll_a").item(0).value = nodeList1.item(nodeRow_1).getElementsByTagName("somo_cnt_a").item(0).value;
					nodeList2.item(nodeRow_2).getElementsByTagName("somo_wgt_a").item(0).value = nodeList1.item(nodeRow_1).getElementsByTagName("somo_wgt_a").item(0).value;
					nodeList2.item(nodeRow_2).getElementsByTagName("somo_roll_b").item(0).value = nodeList1.item(nodeRow_1).getElementsByTagName("somo_cnt_b").item(0).value;
					nodeList2.item(nodeRow_2).getElementsByTagName("somo_wgt_b").item(0).value = nodeList1.item(nodeRow_1).getElementsByTagName("somo_wgt_b").item(0).value;
					nodeList2.item(nodeRow_2).getElementsByTagName("somo_roll_c").item(0).value = nodeList1.item(nodeRow_1).getElementsByTagName("somo_cnt_c").item(0).value;
					nodeList2.item(nodeRow_2).getElementsByTagName("somo_wgt_c").item(0).value = nodeList1.item(nodeRow_1).getElementsByTagName("somo_wgt_c").item(0).value;
					
					nodeList2.item(nodeRow_2).getElementsByTagName("issu_dt").item(0).value = nodeList1.item(nodeRow_1).getElementsByTagName("issu_dt").item(0).value;

					funJGResult();
					
					datagrid1.refresh();
					//datagrid2.refresh();
				}
				
				function funPapcmpySearch() {
					var iRowIndex = datagrid1.row;
					var sIssuDt = "";		//발행일자
					var sFacClsf = "";	//공장구분
					
					sIssuDt = datagrid1.valueMatrix(iRowIndex,datagrid1.colRef("issu_dt"));
					sFacClsf = datagrid1.valueMatrix(iRowIndex,datagrid1.colRef("fac_clsf"));

					
					if(sIssuDt == "") {
						alert("발행일자가 존재하지 않습니다.\n관리자에게 문의 바랍니다.");
						return;
					}
					
					if(sFacClsf == "") {
						alert("공장구분이 존재하지 않습니다.\n관리자에게 문의 바랍니다.");
						return;
					}
					
					
					model1.setValue("/root/reqData/baljuSearchData/issu_dt",sIssuDt);
					model1.setValue("/root/reqData/baljuSearchData/fac_clsf",sFacClsf);
					
					model1.send("mt_papord_5003_l");
					
					var nodeList = instance1.selectNodes("/root/tempData/gridData2/record");
					var nodeList_2 = instance1.selectNodes("/root/resData/gridData2/record");
					
					for (var i=0; i<nodeList.length; i++){
						var papcmpy_cd	= nodeList.item(i).getElementsByTagName("papcmpy_cd").item(0).value;
						
						var somo_roll_a	= nodeList.item(i).getElementsByTagName("somo_cnt_a").item(0).value;
						var somo_wgt_a		= nodeList.item(i).getElementsByTagName("somo_wgt_a").item(0).value;
						var ordr_roll_a	= nodeList.item(i).getElementsByTagName("ordr_roll_cnt_a").item(0).value;
						var ordr_wgt_a		= nodeList.item(i).getElementsByTagName("ordr_wgt_a").item(0).value;
						var car_prd_cnt_a	= nodeList.item(i).getElementsByTagName("car_prd_cnt_a").item(0).value;
						var roll_other_a	= nodeList.item(i).getElementsByTagName("roll_other_a").item(0).value;
						var mix_roll_a	= nodeList.item(i).getElementsByTagName("mix_roll_a").item(0).value;
						var mix_wgt_a	= nodeList.item(i).getElementsByTagName("mix_wgt_a").item(0).value;
						
						var somo_roll_b	= nodeList.item(i).getElementsByTagName("somo_cnt_b").item(0).value;
						var somo_wgt_b		= nodeList.item(i).getElementsByTagName("somo_wgt_b").item(0).value;
						var ordr_roll_b	= nodeList.item(i).getElementsByTagName("ordr_roll_cnt_b").item(0).value;
						var ordr_wgt_b		= nodeList.item(i).getElementsByTagName("ordr_wgt_b").item(0).value;
						var car_prd_cnt_b	= nodeList.item(i).getElementsByTagName("car_prd_cnt_b").item(0).value;
						var roll_other_b	= nodeList.item(i).getElementsByTagName("roll_other_b").item(0).value;
						var mix_roll_b	= nodeList.item(i).getElementsByTagName("mix_roll_b").item(0).value;
						var mix_wgt_b	= nodeList.item(i).getElementsByTagName("mix_wgt_b").item(0).value;
						
						var somo_roll_c	= nodeList.item(i).getElementsByTagName("somo_cnt_c").item(0).value;
						var somo_wgt_c		= nodeList.item(i).getElementsByTagName("somo_wgt_c").item(0).value;
						var ordr_roll_c	= nodeList.item(i).getElementsByTagName("ordr_roll_cnt_c").item(0).value;
						var ordr_wgt_c		= nodeList.item(i).getElementsByTagName("ordr_wgt_c").item(0).value;
						var car_prd_cnt_c	= nodeList.item(i).getElementsByTagName("car_prd_cnt_c").item(0).value;
						var roll_other_c	= nodeList.item(i).getElementsByTagName("roll_other_c").item(0).value;
						var mix_roll_c	= nodeList.item(i).getElementsByTagName("mix_roll_c").item(0).value;
						var mix_wgt_c	= nodeList.item(i).getElementsByTagName("mix_wgt_c").item(0).value;
						
						for (var ii=0; ii<nodeList_2.length; ii++){
							//alert("tempData=" + papcmpy_cd + "\ndatagrid2=" + nodeList_2.item(ii).getElementsByTagName("papcmpy_cd").item(0).value);
							
							if (papcmpy_cd == nodeList_2.item(ii).getElementsByTagName("papcmpy_cd").item(0).value){
								nodeList_2.item(ii).getElementsByTagName("somo_roll_a").item(0).value = somo_roll_a;
								nodeList_2.item(ii).getElementsByTagName("somo_wgt_a").item(0).value = somo_wgt_a;
								nodeList_2.item(ii).getElementsByTagName("ordr_roll_a").item(0).value = ordr_roll_a;
								nodeList_2.item(ii).getElementsByTagName("ordr_wgt_a").item(0).value = ordr_wgt_a;
								nodeList_2.item(ii).getElementsByTagName("car_prd_cnt_a").item(0).value = car_prd_cnt_a;
								nodeList_2.item(ii).getElementsByTagName("roll_other_a").item(0).value = roll_other_a;
								nodeList_2.item(ii).getElementsByTagName("mix_roll_a").item(0).value = mix_roll_a;
								nodeList_2.item(ii).getElementsByTagName("mix_wgt_a").item(0).value = mix_wgt_a;
								
								nodeList_2.item(ii).getElementsByTagName("somo_roll_b").item(0).value = somo_roll_b;
								nodeList_2.item(ii).getElementsByTagName("somo_wgt_b").item(0).value = somo_wgt_b;
								nodeList_2.item(ii).getElementsByTagName("ordr_roll_b").item(0).value = ordr_roll_b;
								nodeList_2.item(ii).getElementsByTagName("ordr_wgt_b").item(0).value = ordr_wgt_b;
								nodeList_2.item(ii).getElementsByTagName("car_prd_cnt_b").item(0).value = car_prd_cnt_b;
								nodeList_2.item(ii).getElementsByTagName("roll_other_b").item(0).value = roll_other_b;
								nodeList_2.item(ii).getElementsByTagName("mix_roll_b").item(0).value = mix_roll_b;
								nodeList_2.item(ii).getElementsByTagName("mix_wgt_b").item(0).value = mix_wgt_b;
								
								nodeList_2.item(ii).getElementsByTagName("somo_roll_c").item(0).value = somo_roll_c;
								nodeList_2.item(ii).getElementsByTagName("somo_wgt_c").item(0).value = somo_wgt_c;
								nodeList_2.item(ii).getElementsByTagName("ordr_roll_c").item(0).value = ordr_roll_c;
								nodeList_2.item(ii).getElementsByTagName("ordr_wgt_c").item(0).value = ordr_wgt_c;
								nodeList_2.item(ii).getElementsByTagName("car_prd_cnt_c").item(0).value = car_prd_cnt_c;
								nodeList_2.item(ii).getElementsByTagName("roll_other_c").item(0).value = roll_other_c;
								nodeList_2.item(ii).getElementsByTagName("mix_roll_c").item(0).value = mix_roll_c;
								nodeList_2.item(ii).getElementsByTagName("mix_wgt_c").item(0).value = mix_wgt_c;
							}
							
						}
					}
					
					datagrid2.refresh();
					
				}
				
				function funDisabled() {
					var iRowCnt = datagrid2.rows;
					
					for(var i=1; i <= (iRowCnt - 3); i++) {
						if(model1.getValue("/root/resData/gridData2/record["+i+"]/matr_cd_a") == "") {
							datagrid2.isReadOnly((i+2),6) = true;
							datagrid2.isReadOnly((i+2),7) = true;
							datagrid2.isReadOnly((i+2),8) = true;
							datagrid2.isReadOnly((i+2),12) = true;
							datagrid2.isReadOnly((i+2),13) = true;
							datagrid2.cellstyle("background-color", (i+2), 6) = "#E5E5E5";
							datagrid2.cellstyle("background-color", (i+2), 7) = "#E5E5E5";
							datagrid2.cellstyle("background-color", (i+2), 8) = "#E5E5E5";
							datagrid2.cellstyle("background-color", (i+2), 12) = "#E5E5E5";
							datagrid2.cellstyle("background-color", (i+2), 13) = "#E5E5E5";

						}
						
						if(model1.getValue("/root/resData/gridData2/record["+i+"]/matr_cd_b") == "") {
							datagrid2.isReadOnly((i+2),18) = true;
							datagrid2.isReadOnly((i+2),19) = true;
							datagrid2.isReadOnly((i+2),20) = true;
							datagrid2.isReadOnly((i+2),24) = true;
							datagrid2.isReadOnly((i+2),25) = true;
							datagrid2.cellstyle("background-color", (i+2), 18) = "#E5E5E5";
							datagrid2.cellstyle("background-color", (i+2), 19) = "#E5E5E5";
							datagrid2.cellstyle("background-color", (i+2), 20) = "#E5E5E5";
							datagrid2.cellstyle("background-color", (i+2), 24) = "#E5E5E5";
							datagrid2.cellstyle("background-color", (i+2), 25) = "#E5E5E5";
						}
						
						if(model1.getValue("/root/resData/gridData2/record["+i+"]/matr_cd_c") == "") {
							datagrid2.isReadOnly((i+2),30) = true;
							datagrid2.isReadOnly((i+2),31) = true;
							datagrid2.isReadOnly((i+2),32) = true;
							datagrid2.isReadOnly((i+2),36) = true;
							datagrid2.isReadOnly((i+2),37) = true;
							datagrid2.cellstyle("background-color", (i+2), 30) = "#E5E5E5";
							datagrid2.cellstyle("background-color", (i+2), 31) = "#E5E5E5";
							datagrid2.cellstyle("background-color", (i+2), 32) = "#E5E5E5";
							datagrid2.cellstyle("background-color", (i+2), 36) = "#E5E5E5";
							datagrid2.cellstyle("background-color", (i+2), 37) = "#E5E5E5";
						}
					}
					
				}
				
				
				function funSum() {
					var iRowCnt = datagrid2.rows - 3;
					
					var ordr_roll_cnt_a    = 0;    //발주롤A
					var ordr_wgt_a         = 0;    //발주중량A
					var car_prd_cnt_a      = 0;    //차량수A
					var roll_other_a       = 0;    //나머지A
					var ordr_roll_cnt_b    = 0;    //발주롤B
					var ordr_wgt_b         = 0;    //발주중량B
					var car_prd_cnt_b      = 0;    //차량수B
					var roll_other_b       = 0;    //나머지B
					var ordr_roll_cnt_c    = 0;    //발주롤C
					var ordr_wgt_c         = 0;    //발주중량C
					var car_prd_cnt_c      = 0;    //차량수C
					var roll_other_c       = 0;    //나머지C
					var mix_wgt_a			= 0;
					var mix_wgt_b			= 0;
					var mix_wgt_c			= 0;
					var issu_dt			= "";
					//alert(model1.getValue("/root/resData/gridData2/record[1]/ordr_roll_cnt_a"));
					
					issu_dt = datagrid2.valueMatrix(datagrid2.row, datagrid2.colRef("issu_dt"));
					
					for(var i=1; i <= iRowCnt; i++) {
						//if (issu_dt == model1.getValue("/root/resData/gridData2/record["+i+"]/issu_dt")) {
							ordr_roll_cnt_a    = parseInt(ordr_roll_cnt_a)  + parseInt(model1.getValue("/root/resData/gridData2/record["+i+"]/roll_a")); 
							ordr_wgt_a         = parseInt(ordr_wgt_a)       + parseInt(model1.getValue("/root/resData/gridData2/record["+i+"]/wgt_a"));      
							car_prd_cnt_a      = parseInt(car_prd_cnt_a)    + parseInt(model1.getValue("/root/resData/gridData2/record["+i+"]/car_a"));   
							roll_other_a       = parseInt(roll_other_a)     + parseInt(model1.getValue("/root/resData/gridData2/record["+i+"]/mix_roll_a"));
							ordr_roll_cnt_b    = parseInt(ordr_roll_cnt_b)  + parseInt(model1.getValue("/root/resData/gridData2/record["+i+"]/roll_b")); 
							ordr_wgt_b         = parseInt(ordr_wgt_b)       + parseInt(model1.getValue("/root/resData/gridData2/record["+i+"]/wgt_b"));      
							car_prd_cnt_b      = parseInt(car_prd_cnt_b)    + parseInt(model1.getValue("/root/resData/gridData2/record["+i+"]/car_b"));   
							roll_other_b       = parseInt(roll_other_b)     + parseInt(model1.getValue("/root/resData/gridData2/record["+i+"]/mix_roll_b"));
							ordr_roll_cnt_c    = parseInt(ordr_roll_cnt_c)  + parseInt(model1.getValue("/root/resData/gridData2/record["+i+"]/roll_c")); 
							ordr_wgt_c         = parseInt(ordr_wgt_c)       + parseInt(model1.getValue("/root/resData/gridData2/record["+i+"]/wgt_c"));      
							car_prd_cnt_c      = parseInt(car_prd_cnt_c)    + parseInt(model1.getValue("/root/resData/gridData2/record["+i+"]/car_c"));   
							roll_other_c       = parseInt(roll_other_c)     + parseInt(model1.getValue("/root/resData/gridData2/record["+i+"]/mix_roll_c"));
							mix_wgt_a			= mix_wgt_a     + eval(model1.getValue("/root/resData/gridData2/record["+i+"]/mix_wgt_a"));
							mix_wgt_b			= mix_wgt_b     + eval(model1.getValue("/root/resData/gridData2/record["+i+"]/mix_wgt_b"));
							mix_wgt_c			= mix_wgt_c     + eval(model1.getValue("/root/resData/gridData2/record["+i+"]/mix_wgt_c"));
						//}
					}
					/*
					for (var i=datagrid1.fixedRows; i<datagrid1.rows; i++){
						if (issu_dt == datagrid1.valueMatrix(i, datagrid1.colRef("issu_dt"))) {
						//alert(t_wgt_a + "\n" + t_wgt_b + "\n" + t_wgt_c);
							datagrid1.valueMatrix(i, datagrid1.colRef("fix_roll_cnt_a")) = ordr_roll_cnt_a + roll_other_a;
							datagrid1.valueMatrix(i, datagrid1.colRef("fix_roll_cnt_b")) = ordr_roll_cnt_b + roll_other_b;
							datagrid1.valueMatrix(i, datagrid1.colRef("fix_roll_cnt_c")) = ordr_roll_cnt_c + roll_other_c;
							datagrid1.valueMatrix(i, datagrid1.colRef("fix_wgt_a")) = ordr_wgt_a + mix_wgt_a;
							datagrid1.valueMatrix(i, datagrid1.colRef("fix_wgt_b")) = ordr_wgt_b + mix_wgt_b;
							datagrid1.valueMatrix(i, datagrid1.colRef("fix_wgt_c")) = ordr_wgt_c + mix_wgt_c;
						}
					}
					*/
					model.setValue("/root/resData/gridData2_sum/sum_ordr_roll_cnt_a", ordr_roll_cnt_a + roll_other_a);
					model.setValue("/root/resData/gridData2_sum/sum_ordr_roll_cnt_b", ordr_roll_cnt_b + roll_other_b);
					model.setValue("/root/resData/gridData2_sum/sum_ordr_roll_cnt_c", ordr_roll_cnt_c + roll_other_c);
						
					model.setValue("/root/resData/gridData2_sum/sum_ordr_wgt_a", ordr_wgt_a + mix_wgt_a);
					model.setValue("/root/resData/gridData2_sum/sum_ordr_wgt_b", ordr_wgt_b + mix_wgt_b);
					model.setValue("/root/resData/gridData2_sum/sum_ordr_wgt_c", ordr_wgt_c + mix_wgt_c);
						
					group5.refresh();
					
					/*
					model1.setValue("/root/resData/gridData2_sum/sum_ordr_roll_cnt_a" ,  ordr_roll_cnt_a + roll_other_a);
					model1.setValue("/root/resData/gridData2_sum/sum_ordr_wgt_a"      ,  ordr_wgt_a     + );
					//model1.setValue("/root/resData/gridData2_sum/sum_car_prd_cnt_a"   ,  car_prd_cnt_a  );
					//model1.setValue("/root/resData/gridData2_sum/sum_roll_other_a"    ,  roll_other_a   );
					model1.setValue("/root/resData/gridData2_sum/sum_ordr_roll_cnt_b" ,  ordr_roll_cnt_b);
					model1.setValue("/root/resData/gridData2_sum/sum_ordr_wgt_b"      ,  ordr_wgt_b     );
					//model1.setValue("/root/resData/gridData2_sum/sum_car_prd_cnt_b"   ,  car_prd_cnt_b  );
					//model1.setValue("/root/resData/gridData2_sum/sum_roll_other_b"    ,  roll_other_b   );
					model1.setValue("/root/resData/gridData2_sum/sum_ordr_roll_cnt_c" ,  ordr_roll_cnt_c);
					model1.setValue("/root/resData/gridData2_sum/sum_ordr_wgt_c"      ,  ordr_wgt_c     );
					//model1.setValue("/root/resData/gridData2_sum/sum_car_prd_cnt_c"   ,  car_prd_cnt_c  );
					//model1.setValue("/root/resData/gridData2_sum/sum_roll_other_c"    ,  roll_other_c   );
					
					model1.refresh();
					*/
				}
				
				function funWgt() {
					var rollwgt_a = 0;
					var rollwgt_b = 0;
					var rollwgt_c = 0;
					var rollcnt_a = 0;
					var rollcnt_b = 0;
					var rollcnt_c = 0;
					var rollcar_a = 0;
					var rollcar_b = 0;
					var rollcar_c = 0;
					var iRowIndex = datagrid2.row;
					
					//alert(iRowIndex);
					rollcar_a = eval(datagrid2.valueMatrix(iRowIndex, datagrid2.colRef("roll_car_a")));
					rollcar_b = eval(datagrid2.valueMatrix(iRowIndex, datagrid2.colRef("roll_car_b")));
					rollcar_c = eval(datagrid2.valueMatrix(iRowIndex, datagrid2.colRef("roll_car_c")));
					
					rollwgt_a = eval(datagrid2.valueMatrix(iRowIndex, datagrid2.colRef("roll_wgt_a")));
					rollwgt_b = eval(datagrid2.valueMatrix(iRowIndex, datagrid2.colRef("roll_wgt_b")));
					rollwgt_c = eval(datagrid2.valueMatrix(iRowIndex, datagrid2.colRef("roll_wgt_c")));
					
					rollcnt_a = eval(datagrid2.valueMatrix(iRowIndex, datagrid2.colRef("roll_a")));
					rollcnt_b = eval(datagrid2.valueMatrix(iRowIndex, datagrid2.colRef("roll_b")));
					rollcnt_c = eval(datagrid2.valueMatrix(iRowIndex, datagrid2.colRef("roll_c")));
					
					//rollcar_a = parseInt(model1.getValue("/root/resData/gridData2/record["+(iRowIndex-2)+"]/roll_car_a"));
					//rollcar_b = parseInt(model1.getValue("/root/resData/gridData2/record["+(iRowIndex-2)+"]/roll_car_b"));
					//rollcar_c = parseInt(model1.getValue("/root/resData/gridData2/record["+(iRowIndex-2)+"]/roll_car_c"));
					
					//rollwgt_a = parseInt(model1.getValue("/root/resData/gridData2/record["+(iRowIndex-2)+"]/roll_wgt_a"));
					//rollwgt_b = parseInt(model1.getValue("/root/resData/gridData2/record["+(iRowIndex-2)+"]/roll_wgt_b"));
					//rollwgt_c = parseInt(model1.getValue("/root/resData/gridData2/record["+(iRowIndex-2)+"]/roll_wgt_c"));
					
					//rollcnt_a = parseInt(model1.getValue("/root/resData/gridData2/record["+(iRowIndex-2)+"]/ordr_roll_a"));
					//rollcnt_b = parseInt(model1.getValue("/root/resData/gridData2/record["+(iRowIndex-2)+"]/ordr_roll_b"));
					//rollcnt_c = parseInt(model1.getValue("/root/resData/gridData2/record["+(iRowIndex-2)+"]/ordr_roll_c"));
					
					if ((rollcnt_a % rollcar_a) != 0){
						alert("입력한 롤수는 차량적재량관리에서 입력한 차량 적재롤수에 적합하지 않습니다.\n다시 입력해주십시오.\n" + rollcnt_a + "\n" + rollcar_a);
						return;
					}
					if ((rollcnt_b % rollcar_b) != 0){
						alert("입력한 롤수는 차량적재량관리에서 입력한 차량 적재롤수에 적합하지 않습니다.\n다시 입력해주십시오.\n" + rollcnt_b + "\n" + rollcar_b);
						return;
					}
					if ((rollcnt_c % rollcar_c) != 0){
						alert("입력한 롤수는 차량적재량관리에서 입력한 차량 적재롤수에 적합하지 않습니다.\n다시 입력해주십시오.\n" + rollcnt_c + "\n" + rollcar_c);
						return;
					}
					datagrid2.valueMatrix(iRowIndex, datagrid2.colRef("wgt_a")) = (rollwgt_a * rollcnt_a);
					datagrid2.valueMatrix(iRowIndex, datagrid2.colRef("wgt_b")) = (rollwgt_b * rollcnt_b);
					datagrid2.valueMatrix(iRowIndex, datagrid2.colRef("wgt_c")) = (rollwgt_c * rollcnt_c);
					
					//model1.setValue("/root/resData/gridData2/record["+(iRowIndex-2)+"]/ordr_wgt_a",(rollwgt_a * rollcnt_a));
					//model1.setValue("/root/resData/gridData2/record["+(iRowIndex-2)+"]/ordr_wgt_b",(rollwgt_b * rollcnt_b));
					//model1.setValue("/root/resData/gridData2/record["+(iRowIndex-2)+"]/ordr_wgt_c",(rollwgt_c * rollcnt_c));
					
					model1.refresh();
				}
				
				function funBJChang() {
					var roll_a_sum = 0;
					var roll_b_sum = 0;
					var roll_c_sum = 0;
					var wgt_a_sum  = 0;
					var wgt_b_sum  = 0;
					var wgt_c_sum  = 0;
					var issu_dt	= "";
					var first_ordr_wgt_a	= 0;
					var first_ordr_wgt_b	= 0;
					var first_ordr_wgt_c	= 0;
					var exp_wgt_a	= 0;
					var exp_roll_a	= 0;
					var exp_wgt_b	= 0;
					var exp_roll_b	= 0;
					var exp_wgt_c	= 0;
					var exp_roll_c	= 0;
					var car_roll_a		= eval(model1.getValue("/root/reqData/facpaperamss/roll_cnt_a"));
					var car_roll_b		= eval(model1.getValue("/root/reqData/facpaperamss/roll_cnt_b"));
					var car_roll_c		= eval(model1.getValue("/root/reqData/facpaperamss/roll_cnt_c"));
					
					//var iRowIndex  = datagrid1.row;	//DataGrid1의 선택된 인덱스
					var ii		= datagrid2.row;
					//alert(ii);
					
					issu_dt = datagrid2.valueMatrix(ii, datagrid2.colRef("issu_dt"));
					//alert("수정한 일자=" + issu_dt);
					//	최초 수정한 일자의 정보를 발주마스터에 저장한다.
					for (var i=datagrid2.fixedRows; i<datagrid2.rows; i++){
						if (datagrid2.valueMatrix(i, datagrid2.colRef("issu_dt")) == issu_dt){
							
							// 	제지사 배분을 하면 배분한 결과를 저장할 그리드에 넣는다.
							//	저장할 그리드에 정보가 있으면 업데이트 없으면 행추가해서 인서트.
							var same_a = 0;
							var same_b = 0;
							var same_c = 0;
							
							for (var k=1; k<datagrid4.rows; k++){
								if (datagrid4.valueMatrix(k, datagrid4.colRef("issu_dt")) == datagrid2.valueMatrix(i, datagrid2.colRef("issu_dt")) &&
									datagrid4.valueMatrix(k, datagrid4.colRef("papcmpy_cd")) == datagrid2.valueMatrix(i, datagrid2.colRef("papcmpy_cd")) &&
									datagrid4.valueMatrix(k, datagrid4.colRef("matr_cd")) == datagrid2.valueMatrix(i, datagrid2.colRef("matr_cd_a"))){
									same_a = k;
								}
							}
							
							if (same_a == 0){
								datagrid4.addRow(true, true);
								datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("issu_dt")) = datagrid2.valueMatrix(i, datagrid2.colRef("issu_dt"));
								datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("papcmpy_cd")) = datagrid2.valueMatrix(i, datagrid2.colRef("papcmpy_cd"));
								datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("matr_cd")) = datagrid2.valueMatrix(i, datagrid2.colRef("matr_cd_a"));
								datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("ord_roll")) = datagrid2.valueMatrix(i, datagrid2.colRef("roll_a"));
								datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("ord_wgt")) = datagrid2.valueMatrix(i, datagrid2.colRef("wgt_a"));
								datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("car_cnt")) = datagrid2.valueMatrix(i, datagrid2.colRef("car_a"));
							} else {
								datagrid4.valueMatrix(same_a, datagrid4.colRef("ord_roll")) = datagrid2.valueMatrix(i, datagrid2.colRef("roll_a"));
								datagrid4.valueMatrix(same_a, datagrid4.colRef("ord_wgt")) = datagrid2.valueMatrix(i, datagrid2.colRef("wgt_a"));
								datagrid4.valueMatrix(same_a, datagrid4.colRef("car_cnt")) = datagrid2.valueMatrix(i, datagrid2.colRef("car_a"));
								if (datagrid4.rowStatus(same_a) != 1){
									datagrid4.rowStatus(same_a) = 2;
								}
							}
							
							for (var k=1; k<datagrid4.rows; k++){
								if (datagrid4.valueMatrix(k, datagrid4.colRef("issu_dt")) == datagrid2.valueMatrix(i, datagrid2.colRef("issu_dt")) &&
									datagrid4.valueMatrix(k, datagrid4.colRef("papcmpy_cd")) == datagrid2.valueMatrix(i, datagrid2.colRef("papcmpy_cd")) &&
									datagrid4.valueMatrix(k, datagrid4.colRef("matr_cd")) == datagrid2.valueMatrix(i, datagrid2.colRef("matr_cd_b"))){
									same_b = k;
								}
							}
							
							if (same_b == 0){
								datagrid4.addRow(true, true);
								datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("issu_dt")) = datagrid2.valueMatrix(i, datagrid2.colRef("issu_dt"));
								datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("papcmpy_cd")) = datagrid2.valueMatrix(i, datagrid2.colRef("papcmpy_cd"));
								datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("matr_cd")) = datagrid2.valueMatrix(i, datagrid2.colRef("matr_cd_b"));
								datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("ord_roll")) = datagrid2.valueMatrix(i, datagrid2.colRef("roll_b"));
								datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("ord_wgt")) = datagrid2.valueMatrix(i, datagrid2.colRef("wgt_b"));
								datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("car_cnt")) = datagrid2.valueMatrix(i, datagrid2.colRef("car_b"));
							} else {
								datagrid4.valueMatrix(same_b, datagrid4.colRef("ord_roll")) = datagrid2.valueMatrix(i, datagrid2.colRef("roll_b"));
								datagrid4.valueMatrix(same_b, datagrid4.colRef("ord_wgt")) = datagrid2.valueMatrix(i, datagrid2.colRef("wgt_b"));
								datagrid4.valueMatrix(same_b, datagrid4.colRef("car_cnt")) = datagrid2.valueMatrix(i, datagrid2.colRef("car_b"));
								if (datagrid4.rowStatus(same_b) != 1){
									datagrid4.rowStatus(same_b) = 2;
								}
							}
							
							for (var k=1; k<datagrid4.rows; k++){
								if (datagrid4.valueMatrix(k, datagrid4.colRef("issu_dt")) == datagrid2.valueMatrix(i, datagrid2.colRef("issu_dt")) &&
									datagrid4.valueMatrix(k, datagrid4.colRef("papcmpy_cd")) == datagrid2.valueMatrix(i, datagrid2.colRef("papcmpy_cd")) &&
									datagrid4.valueMatrix(k, datagrid4.colRef("matr_cd")) == datagrid2.valueMatrix(i, datagrid2.colRef("matr_cd_c"))){
									same_c = k;
								}
							}
							
							if (same_c == 0){
								datagrid4.addRow(true, true);
								datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("issu_dt")) = datagrid2.valueMatrix(i, datagrid2.colRef("issu_dt"));
								datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("papcmpy_cd")) = datagrid2.valueMatrix(i, datagrid2.colRef("papcmpy_cd"));
								datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("matr_cd")) = datagrid2.valueMatrix(i, datagrid2.colRef("matr_cd_c"));
								datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("ord_roll")) = datagrid2.valueMatrix(i, datagrid2.colRef("roll_c"));
								datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("ord_wgt")) = datagrid2.valueMatrix(i, datagrid2.colRef("wgt_c"));
								datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("car_cnt")) = datagrid2.valueMatrix(i, datagrid2.colRef("car_c"));
							} else {
								datagrid4.valueMatrix(same_c, datagrid4.colRef("ord_roll")) = datagrid2.valueMatrix(i, datagrid2.colRef("roll_c"));
								datagrid4.valueMatrix(same_c, datagrid4.colRef("ord_wgt")) = datagrid2.valueMatrix(i, datagrid2.colRef("wgt_c"));
								datagrid4.valueMatrix(same_c, datagrid4.colRef("car_cnt")) = datagrid2.valueMatrix(i, datagrid2.colRef("car_c"));
								if (datagrid4.rowStatus(same_c) != 1){
									datagrid4.rowStatus(same_c) = 2;
								}
							}
							/*
							var samemix_a = 0;
							var samemix_b = 0;
							var samemix_c = 0;
							
							for (var k=1; k<datagrid3.rows; k++){
								if (datagrid3.valueMatrix(k, datagrid3.colRef("issu_dt")) == datagrid2.valueMatrix(i, datagrid2.colRef("issu_dt")) &&
									datagrid3.valueMatrix(k, datagrid3.colRef("papcmpy_cd")) == datagrid2.valueMatrix(i, datagrid2.colRef("papcmpy_cd")) &&
									datagrid3.valueMatrix(k, datagrid3.colRef("matr_cd")) == datagrid2.valueMatrix(i, datagrid2.colRef("matr_cd_a"))){
									samemix_a = k;
								}
							}
							if (samemix_a == 0){
								datagrid3.addRow(true, true);
								datagrid3.valueMatrix(datagrid3.rows -1, datagrid3.colRef("issu_dt")) = datagrid2.valueMatrix(i, datagrid2.colRef("issu_dt"));
								datagrid3.valueMatrix(datagrid3.rows -1, datagrid3.colRef("papcmpy_cd")) = datagrid2.valueMatrix(i, datagrid2.colRef("papcmpy_cd"));
								datagrid3.valueMatrix(datagrid3.rows -1, datagrid3.colRef("matr_cd")) = datagrid2.valueMatrix(i, datagrid2.colRef("matr_cd_a"));
								datagrid3.valueMatrix(datagrid3.rows -1, datagrid3.colRef("roll_cnt")) = datagrid2.valueMatrix(i, datagrid2.colRef("mix_roll_a"));
								datagrid3.valueMatrix(datagrid3.rows -1, datagrid3.colRef("wgt")) = datagrid2.valueMatrix(i, datagrid2.colRef("mix_wgt_a"));
							} else {
								datagrid3.valueMatrix(samemix_a, datagrid3.colRef("roll_cnt")) = datagrid2.valueMatrix(i, datagrid2.colRef("mix_roll_a"));
								datagrid3.valueMatrix(samemix_a, datagrid3.colRef("wgt")) = datagrid2.valueMatrix(i, datagrid2.colRef("mix_wgt_a"));
								if (datagrid3.rowStatus(samemix_a) != 1){
									datagrid3.rowStatus(samemix_a) = 2;
								}
							}
							
							for (var k=1; k<datagrid3.rows; k++){
								if (datagrid3.valueMatrix(k, datagrid3.colRef("issu_dt")) == datagrid2.valueMatrix(i, datagrid2.colRef("issu_dt")) &&
									datagrid3.valueMatrix(k, datagrid3.colRef("papcmpy_cd")) == datagrid2.valueMatrix(i, datagrid2.colRef("papcmpy_cd")) &&
									datagrid3.valueMatrix(k, datagrid3.colRef("matr_cd")) == datagrid2.valueMatrix(i, datagrid2.colRef("matr_cd_b"))){
									samemix_b = k;
								}
							}
							if (samemix_b == 0){
								datagrid3.addRow(true, true);
								datagrid3.valueMatrix(datagrid3.rows -1, datagrid3.colRef("issu_dt")) = datagrid2.valueMatrix(i, datagrid2.colRef("issu_dt"));
								datagrid3.valueMatrix(datagrid3.rows -1, datagrid3.colRef("papcmpy_cd")) = datagrid2.valueMatrix(i, datagrid2.colRef("papcmpy_cd"));
								datagrid3.valueMatrix(datagrid3.rows -1, datagrid3.colRef("matr_cd")) = datagrid2.valueMatrix(i, datagrid2.colRef("matr_cd_b"));
								datagrid3.valueMatrix(datagrid3.rows -1, datagrid3.colRef("roll_cnt")) = datagrid2.valueMatrix(i, datagrid2.colRef("mix_roll_b"));
								datagrid3.valueMatrix(datagrid3.rows -1, datagrid3.colRef("wgt")) = datagrid2.valueMatrix(i, datagrid2.colRef("mix_wgt_b"));
							} else {
								datagrid3.valueMatrix(samemix_b, datagrid3.colRef("roll_cnt")) = datagrid2.valueMatrix(i, datagrid2.colRef("mix_roll_b"));
								datagrid3.valueMatrix(samemix_b, datagrid3.colRef("wgt")) = datagrid2.valueMatrix(i, datagrid2.colRef("mix_wgt_b"));
								if (datagrid3.rowStatus(samemix_b) != 1){
									datagrid3.rowStatus(samemix_b) = 2;
								}
							}
						
							for (var k=1; k<datagrid3.rows; k++){
								if (datagrid3.valueMatrix(k, datagrid3.colRef("issu_dt")) == datagrid2.valueMatrix(i, datagrid2.colRef("issu_dt")) &&
									datagrid3.valueMatrix(k, datagrid3.colRef("papcmpy_cd")) == datagrid2.valueMatrix(i, datagrid2.colRef("papcmpy_cd")) &&
									datagrid3.valueMatrix(k, datagrid3.colRef("matr_cd")) == datagrid2.valueMatrix(i, datagrid2.colRef("matr_cd_c"))){
									samemix_c = k;
								}
							}
							if (samemix_c == 0){
								datagrid3.addRow(true, true);
								datagrid3.valueMatrix(datagrid3.rows -1, datagrid3.colRef("issu_dt")) = datagrid2.valueMatrix(i, datagrid2.colRef("issu_dt"));
								datagrid3.valueMatrix(datagrid3.rows -1, datagrid3.colRef("papcmpy_cd")) = datagrid2.valueMatrix(i, datagrid2.colRef("papcmpy_cd"));
								datagrid3.valueMatrix(datagrid3.rows -1, datagrid3.colRef("matr_cd")) = datagrid2.valueMatrix(i, datagrid2.colRef("matr_cd_c"));
								datagrid3.valueMatrix(datagrid3.rows -1, datagrid3.colRef("roll_cnt")) = datagrid2.valueMatrix(i, datagrid2.colRef("mix_roll_c"));
								datagrid3.valueMatrix(datagrid3.rows -1, datagrid3.colRef("wgt")) = datagrid2.valueMatrix(i, datagrid2.colRef("mix_wgt_c"));
							} else {
								datagrid3.valueMatrix(samemix_c, datagrid3.colRef("roll_cnt")) = datagrid2.valueMatrix(i, datagrid2.colRef("mix_roll_c"));
								datagrid3.valueMatrix(samemix_c, datagrid3.colRef("wgt")) = datagrid2.valueMatrix(i, datagrid2.colRef("mix_wgt_c"));
								if (datagrid3.rowStatus(samemix_c) != 1){
									datagrid3.rowStatus(samemix_c) = 2;
								}
							}
							*/
							roll_a_sum 	= roll_a_sum + eval(datagrid2.valueMatrix(i, datagrid2.colRef("roll_a"))) + eval(datagrid2.valueMatrix(i, datagrid2.colRef("mix_roll_a")));
							wgt_a_sum 	= wgt_a_sum + eval(datagrid2.valueMatrix(i, datagrid2.colRef("wgt_a"))) + eval(datagrid2.valueMatrix(i, datagrid2.colRef("mix_wgt_a")));
							
							roll_b_sum 	= roll_b_sum + eval(datagrid2.valueMatrix(i, datagrid2.colRef("roll_b"))) + eval(datagrid2.valueMatrix(i, datagrid2.colRef("mix_roll_b")));
							wgt_b_sum 	= wgt_b_sum + eval(datagrid2.valueMatrix(i, datagrid2.colRef("wgt_b"))) + eval(datagrid2.valueMatrix(i, datagrid2.colRef("mix_wgt_b")));
							
							roll_c_sum 	= roll_c_sum + eval(datagrid2.valueMatrix(i, datagrid2.colRef("roll_c"))) + eval(datagrid2.valueMatrix(i, datagrid2.colRef("mix_roll_c")));
							wgt_c_sum 	= wgt_c_sum + eval(datagrid2.valueMatrix(i, datagrid2.colRef("wgt_c"))) + eval(datagrid2.valueMatrix(i, datagrid2.colRef("mix_wgt_c")));
						}
					}
					
					for (var i=datagrid1.fixedRows; i<datagrid1.rows; i++){
						if (datagrid1.valueMatrix(i, datagrid1.colRef("issu_dt")) == issu_dt){
							datagrid1.valueMatrix(i, datagrid1.colRef("ordr_roll_cnt_a")) = roll_a_sum;
							datagrid1.valueMatrix(i, datagrid1.colRef("ordr_roll_cnt_b")) = roll_b_sum;
							datagrid1.valueMatrix(i, datagrid1.colRef("ordr_roll_cnt_c")) = roll_c_sum;
							
							datagrid1.valueMatrix(i, datagrid1.colRef("ordr_wgt_a"))	= wgt_a_sum;
							datagrid1.valueMatrix(i, datagrid1.colRef("ordr_wgt_b"))	= wgt_b_sum;
							datagrid1.valueMatrix(i, datagrid1.colRef("ordr_wgt_c"))	= wgt_c_sum;
							
							//datagrid1.valueMatrix(i, datagrid1.colRef("chg_yn")) = "Y";
							f_makeResult(i);
							f_makeResult2(i);
						}
						//if (datagrid1.valueMatrix(i, datagrid1.colRef("issu_dt")) > issu_dt){
							
						//}
					}
					
					//	수정하고 나서 변경된 일자의 이후 일자에 대한 발주량을 다시 맞춘다.
					for (var i=datagrid1.fixedRows; i<datagrid1.rows; i++){
						if (datagrid1.valueMatrix(i, datagrid1.colRef("issu_dt")) > issu_dt){		// 발주수정 범위...
							//alert(datagrid1.valueMatrix(i, datagrid1.colRef("issu_dt")));
							
							for (var j=datagrid2.fixedRows; j< datagrid2.rows; j++){	// for datagrid2
								if (datagrid2.valueMatrix(j, datagrid2.colRef("issu_dt")) == datagrid1.valueMatrix(i, datagrid1.colRef("issu_dt"))){
									if ( datagrid2.valueMatrix(j, datagrid2.colRef("ord")) == "01"){
										first_ordr_wgt_a = eval(datagrid1.valueMatrix(i, datagrid1.colRef("ordr_wgt_a")));
										first_ordr_wgt_b = eval(datagrid1.valueMatrix(i, datagrid1.colRef("ordr_wgt_b")));
										first_ordr_wgt_c = eval(datagrid1.valueMatrix(i, datagrid1.colRef("ordr_wgt_c")));
										
										//alert(datagrid2.valueMatrix(j, datagrid2.colRef("p_ratio")) + "\n" + datagrid1.valueMatrix(i, datagrid1.colRef("ordr_wgt_a")));
										exp_wgt_a = (eval(datagrid2.valueMatrix(j, datagrid2.colRef("p_ratio"))) / 10) * datagrid1.valueMatrix(i, datagrid1.colRef("ordr_wgt_a"));
										exp_wgt_b = (eval(datagrid2.valueMatrix(j, datagrid2.colRef("p_ratio"))) / 10) * datagrid1.valueMatrix(i, datagrid1.colRef("ordr_wgt_b"));
										exp_wgt_c = (eval(datagrid2.valueMatrix(j, datagrid2.colRef("p_ratio"))) / 10) * datagrid1.valueMatrix(i, datagrid1.colRef("ordr_wgt_c"));
										
										//alert("01........" + exp_wgt_b + "\n" + datagrid2.valueMatrix(j, datagrid2.colRef("roll_wgt_b")) + "\n" + exp_wgt_a + "\n" + datagrid2.valueMatrix(j, datagrid2.colRef("roll_wgt_a")) + "\n" + exp_wgt_c + "\n" + datagrid2.valueMatrix(j, datagrid2.colRef("roll_wgt_c")));
										if (exp_wgt_a == 0){
											exp_roll_a = 0;
										} else {
											exp_roll_a = Math.ceil(exp_wgt_a / eval(datagrid2.valueMatrix(j, datagrid2.colRef("roll_wgt_a"))) );
										}
										if (exp_wgt_b == 0){
											exp_roll_b = 0;
										} else {
											if (eval(datagrid2.valueMatrix(j, datagrid2.colRef("roll_wgt_b"))) == 0){
												exp_roll_b = 0;
											} else {
												exp_roll_b = Math.ceil(exp_wgt_b / eval(datagrid2.valueMatrix(j, datagrid2.colRef("roll_wgt_b"))) );
											}
										}
										if (exp_wgt_c == 0){
											exp_roll_c = 0;
										} else {
											if (eval(datagrid2.valueMatrix(j, datagrid2.colRef("roll_wgt_c"))) == 0){
												exp_roll_c = 0;
											} else {
												exp_roll_c = Math.ceil(exp_wgt_c / eval(datagrid2.valueMatrix(j, datagrid2.colRef("roll_wgt_c"))) );
											}
										}
										
										if (exp_roll_a == 0 && exp_roll_c == 0){	//	발주롤수 산정.if
											datagrid2.valueMatrix(j, datagrid2.colRef("roll_a")) = 0;
											datagrid2.valueMatrix(j, datagrid2.colRef("roll_c")) = 0;
											
											datagrid2.valueMatrix(j, datagrid2.colRef("wgt_a")) = 0;
											datagrid2.valueMatrix(j, datagrid2.colRef("wgt_c")) = 0;
										} else {
											//alert(exp_roll_a + "\n" + exp_roll_b + "\n" + exp_roll_c);
											model.setValue("/root/reqData/searchData/roll_a", exp_roll_a);
											model.setValue("/root/reqData/searchData/roll_c", exp_roll_c);
											
											model.send("mt_papord_5008_l");
											
											if (model.getValue("/root/tempData/CURLIST/record/a_roll") == "0"){
												datagrid2.valueMatrix(j, datagrid2.colRef("roll_a")) 	= 0;
												datagrid2.valueMatrix(j, datagrid2.colRef("car_a"))	= 0;
												datagrid2.valueMatrix(j, datagrid2.colRef("wgt_a")) 	= 0;
											} else {
												datagrid2.valueMatrix(j, datagrid2.colRef("roll_a")) 	= (Math.floor(eval(model.getValue("/root/tempData/CURLIST/record/a_roll")) / eval(car_roll_a))) * eval(car_roll_a);
												datagrid2.valueMatrix(j, datagrid2.colRef("car_a"))	= Math.floor(eval(model.getValue("/root/tempData/CURLIST/record/a_roll")) / eval(car_roll_a));
												datagrid2.valueMatrix(j, datagrid2.colRef("wgt_a")) 	= eval(datagrid2.valueMatrix(j, datagrid2.colRef("roll_a"))) * eval(datagrid2.valueMatrix(j, datagrid2.colRef("roll_wgt_a")));
												
											}
											
											if (model.getValue("/root/tempData/CURLIST/record/c_roll") == "0"){
												datagrid2.valueMatrix(j, datagrid2.colRef("roll_c")) 	= 0;
												datagrid2.valueMatrix(j, datagrid2.colRef("car_c"))	= 0;
												datagrid2.valueMatrix(j, datagrid2.colRef("wgt_c")) 	= 0;
											} else {
												datagrid2.valueMatrix(j, datagrid2.colRef("roll_c")) 	= (Math.floor(eval(model.getValue("/root/tempData/CURLIST/record/c_roll")) / eval(car_roll_c))) * eval(car_roll_c);
												datagrid2.valueMatrix(j, datagrid2.colRef("car_c"))	= Math.floor(eval(model.getValue("/root/tempData/CURLIST/record/c_roll")) / eval(car_roll_c));
												datagrid2.valueMatrix(j, datagrid2.colRef("wgt_c")) 	= eval(datagrid2.valueMatrix(j, datagrid2.colRef("roll_c"))) * eval(datagrid2.valueMatrix(j, datagrid2.colRef("roll_wgt_c")));
											
											}
											
											// 	제지사 배분을 하면 배분한 결과를 저장할 그리드에 넣는다.
											//	저장할 그리드에 정보가 있으면 업데이트 없으면 행추가해서 인서트.
											var same_a = 0;
											var same_b = 0;
											var same_c = 0;
											
											for (var k=1; k<datagrid4.rows; k++){
												if (datagrid4.valueMatrix(k, datagrid4.colRef("issu_dt")) == datagrid2.valueMatrix(j, datagrid2.colRef("issu_dt")) &&
													datagrid4.valueMatrix(k, datagrid4.colRef("papcmpy_cd")) == datagrid2.valueMatrix(j, datagrid2.colRef("papcmpy_cd")) &&
													datagrid4.valueMatrix(k, datagrid4.colRef("matr_cd")) == datagrid2.valueMatrix(j, datagrid2.colRef("matr_cd_a"))){
													same_a = k;
												}
											}
											
											if (same_a == 0){
												datagrid4.addRow(true, true);
												datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("issu_dt")) = datagrid2.valueMatrix(j, datagrid2.colRef("issu_dt"));
												datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("papcmpy_cd")) = datagrid2.valueMatrix(j, datagrid2.colRef("papcmpy_cd"));
												datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("matr_cd")) = datagrid2.valueMatrix(j, datagrid2.colRef("matr_cd_a"));
												datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("ord_roll")) = datagrid2.valueMatrix(j, datagrid2.colRef("roll_a"));
												datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("ord_wgt")) = datagrid2.valueMatrix(j, datagrid2.colRef("wgt_a"));
												datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("car_cnt")) = datagrid2.valueMatrix(j, datagrid2.colRef("car_a"));
											} else {
												datagrid4.valueMatrix(same_a, datagrid4.colRef("ord_roll")) = datagrid2.valueMatrix(j, datagrid2.colRef("roll_a"));
												datagrid4.valueMatrix(same_a, datagrid4.colRef("ord_wgt")) = datagrid2.valueMatrix(j, datagrid2.colRef("wgt_a"));
												datagrid4.valueMatrix(same_a, datagrid4.colRef("car_cnt")) = datagrid2.valueMatrix(j, datagrid2.colRef("car_a"));
												if (datagrid4.rowStatus(same_a) != 1){
													datagrid4.rowStatus(same_a) = 2;
												}
											}
											
											for (var k=1; k<datagrid4.rows; k++){
												if (datagrid4.valueMatrix(k, datagrid4.colRef("issu_dt")) == datagrid2.valueMatrix(j, datagrid2.colRef("issu_dt")) &&
													datagrid4.valueMatrix(k, datagrid4.colRef("papcmpy_cd")) == datagrid2.valueMatrix(j, datagrid2.colRef("papcmpy_cd")) &&
													datagrid4.valueMatrix(k, datagrid4.colRef("matr_cd")) == datagrid2.valueMatrix(j, datagrid2.colRef("matr_cd_b"))){
													same_b = k;
												}
											}
											
											if (same_b == 0){
												datagrid4.addRow(true, true);
												datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("issu_dt")) = datagrid2.valueMatrix(j, datagrid2.colRef("issu_dt"));
												datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("papcmpy_cd")) = datagrid2.valueMatrix(j, datagrid2.colRef("papcmpy_cd"));
												datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("matr_cd")) = datagrid2.valueMatrix(j, datagrid2.colRef("matr_cd_b"));
												datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("ord_roll")) = datagrid2.valueMatrix(j, datagrid2.colRef("roll_b"));
												datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("ord_wgt")) = datagrid2.valueMatrix(j, datagrid2.colRef("wgt_b"));
												datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("car_cnt")) = datagrid2.valueMatrix(j, datagrid2.colRef("car_b"));
											} else {
												datagrid4.valueMatrix(same_b, datagrid4.colRef("ord_roll")) = datagrid2.valueMatrix(j, datagrid2.colRef("roll_b"));
												datagrid4.valueMatrix(same_b, datagrid4.colRef("ord_wgt")) = datagrid2.valueMatrix(j, datagrid2.colRef("wgt_b"));
												datagrid4.valueMatrix(same_b, datagrid4.colRef("car_cnt")) = datagrid2.valueMatrix(j, datagrid2.colRef("car_b"));
												if (datagrid4.rowStatus(same_b) != 1){
													datagrid4.rowStatus(same_b) = 2;
												}
											}
											
											for (var k=1; k<datagrid4.rows; k++){
												if (datagrid4.valueMatrix(k, datagrid4.colRef("issu_dt")) == datagrid2.valueMatrix(j, datagrid2.colRef("issu_dt")) &&
													datagrid4.valueMatrix(k, datagrid4.colRef("papcmpy_cd")) == datagrid2.valueMatrix(j, datagrid2.colRef("papcmpy_cd")) &&
													datagrid4.valueMatrix(k, datagrid4.colRef("matr_cd")) == datagrid2.valueMatrix(j, datagrid2.colRef("matr_cd_c"))){
													same_c = k;
												}
											}
											
											if (same_c == 0){
												datagrid4.addRow(true, true);
												datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("issu_dt")) = datagrid2.valueMatrix(j, datagrid2.colRef("issu_dt"));
												datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("papcmpy_cd")) = datagrid2.valueMatrix(j, datagrid2.colRef("papcmpy_cd"));
												datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("matr_cd")) = datagrid2.valueMatrix(j, datagrid2.colRef("matr_cd_c"));
												datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("ord_roll")) = datagrid2.valueMatrix(j, datagrid2.colRef("roll_c"));
												datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("ord_wgt")) = datagrid2.valueMatrix(j, datagrid2.colRef("wgt_c"));
												datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("car_cnt")) = datagrid2.valueMatrix(j, datagrid2.colRef("car_c"));
											} else {
												datagrid4.valueMatrix(same_c, datagrid4.colRef("ord_roll")) = datagrid2.valueMatrix(j, datagrid2.colRef("roll_c"));
												datagrid4.valueMatrix(same_c, datagrid4.colRef("ord_wgt")) = datagrid2.valueMatrix(j, datagrid2.colRef("wgt_c"));
												datagrid4.valueMatrix(same_c, datagrid4.colRef("car_cnt")) = datagrid2.valueMatrix(j, datagrid2.colRef("car_c"));
												if (datagrid4.rowStatus(same_c) != 1){
													datagrid4.rowStatus(same_c) = 2;
												}
											}
										}			//	발주롤수 산정.if
										
										for (var ii=datagrid1.fixedRows; ii<datagrid1.rows; ii++){
											var t_roll_a 		= 0;
											var t_wgt_a		= 0;
											var t_roll_b 		= 0;
											var t_wgt_b		= 0;
											var t_roll_c 		= 0;
											var t_wgt_c		= 0;
											var t_car_a		= 0;
											var t_car_b		= 0;
											var t_car_c		= 0;
											var issu_ddt		= "";
											issu_ddt			= datagrid1.valueMatrix(ii, datagrid1.colRef("issu_dt"));
											
											if (issu_ddt > issu_dt) {		// 발주수정 범위
												//alert("변경된 발주량을 다시 발주마스터에=" + datagrid1.valueMatrix(ii, datagrid1.colRef("issu_dt")));
												
												for (var jj=datagrid2.fixedRows; jj<datagrid2.rows; jj++){
													if (issu_ddt == datagrid2.valueMatrix(jj, datagrid2.colRef("issu_dt"))){
														t_roll_a = t_roll_a + eval(datagrid2.valueMatrix(jj, datagrid2.colRef("roll_a"))) + eval(datagrid2.valueMatrix(jj, datagrid2.colRef("mix_roll_a")));
														t_wgt_a = t_wgt_a + eval(datagrid2.valueMatrix(jj, datagrid2.colRef("wgt_a"))) + eval(datagrid2.valueMatrix(jj, datagrid2.colRef("mix_wgt_a")));
														t_car_a = t_car_a + eval(datagrid2.valueMatrix(jj, datagrid2.colRef("car_a")));
						
														t_roll_b = t_roll_b + eval(datagrid2.valueMatrix(jj, datagrid2.colRef("roll_b"))) + eval(datagrid2.valueMatrix(jj, datagrid2.colRef("mix_roll_b")));
														t_wgt_b = t_wgt_b + eval(datagrid2.valueMatrix(jj, datagrid2.colRef("wgt_b"))) + eval(datagrid2.valueMatrix(jj, datagrid2.colRef("mix_wgt_b")));
														t_car_b = t_car_b + eval(datagrid2.valueMatrix(jj, datagrid2.colRef("car_b")));
						
														t_roll_c = t_roll_c + eval(datagrid2.valueMatrix(jj, datagrid2.colRef("roll_c"))) + eval(datagrid2.valueMatrix(jj, datagrid2.colRef("mix_roll_c")));
														t_wgt_c = t_wgt_c + eval(datagrid2.valueMatrix(jj, datagrid2.colRef("wgt_c"))) + eval(datagrid2.valueMatrix(jj, datagrid2.colRef("mix_wgt_c")));
														t_car_c = t_car_c + eval(datagrid2.valueMatrix(jj, datagrid2.colRef("car_c")));
													}
												}
												//alert(datagrid2.valueMatrix(j, datagrid2.colRef("issu_dt")) + "\n" + datagrid1.valueMatrix(ii, datagrid1.colRef("issu_dt")));
												//if ( datagrid2.valueMatrix(j, datagrid2.colRef("issu_dt"))  == datagrid1.valueMatrix(ii, datagrid1.colRef("issu_dt"))) {
													datagrid1.valueMatrix(ii, datagrid1.colRef("ordr_roll_cnt_a")) = t_roll_a;
													datagrid1.valueMatrix(ii, datagrid1.colRef("ordr_roll_cnt_b")) = t_roll_b;
													datagrid1.valueMatrix(ii, datagrid1.colRef("ordr_roll_cnt_c")) = t_roll_c;
													datagrid1.valueMatrix(ii, datagrid1.colRef("ordr_wgt_a")) = t_wgt_a;
													datagrid1.valueMatrix(ii, datagrid1.colRef("ordr_wgt_b")) = t_wgt_b;
													datagrid1.valueMatrix(ii, datagrid1.colRef("ordr_wgt_c")) = t_wgt_c;
													
													f_makeResult(ii);
												
													f_makeResult2(ii);
												//}
											}			// 발주수정 범위
										}
										
									} else {
										
										//alert("02........" + datagrid1.valueMatrix(i, datagrid1.colRef("ordr_wgt_a")) + "\n" +datagrid2.valueMatrix((j-1), datagrid2.colRef("wgt_a")) )
										exp_wgt_a = first_ordr_wgt_a - eval(datagrid2.valueMatrix((j-1), datagrid2.colRef("wgt_a")));
										exp_wgt_b = first_ordr_wgt_b - eval(datagrid2.valueMatrix((j-1), datagrid2.colRef("wgt_b")));
										exp_wgt_c = first_ordr_wgt_c - eval(datagrid2.valueMatrix((j-1), datagrid2.colRef("wgt_c")));
										
										
										//alert("02....." +exp_wgt_a + "\n" + exp_wgt_b + "\n" + exp_wgt_c);
										if (exp_wgt_a <= 0){
											exp_roll_a = 0;
										} else {
											exp_roll_a = Math.ceil(exp_wgt_a / eval(datagrid2.valueMatrix(j, datagrid2.colRef("roll_wgt_a"))) );
										}
										if (exp_wgt_b <= 0){
											exp_roll_b = 0;
										} else {
											exp_roll_b = Math.ceil(exp_wgt_b / eval(datagrid2.valueMatrix(j, datagrid2.colRef("roll_wgt_b"))) );
										}
										if (exp_wgt_c <= 0){
											exp_roll_c = 0;
										} else {
											exp_roll_c = Math.ceil(exp_wgt_c / eval(datagrid2.valueMatrix(j, datagrid2.colRef("roll_wgt_c"))) );
										}
										
										if (exp_roll_a == 0 && exp_roll_c == 0){
											datagrid2.valueMatrix(j, datagrid2.colRef("roll_a")) = 0;
											datagrid2.valueMatrix(j, datagrid2.colRef("roll_c")) = 0;
											
											datagrid2.valueMatrix(j, datagrid2.colRef("wgt_a")) = 0;
											datagrid2.valueMatrix(j, datagrid2.colRef("wgt_c")) = 0;
										} else {
											model.setValue("/root/reqData/searchData/roll_a", exp_roll_a);
											model.setValue("/root/reqData/searchData/roll_b", exp_roll_b);
											model.setValue("/root/reqData/searchData/roll_c", exp_roll_c);
											model.send("mt_papord_5008_l");
											
											if (model.getValue("/root/tempData/CURLIST/record/a_roll") == "0"){
												datagrid2.valueMatrix(j, datagrid2.colRef("roll_a")) 	= 0;
												datagrid2.valueMatrix(j, datagrid2.colRef("car_a"))	= 0;
												datagrid2.valueMatrix(j, datagrid2.colRef("wgt_a")) 	= 0;
											} else {
												datagrid2.valueMatrix(j, datagrid2.colRef("roll_a")) 	= (Math.floor(eval(model.getValue("/root/tempData/CURLIST/record/a_roll")) / eval(car_roll_a))) * eval(car_roll_a);
												datagrid2.valueMatrix(j, datagrid2.colRef("car_a"))	= Math.floor(eval(model.getValue("/root/tempData/CURLIST/record/a_roll")) / eval(car_roll_a));
												datagrid2.valueMatrix(j, datagrid2.colRef("wgt_a")) = eval(datagrid2.valueMatrix(j, datagrid2.colRef("roll_a"))) * eval(datagrid2.valueMatrix(j, datagrid2.colRef("roll_wgt_a")));
												
											}
											
											if (model.getValue("/root/tempData/CURLIST/record/c_roll") == "0"){
												datagrid2.valueMatrix(j, datagrid2.colRef("roll_c")) 	= 0;
												datagrid2.valueMatrix(j, datagrid2.colRef("car_c"))	= 0;
												datagrid2.valueMatrix(j, datagrid2.colRef("wgt_c")) 	= 0;
											} else {
												datagrid2.valueMatrix(j, datagrid2.colRef("roll_c")) 	= (Math.floor(eval(model.getValue("/root/tempData/CURLIST/record/c_roll")) / eval(car_roll_c))) * eval(car_roll_c);
												datagrid2.valueMatrix(j, datagrid2.colRef("car_c"))	= Math.floor(eval(model.getValue("/root/tempData/CURLIST/record/c_roll")) / eval(car_roll_c));
												datagrid2.valueMatrix(j, datagrid2.colRef("wgt_c")) = eval(datagrid2.valueMatrix(j, datagrid2.colRef("roll_c"))) * eval(datagrid2.valueMatrix(j, datagrid2.colRef("roll_wgt_c")));
											}
											
											// 	제지사 배분을 하면 배분한 결과를 저장할 그리드에 넣는다.
											//	저장할 그리드에 정보가 있으면 업데이트 없으면 행추가해서 인서트.
											var same_a = 0;
											var same_b = 0;
											var same_c = 0;
											//	A권
											for (var k=1; k<datagrid4.rows; k++){
												if (datagrid4.valueMatrix(k, datagrid4.colRef("issu_dt")) == datagrid2.valueMatrix(j, datagrid2.colRef("issu_dt")) &&
													datagrid4.valueMatrix(k, datagrid4.colRef("papcmpy_cd")) == datagrid2.valueMatrix(j, datagrid2.colRef("papcmpy_cd")) &&
													datagrid4.valueMatrix(k, datagrid4.colRef("matr_cd")) == datagrid2.valueMatrix(j, datagrid2.colRef("matr_cd_a"))){
													same_a = k;
												}
											}
											if (same_a == 0){
												datagrid4.addRow(true, true);
												datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("issu_dt")) = datagrid2.valueMatrix(j, datagrid2.colRef("issu_dt"));
												datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("papcmpy_cd")) = datagrid2.valueMatrix(j, datagrid2.colRef("papcmpy_cd"));
												datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("matr_cd")) = datagrid2.valueMatrix(j, datagrid2.colRef("matr_cd_a"));
												datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("ord_roll")) = datagrid2.valueMatrix(j, datagrid2.colRef("roll_a"));
												datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("ord_wgt")) = datagrid2.valueMatrix(j, datagrid2.colRef("wgt_a"));
												datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("car_cnt")) = datagrid2.valueMatrix(j, datagrid2.colRef("car_a"));
											} else {
												datagrid4.valueMatrix(same_a, datagrid4.colRef("ord_roll")) = datagrid2.valueMatrix(j, datagrid2.colRef("roll_a"));
												datagrid4.valueMatrix(same_a, datagrid4.colRef("ord_wgt")) = datagrid2.valueMatrix(j, datagrid2.colRef("wgt_a"));
												datagrid4.valueMatrix(same_a, datagrid4.colRef("car_cnt")) = datagrid2.valueMatrix(j, datagrid2.colRef("car_a"));
												if (datagrid4.rowStatus(same_a) != 1){
													datagrid4.rowStatus(same_a) = 2;
												}
												
											}
											//	B권
											for (var k=1; k<datagrid4.rows; k++){
												if (datagrid4.valueMatrix(k, datagrid4.colRef("issu_dt")) == datagrid2.valueMatrix(j, datagrid2.colRef("issu_dt")) &&
													datagrid4.valueMatrix(k, datagrid4.colRef("papcmpy_cd")) == datagrid2.valueMatrix(j, datagrid2.colRef("papcmpy_cd")) &&
													datagrid4.valueMatrix(k, datagrid4.colRef("matr_cd")) == datagrid2.valueMatrix(j, datagrid2.colRef("matr_cd_b"))){
													same_b = k;
												}
											}
											if (same_b == 0){
												datagrid4.addRow(true, true);
												datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("issu_dt")) = datagrid2.valueMatrix(j, datagrid2.colRef("issu_dt"));
												datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("papcmpy_cd")) = datagrid2.valueMatrix(j, datagrid2.colRef("papcmpy_cd"));
												datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("matr_cd")) = datagrid2.valueMatrix(j, datagrid2.colRef("matr_cd_b"));
												datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("ord_roll")) = datagrid2.valueMatrix(j, datagrid2.colRef("roll_b"));
												datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("ord_wgt")) = datagrid2.valueMatrix(j, datagrid2.colRef("wgt_b"));
												datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("car_cnt")) = datagrid2.valueMatrix(j, datagrid2.colRef("car_b"));
											} else {
												datagrid4.valueMatrix(same_b, datagrid4.colRef("ord_roll")) = datagrid2.valueMatrix(j, datagrid2.colRef("roll_b"));
												datagrid4.valueMatrix(same_b, datagrid4.colRef("ord_wgt")) = datagrid2.valueMatrix(j, datagrid2.colRef("wgt_b"));
												datagrid4.valueMatrix(same_b, datagrid4.colRef("car_cnt")) = datagrid2.valueMatrix(j, datagrid2.colRef("car_b"));
												if (datagrid4.rowStatus(same_b) != 1){
													datagrid4.rowStatus(same_b) = 2;
												}
											}
											//	C권
											for (var k=1; k<datagrid4.rows; k++){
												if (datagrid4.valueMatrix(k, datagrid4.colRef("issu_dt")) == datagrid2.valueMatrix(j, datagrid2.colRef("issu_dt")) &&
													datagrid4.valueMatrix(k, datagrid4.colRef("papcmpy_cd")) == datagrid2.valueMatrix(j, datagrid2.colRef("papcmpy_cd")) &&
													datagrid4.valueMatrix(k, datagrid4.colRef("matr_cd")) == datagrid2.valueMatrix(j, datagrid2.colRef("matr_cd_c"))){
													same_c = k;
												}
											}
											if (same_c == 0){
												datagrid4.addRow(true, true);
												datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("issu_dt")) = datagrid2.valueMatrix(j, datagrid2.colRef("issu_dt"));
												datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("papcmpy_cd")) = datagrid2.valueMatrix(j, datagrid2.colRef("papcmpy_cd"));
												datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("matr_cd")) = datagrid2.valueMatrix(j, datagrid2.colRef("matr_cd_c"));
												datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("ord_roll")) = datagrid2.valueMatrix(j, datagrid2.colRef("roll_c"));
												datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("ord_wgt")) = datagrid2.valueMatrix(j, datagrid2.colRef("wgt_c"));
												datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("car_cnt")) = datagrid2.valueMatrix(j, datagrid2.colRef("car_c"));
											} else {
												datagrid4.valueMatrix(same_c, datagrid4.colRef("ord_roll")) = datagrid2.valueMatrix(j, datagrid2.colRef("roll_c"));
												datagrid4.valueMatrix(same_c, datagrid4.colRef("ord_wgt")) = datagrid2.valueMatrix(j, datagrid2.colRef("wgt_c"));
												datagrid4.valueMatrix(same_c, datagrid4.colRef("car_cnt")) = datagrid2.valueMatrix(j, datagrid2.colRef("car_c"));
												if (datagrid4.rowStatus(same_c) != 1){
													datagrid4.rowStatus(same_c) = 2;
												}
											}
										}
										
										for (var ii=datagrid1.fixedRows; ii<datagrid1.rows; ii++){
											var t_roll_a 		= 0;
											var t_wgt_a		= 0;
											var t_roll_b 		= 0;
											var t_wgt_b		= 0;
											var t_roll_c 		= 0;
											var t_wgt_c		= 0;
											var t_car_a		= 0;
											var t_car_b		= 0;
											var t_car_c		= 0;
											
											if (datagrid1.valueMatrix(ii, datagrid1.colRef("issu_dt")) > issu_dt) {		// 발주수정 범위
												//	변동된 발주정보의 합을 구한다.
												for (var jj=datagrid2.fixedRows; jj<datagrid2.rows; jj++){
													if (datagrid1.valueMatrix(ii, datagrid1.colRef("issu_dt")) == datagrid2.valueMatrix(jj, datagrid2.colRef("issu_dt"))){
														t_roll_a = t_roll_a + eval(datagrid2.valueMatrix(jj, datagrid2.colRef("roll_a"))) + eval(datagrid2.valueMatrix(jj, datagrid2.colRef("mix_roll_a")));
														t_wgt_a = t_wgt_a + eval(datagrid2.valueMatrix(jj, datagrid2.colRef("wgt_a"))) + eval(datagrid2.valueMatrix(jj, datagrid2.colRef("mix_wgt_a")));
														t_car_a = t_car_a + eval(datagrid2.valueMatrix(jj, datagrid2.colRef("car_a")));
						
														t_roll_b = t_roll_b + eval(datagrid2.valueMatrix(jj, datagrid2.colRef("roll_b"))) + eval(datagrid2.valueMatrix(jj, datagrid2.colRef("mix_roll_b")));
														t_wgt_b = t_wgt_b + eval(datagrid2.valueMatrix(jj, datagrid2.colRef("wgt_b"))) + eval(datagrid2.valueMatrix(jj, datagrid2.colRef("mix_wgt_b")));
														t_car_b = t_car_b + eval(datagrid2.valueMatrix(jj, datagrid2.colRef("car_b")));
						
														t_roll_c = t_roll_c + eval(datagrid2.valueMatrix(jj, datagrid2.colRef("roll_c"))) + eval(datagrid2.valueMatrix(jj, datagrid2.colRef("mix_roll_c")));
														t_wgt_c = t_wgt_c + eval(datagrid2.valueMatrix(jj, datagrid2.colRef("wgt_c"))) + eval(datagrid2.valueMatrix(jj, datagrid2.colRef("mix_wgt_c")));
														t_car_c = t_car_c + eval(datagrid2.valueMatrix(jj, datagrid2.colRef("car_c")));
													}
												}
												//	변동된 발주정보의 합을 발주마스터 그리드에 저장한다.
												//if (datagrid2.valueMatrix(j, datagrid2.colRef("issu_dt")) == datagrid1.valueMatrix(ii, datagrid1.colRef("issu_dt"))) {
													datagrid1.valueMatrix(ii, datagrid1.colRef("ordr_roll_cnt_a")) = t_roll_a;
													datagrid1.valueMatrix(ii, datagrid1.colRef("ordr_roll_cnt_b")) = t_roll_b;
													datagrid1.valueMatrix(ii, datagrid1.colRef("ordr_roll_cnt_c")) = t_roll_c;
													datagrid1.valueMatrix(ii, datagrid1.colRef("ordr_wgt_a")) = t_wgt_a;
													datagrid1.valueMatrix(ii, datagrid1.colRef("ordr_wgt_b")) = t_wgt_b;
													datagrid1.valueMatrix(ii, datagrid1.colRef("ordr_wgt_c")) = t_wgt_c;
													
													f_makeResult(ii);
												
													f_makeResult2(ii);
												//}
											}
										}
									}
								}
							}	// for datagrid2
							
							
							
							
						}
						
						//f_makeResult(i);
					}
					//roll_a_sum = parseInt(model1.getValue("/root/resData/gridData2_sum/sum_ordr_roll_cnt_a"));
					//roll_b_sum = parseInt(model1.getValue("/root/resData/gridData2_sum/sum_ordr_roll_cnt_b"));
					//roll_c_sum = parseInt(model1.getValue("/root/resData/gridData2_sum/sum_ordr_roll_cnt_c"));
					
					//wgt_a_sum  = parseInt(model1.getValue("/root/resData/gridData2_sum/sum_ordr_wgt_a"));
					//wgt_b_sum  = parseInt(model1.getValue("/root/resData/gridData2_sum/sum_ordr_wgt_b"));
					//wgt_c_sum  = parseInt(model1.getValue("/root/resData/gridData2_sum/sum_ordr_wgt_c"));
					
					//model1.setValue("/root/resData/gridData1/record["+(iRowIndex-2)+"]/ordr_roll_cnt_a",roll_a_sum);
					//model1.setValue("/root/resData/gridData1/record["+(iRowIndex-2)+"]/ordr_roll_cnt_b",roll_b_sum);
					//model1.setValue("/root/resData/gridData1/record["+(iRowIndex-2)+"]/ordr_roll_cnt_c",roll_c_sum);
					
					//model1.setValue("/root/resData/gridData1/record["+(iRowIndex-2)+"]/ordr_wgt_a",wgt_a_sum);
					//model1.setValue("/root/resData/gridData1/record["+(iRowIndex-2)+"]/ordr_wgt_b",wgt_b_sum);
					//model1.setValue("/root/resData/gridData1/record["+(iRowIndex-2)+"]/ordr_wgt_c",wgt_c_sum);
					
					//funJGResult();
				}
				
				function funMixBJChang() {
					var roll_a_sum = 0;
					var roll_b_sum = 0;
					var roll_c_sum = 0;
					var wgt_a_sum  = 0;
					var wgt_b_sum  = 0;
					var wgt_c_sum  = 0;
					var issu_dt	= "";
					var first_ordr_wgt_a	= 0;
					var first_ordr_wgt_b	= 0;
					var first_ordr_wgt_c	= 0;
					var exp_wgt_a	= 0;
					var exp_roll_a	= 0;
					var exp_wgt_b	= 0;
					var exp_roll_b	= 0;
					var exp_wgt_c	= 0;
					var exp_roll_c	= 0;
					var car_roll_a		= eval(model1.getValue("/root/reqData/facpaperamss/roll_cnt_a"));
					var car_roll_b		= eval(model1.getValue("/root/reqData/facpaperamss/roll_cnt_b"));
					var car_roll_c		= eval(model1.getValue("/root/reqData/facpaperamss/roll_cnt_c"));
					
					//var iRowIndex  = datagrid1.row;	//DataGrid1의 선택된 인덱스
					var ii		= datagrid2.row;
					//alert(ii);
					
					issu_dt = datagrid2.valueMatrix(ii, datagrid2.colRef("issu_dt"));
					//alert("수정한 일자=" + issu_dt);
					//	최초 수정한 일자의 정보를 발주마스터에 저장한다.
					for (var i=datagrid2.fixedRows; i<datagrid2.rows; i++){
						if (datagrid2.valueMatrix(i, datagrid2.colRef("issu_dt")) == issu_dt){
							
							var samemix_a = 0;
							var samemix_b = 0;
							var samemix_c = 0;
							
							for (var k=1; k<datagrid3.rows; k++){
								if (datagrid3.valueMatrix(k, datagrid3.colRef("issu_dt")) == datagrid2.valueMatrix(i, datagrid2.colRef("issu_dt")) &&
									datagrid3.valueMatrix(k, datagrid3.colRef("papcmpy_cd")) == datagrid2.valueMatrix(i, datagrid2.colRef("papcmpy_cd")) &&
									datagrid3.valueMatrix(k, datagrid3.colRef("matr_cd")) == datagrid2.valueMatrix(i, datagrid2.colRef("matr_cd_a"))){
									samemix_a = k;
								}
							}
							if (samemix_a == 0){
								datagrid3.addRow(true, true);
								datagrid3.valueMatrix(datagrid3.rows -1, datagrid3.colRef("issu_dt")) = datagrid2.valueMatrix(i, datagrid2.colRef("issu_dt"));
								datagrid3.valueMatrix(datagrid3.rows -1, datagrid3.colRef("papcmpy_cd")) = datagrid2.valueMatrix(i, datagrid2.colRef("papcmpy_cd"));
								datagrid3.valueMatrix(datagrid3.rows -1, datagrid3.colRef("matr_cd")) = datagrid2.valueMatrix(i, datagrid2.colRef("matr_cd_a"));
								datagrid3.valueMatrix(datagrid3.rows -1, datagrid3.colRef("roll_cnt")) = datagrid2.valueMatrix(i, datagrid2.colRef("mix_roll_a"));
								datagrid3.valueMatrix(datagrid3.rows -1, datagrid3.colRef("wgt")) = datagrid2.valueMatrix(i, datagrid2.colRef("mix_wgt_a"));
							} else {
								datagrid3.valueMatrix(samemix_a, datagrid3.colRef("roll_cnt")) = datagrid2.valueMatrix(i, datagrid2.colRef("mix_roll_a"));
								datagrid3.valueMatrix(samemix_a, datagrid3.colRef("wgt")) = datagrid2.valueMatrix(i, datagrid2.colRef("mix_wgt_a"));
								if (datagrid3.rowStatus(samemix_a) != 1){
									datagrid3.rowStatus(samemix_a) = 2;
								}
							}
							
							for (var k=1; k<datagrid3.rows; k++){
								if (datagrid3.valueMatrix(k, datagrid3.colRef("issu_dt")) == datagrid2.valueMatrix(i, datagrid2.colRef("issu_dt")) &&
									datagrid3.valueMatrix(k, datagrid3.colRef("papcmpy_cd")) == datagrid2.valueMatrix(i, datagrid2.colRef("papcmpy_cd")) &&
									datagrid3.valueMatrix(k, datagrid3.colRef("matr_cd")) == datagrid2.valueMatrix(i, datagrid2.colRef("matr_cd_b"))){
									samemix_b = k;
								}
							}
							if (samemix_b == 0){
								datagrid3.addRow(true, true);
								datagrid3.valueMatrix(datagrid3.rows -1, datagrid3.colRef("issu_dt")) = datagrid2.valueMatrix(i, datagrid2.colRef("issu_dt"));
								datagrid3.valueMatrix(datagrid3.rows -1, datagrid3.colRef("papcmpy_cd")) = datagrid2.valueMatrix(i, datagrid2.colRef("papcmpy_cd"));
								datagrid3.valueMatrix(datagrid3.rows -1, datagrid3.colRef("matr_cd")) = datagrid2.valueMatrix(i, datagrid2.colRef("matr_cd_b"));
								datagrid3.valueMatrix(datagrid3.rows -1, datagrid3.colRef("roll_cnt")) = datagrid2.valueMatrix(i, datagrid2.colRef("mix_roll_b"));
								datagrid3.valueMatrix(datagrid3.rows -1, datagrid3.colRef("wgt")) = datagrid2.valueMatrix(i, datagrid2.colRef("mix_wgt_b"));
							} else {
								datagrid3.valueMatrix(samemix_b, datagrid3.colRef("roll_cnt")) = datagrid2.valueMatrix(i, datagrid2.colRef("mix_roll_b"));
								datagrid3.valueMatrix(samemix_b, datagrid3.colRef("wgt")) = datagrid2.valueMatrix(i, datagrid2.colRef("mix_wgt_b"));
								if (datagrid3.rowStatus(samemix_b) != 1){
									datagrid3.rowStatus(samemix_b) = 2;
								}
							}
						
							for (var k=1; k<datagrid3.rows; k++){
								if (datagrid3.valueMatrix(k, datagrid3.colRef("issu_dt")) == datagrid2.valueMatrix(i, datagrid2.colRef("issu_dt")) &&
									datagrid3.valueMatrix(k, datagrid3.colRef("papcmpy_cd")) == datagrid2.valueMatrix(i, datagrid2.colRef("papcmpy_cd")) &&
									datagrid3.valueMatrix(k, datagrid3.colRef("matr_cd")) == datagrid2.valueMatrix(i, datagrid2.colRef("matr_cd_c"))){
									samemix_c = k;
								}
							}
							if (samemix_c == 0){
								datagrid3.addRow(true, true);
								datagrid3.valueMatrix(datagrid3.rows -1, datagrid3.colRef("issu_dt")) = datagrid2.valueMatrix(i, datagrid2.colRef("issu_dt"));
								datagrid3.valueMatrix(datagrid3.rows -1, datagrid3.colRef("papcmpy_cd")) = datagrid2.valueMatrix(i, datagrid2.colRef("papcmpy_cd"));
								datagrid3.valueMatrix(datagrid3.rows -1, datagrid3.colRef("matr_cd")) = datagrid2.valueMatrix(i, datagrid2.colRef("matr_cd_c"));
								datagrid3.valueMatrix(datagrid3.rows -1, datagrid3.colRef("roll_cnt")) = datagrid2.valueMatrix(i, datagrid2.colRef("mix_roll_c"));
								datagrid3.valueMatrix(datagrid3.rows -1, datagrid3.colRef("wgt")) = datagrid2.valueMatrix(i, datagrid2.colRef("mix_wgt_c"));
							} else {
								datagrid3.valueMatrix(samemix_c, datagrid3.colRef("roll_cnt")) = datagrid2.valueMatrix(i, datagrid2.colRef("mix_roll_c"));
								datagrid3.valueMatrix(samemix_c, datagrid3.colRef("wgt")) = datagrid2.valueMatrix(i, datagrid2.colRef("mix_wgt_c"));
								if (datagrid3.rowStatus(samemix_c) != 1){
									datagrid3.rowStatus(samemix_c) = 2;
								}
							}
							
							roll_a_sum 	= roll_a_sum + eval(datagrid2.valueMatrix(i, datagrid2.colRef("roll_a"))) + eval(datagrid2.valueMatrix(i, datagrid2.colRef("mix_roll_a")));
							wgt_a_sum 	= wgt_a_sum + eval(datagrid2.valueMatrix(i, datagrid2.colRef("wgt_a"))) + eval(datagrid2.valueMatrix(i, datagrid2.colRef("mix_wgt_a")));
							
							roll_b_sum 	= roll_b_sum + eval(datagrid2.valueMatrix(i, datagrid2.colRef("roll_b"))) + eval(datagrid2.valueMatrix(i, datagrid2.colRef("mix_roll_b")));
							wgt_b_sum 	= wgt_b_sum + eval(datagrid2.valueMatrix(i, datagrid2.colRef("wgt_b"))) + eval(datagrid2.valueMatrix(i, datagrid2.colRef("mix_wgt_b")));
							
							roll_c_sum 	= roll_c_sum + eval(datagrid2.valueMatrix(i, datagrid2.colRef("roll_c"))) + eval(datagrid2.valueMatrix(i, datagrid2.colRef("mix_roll_c")));
							wgt_c_sum 	= wgt_c_sum + eval(datagrid2.valueMatrix(i, datagrid2.colRef("wgt_c"))) + eval(datagrid2.valueMatrix(i, datagrid2.colRef("mix_wgt_c")));
						}
					}
					
					for (var i=datagrid1.fixedRows; i<datagrid1.rows; i++){
						if (datagrid1.valueMatrix(i, datagrid1.colRef("issu_dt")) == issu_dt){
							datagrid1.valueMatrix(i, datagrid1.colRef("ordr_roll_cnt_a")) = roll_a_sum;
							datagrid1.valueMatrix(i, datagrid1.colRef("ordr_roll_cnt_b")) = roll_b_sum;
							datagrid1.valueMatrix(i, datagrid1.colRef("ordr_roll_cnt_c")) = roll_c_sum;
							
							datagrid1.valueMatrix(i, datagrid1.colRef("ordr_wgt_a"))	= wgt_a_sum;
							datagrid1.valueMatrix(i, datagrid1.colRef("ordr_wgt_b"))	= wgt_b_sum;
							datagrid1.valueMatrix(i, datagrid1.colRef("ordr_wgt_c"))	= wgt_c_sum;
							
							//datagrid1.valueMatrix(i, datagrid1.colRef("chg_yn")) = "Y";
							f_makeResult(i);
							f_makeResult2(i);
						}
					}
					
					//	수정하고 나서 변경된 일자의 이후 일자에 대한 발주량을 다시 맞춘다.
					for (var i=datagrid1.fixedRows; i<datagrid1.rows; i++){
						if (datagrid1.valueMatrix(i, datagrid1.colRef("issu_dt")) > issu_dt){		// 발주수정 범위...
							//alert(datagrid1.valueMatrix(i, datagrid1.colRef("issu_dt")));
							
							for (var j=datagrid2.fixedRows; j< datagrid2.rows; j++){	// for datagrid2
								if (datagrid2.valueMatrix(j, datagrid2.colRef("issu_dt")) == datagrid1.valueMatrix(i, datagrid1.colRef("issu_dt"))){
									if ( datagrid2.valueMatrix(j, datagrid2.colRef("ord")) == "01"){
										first_ordr_wgt_a = eval(datagrid1.valueMatrix(i, datagrid1.colRef("ordr_wgt_a")));
										first_ordr_wgt_b = eval(datagrid1.valueMatrix(i, datagrid1.colRef("ordr_wgt_b")));
										first_ordr_wgt_c = eval(datagrid1.valueMatrix(i, datagrid1.colRef("ordr_wgt_c")));
										
										//alert(datagrid2.valueMatrix(j, datagrid2.colRef("p_ratio")) + "\n" + datagrid1.valueMatrix(i, datagrid1.colRef("ordr_wgt_a")));
										exp_wgt_a = (eval(datagrid2.valueMatrix(j, datagrid2.colRef("p_ratio"))) / 10) * datagrid1.valueMatrix(i, datagrid1.colRef("ordr_wgt_a"));
										exp_wgt_b = (eval(datagrid2.valueMatrix(j, datagrid2.colRef("p_ratio"))) / 10) * datagrid1.valueMatrix(i, datagrid1.colRef("ordr_wgt_b"));
										exp_wgt_c = (eval(datagrid2.valueMatrix(j, datagrid2.colRef("p_ratio"))) / 10) * datagrid1.valueMatrix(i, datagrid1.colRef("ordr_wgt_c"));
										
										//alert("01........" + exp_wgt_b + "\n" + datagrid2.valueMatrix(j, datagrid2.colRef("roll_wgt_b")) + "\n" + exp_wgt_a + "\n" + datagrid2.valueMatrix(j, datagrid2.colRef("roll_wgt_a")) + "\n" + exp_wgt_c + "\n" + datagrid2.valueMatrix(j, datagrid2.colRef("roll_wgt_c")));
										if (exp_wgt_a == 0){
											exp_roll_a = 0;
										} else {
											exp_roll_a = Math.ceil(exp_wgt_a / eval(datagrid2.valueMatrix(j, datagrid2.colRef("roll_wgt_a"))) );
										}
										if (exp_wgt_b == 0){
											exp_roll_b = 0;
										} else {
											if (eval(datagrid2.valueMatrix(j, datagrid2.colRef("roll_wgt_b"))) == 0){
												exp_roll_b = 0;
											} else {
												exp_roll_b = Math.ceil(exp_wgt_b / eval(datagrid2.valueMatrix(j, datagrid2.colRef("roll_wgt_b"))) );
											}
										}
										if (exp_wgt_c == 0){
											exp_roll_c = 0;
										} else {
											if (eval(datagrid2.valueMatrix(j, datagrid2.colRef("roll_wgt_c"))) == 0){
												exp_roll_c = 0;
											} else {
												exp_roll_c = Math.ceil(exp_wgt_c / eval(datagrid2.valueMatrix(j, datagrid2.colRef("roll_wgt_c"))) );
											}
										}
										
										if (exp_roll_a == 0 && exp_roll_c == 0){	//	발주롤수 산정.if
											datagrid2.valueMatrix(j, datagrid2.colRef("roll_a")) = 0;
											datagrid2.valueMatrix(j, datagrid2.colRef("roll_c")) = 0;
											
											datagrid2.valueMatrix(j, datagrid2.colRef("wgt_a")) = 0;
											datagrid2.valueMatrix(j, datagrid2.colRef("wgt_c")) = 0;
										} else {
											//alert(exp_roll_a + "\n" + exp_roll_b + "\n" + exp_roll_c);
											model.setValue("/root/reqData/searchData/roll_a", exp_roll_a);
											model.setValue("/root/reqData/searchData/roll_c", exp_roll_c);
											
											model.send("mt_papord_5008_l");
											
											if (model.getValue("/root/tempData/CURLIST/record/a_roll") == "0"){
												datagrid2.valueMatrix(j, datagrid2.colRef("roll_a")) 	= 0;
												datagrid2.valueMatrix(j, datagrid2.colRef("car_a"))	= 0;
												datagrid2.valueMatrix(j, datagrid2.colRef("wgt_a")) 	= 0;
											} else {
												datagrid2.valueMatrix(j, datagrid2.colRef("roll_a")) 	= (Math.floor(eval(model.getValue("/root/tempData/CURLIST/record/a_roll")) / eval(car_roll_a))) * eval(car_roll_a);
												datagrid2.valueMatrix(j, datagrid2.colRef("car_a"))	= Math.floor(eval(model.getValue("/root/tempData/CURLIST/record/a_roll")) / eval(car_roll_a));
												datagrid2.valueMatrix(j, datagrid2.colRef("wgt_a")) 	= eval(datagrid2.valueMatrix(j, datagrid2.colRef("roll_a"))) * eval(datagrid2.valueMatrix(j, datagrid2.colRef("roll_wgt_a")));
												
											}
											
											if (model.getValue("/root/tempData/CURLIST/record/c_roll") == "0"){
												datagrid2.valueMatrix(j, datagrid2.colRef("roll_c")) 	= 0;
												datagrid2.valueMatrix(j, datagrid2.colRef("car_c"))	= 0;
												datagrid2.valueMatrix(j, datagrid2.colRef("wgt_c")) 	= 0;
											} else {
												datagrid2.valueMatrix(j, datagrid2.colRef("roll_c")) 	= (Math.floor(eval(model.getValue("/root/tempData/CURLIST/record/c_roll")) / eval(car_roll_c))) * eval(car_roll_c);
												datagrid2.valueMatrix(j, datagrid2.colRef("car_c"))	= Math.floor(eval(model.getValue("/root/tempData/CURLIST/record/c_roll")) / eval(car_roll_c));
												datagrid2.valueMatrix(j, datagrid2.colRef("wgt_c")) 	= eval(datagrid2.valueMatrix(j, datagrid2.colRef("roll_c"))) * eval(datagrid2.valueMatrix(j, datagrid2.colRef("roll_wgt_c")));
											
											}
											
											// 	제지사 배분을 하면 배분한 결과를 저장할 그리드에 넣는다.
											//	저장할 그리드에 정보가 있으면 업데이트 없으면 행추가해서 인서트.
											var same_a = 0;
											var same_b = 0;
											var same_c = 0;
											
											for (var k=1; k<datagrid4.rows; k++){
												if (datagrid4.valueMatrix(k, datagrid4.colRef("issu_dt")) == datagrid2.valueMatrix(j, datagrid2.colRef("issu_dt")) &&
													datagrid4.valueMatrix(k, datagrid4.colRef("papcmpy_cd")) == datagrid2.valueMatrix(j, datagrid2.colRef("papcmpy_cd")) &&
													datagrid4.valueMatrix(k, datagrid4.colRef("matr_cd")) == datagrid2.valueMatrix(j, datagrid2.colRef("matr_cd_a"))){
													same_a = k;
												}
											}
											
											if (same_a == 0){
												datagrid4.addRow(true, true);
												datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("issu_dt")) = datagrid2.valueMatrix(j, datagrid2.colRef("issu_dt"));
												datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("papcmpy_cd")) = datagrid2.valueMatrix(j, datagrid2.colRef("papcmpy_cd"));
												datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("matr_cd")) = datagrid2.valueMatrix(j, datagrid2.colRef("matr_cd_a"));
												datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("ord_roll")) = datagrid2.valueMatrix(j, datagrid2.colRef("roll_a"));
												datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("ord_wgt")) = datagrid2.valueMatrix(j, datagrid2.colRef("wgt_a"));
												datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("car_cnt")) = datagrid2.valueMatrix(j, datagrid2.colRef("car_a"));
											} else {
												datagrid4.valueMatrix(same_a, datagrid4.colRef("ord_roll")) = datagrid2.valueMatrix(j, datagrid2.colRef("roll_a"));
												datagrid4.valueMatrix(same_a, datagrid4.colRef("ord_wgt")) = datagrid2.valueMatrix(j, datagrid2.colRef("wgt_a"));
												datagrid4.valueMatrix(same_a, datagrid4.colRef("car_cnt")) = datagrid2.valueMatrix(j, datagrid2.colRef("car_a"));
												if (datagrid4.rowStatus(same_a) != 1){
													datagrid4.rowStatus(same_a) = 2;
												}
											}
											
											for (var k=1; k<datagrid4.rows; k++){
												if (datagrid4.valueMatrix(k, datagrid4.colRef("issu_dt")) == datagrid2.valueMatrix(j, datagrid2.colRef("issu_dt")) &&
													datagrid4.valueMatrix(k, datagrid4.colRef("papcmpy_cd")) == datagrid2.valueMatrix(j, datagrid2.colRef("papcmpy_cd")) &&
													datagrid4.valueMatrix(k, datagrid4.colRef("matr_cd")) == datagrid2.valueMatrix(j, datagrid2.colRef("matr_cd_b"))){
													same_b = k;
												}
											}
											
											if (same_b == 0){
												//alert("....");
												datagrid4.addRow(true, true);
												datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("issu_dt")) = datagrid2.valueMatrix(j, datagrid2.colRef("issu_dt"));
												datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("papcmpy_cd")) = datagrid2.valueMatrix(j, datagrid2.colRef("papcmpy_cd"));
												datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("matr_cd")) = datagrid2.valueMatrix(j, datagrid2.colRef("matr_cd_b"));
												datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("ord_roll")) = datagrid2.valueMatrix(j, datagrid2.colRef("roll_b"));
												datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("ord_wgt")) = datagrid2.valueMatrix(j, datagrid2.colRef("wgt_b"));
												datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("car_cnt")) = datagrid2.valueMatrix(j, datagrid2.colRef("car_b"));
											} else {
												datagrid4.valueMatrix(same_b, datagrid4.colRef("ord_roll")) = datagrid2.valueMatrix(j, datagrid2.colRef("roll_b"));
												datagrid4.valueMatrix(same_b, datagrid4.colRef("ord_wgt")) = datagrid2.valueMatrix(j, datagrid2.colRef("wgt_b"));
												datagrid4.valueMatrix(same_b, datagrid4.colRef("car_cnt")) = datagrid2.valueMatrix(j, datagrid2.colRef("car_b"));
												if (datagrid4.rowStatus(same_b) != 1){
													datagrid4.rowStatus(same_b) = 2;
												}
											}
											
											for (var k=1; k<datagrid4.rows; k++){
												if (datagrid4.valueMatrix(k, datagrid4.colRef("issu_dt")) == datagrid2.valueMatrix(j, datagrid2.colRef("issu_dt")) &&
													datagrid4.valueMatrix(k, datagrid4.colRef("papcmpy_cd")) == datagrid2.valueMatrix(j, datagrid2.colRef("papcmpy_cd")) &&
													datagrid4.valueMatrix(k, datagrid4.colRef("matr_cd")) == datagrid2.valueMatrix(j, datagrid2.colRef("matr_cd_c"))){
													same_c = k;
												}
											}
											
											if (same_c == 0){
												datagrid4.addRow(true, true);
												datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("issu_dt")) = datagrid2.valueMatrix(j, datagrid2.colRef("issu_dt"));
												datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("papcmpy_cd")) = datagrid2.valueMatrix(j, datagrid2.colRef("papcmpy_cd"));
												datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("matr_cd")) = datagrid2.valueMatrix(j, datagrid2.colRef("matr_cd_c"));
												datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("ord_roll")) = datagrid2.valueMatrix(j, datagrid2.colRef("roll_c"));
												datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("ord_wgt")) = datagrid2.valueMatrix(j, datagrid2.colRef("wgt_c"));
												datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("car_cnt")) = datagrid2.valueMatrix(j, datagrid2.colRef("car_c"));
											} else {
												datagrid4.valueMatrix(same_c, datagrid4.colRef("ord_roll")) = datagrid2.valueMatrix(j, datagrid2.colRef("roll_c"));
												datagrid4.valueMatrix(same_c, datagrid4.colRef("ord_wgt")) = datagrid2.valueMatrix(j, datagrid2.colRef("wgt_c"));
												datagrid4.valueMatrix(same_c, datagrid4.colRef("car_cnt")) = datagrid2.valueMatrix(j, datagrid2.colRef("car_c"));
												if (datagrid4.rowStatus(same_c) != 1){
													datagrid4.rowStatus(same_c) = 2;
												}
											}
										}			//	발주롤수 산정.if
										
										for (var ii=datagrid1.fixedRows; ii<datagrid1.rows; ii++){
											var t_roll_a 		= 0;
											var t_wgt_a		= 0;
											var t_roll_b 		= 0;
											var t_wgt_b		= 0;
											var t_roll_c 		= 0;
											var t_wgt_c		= 0;
											var t_car_a		= 0;
											var t_car_b		= 0;
											var t_car_c		= 0;
											var issu_ddt		= "";
											issu_ddt			= datagrid1.valueMatrix(ii, datagrid1.colRef("issu_dt"));
											
											if (issu_ddt > issu_dt) {		// 발주수정 범위
												//alert("변경된 발주량을 다시 발주마스터에=" + datagrid1.valueMatrix(ii, datagrid1.colRef("issu_dt")));
												
												for (var jj=datagrid2.fixedRows; jj<datagrid2.rows; jj++){
													if (issu_ddt == datagrid2.valueMatrix(jj, datagrid2.colRef("issu_dt"))){
														t_roll_a = t_roll_a + eval(datagrid2.valueMatrix(jj, datagrid2.colRef("roll_a"))) + eval(datagrid2.valueMatrix(jj, datagrid2.colRef("mix_roll_a")));
														t_wgt_a = t_wgt_a + eval(datagrid2.valueMatrix(jj, datagrid2.colRef("wgt_a"))) + eval(datagrid2.valueMatrix(jj, datagrid2.colRef("mix_wgt_a")));
														t_car_a = t_car_a + eval(datagrid2.valueMatrix(jj, datagrid2.colRef("car_a")));
						
														t_roll_b = t_roll_b + eval(datagrid2.valueMatrix(jj, datagrid2.colRef("roll_b"))) + eval(datagrid2.valueMatrix(jj, datagrid2.colRef("mix_roll_b")));
														t_wgt_b = t_wgt_b + eval(datagrid2.valueMatrix(jj, datagrid2.colRef("wgt_b"))) + eval(datagrid2.valueMatrix(jj, datagrid2.colRef("mix_wgt_b")));
														t_car_b = t_car_b + eval(datagrid2.valueMatrix(jj, datagrid2.colRef("car_b")));
						
														t_roll_c = t_roll_c + eval(datagrid2.valueMatrix(jj, datagrid2.colRef("roll_c"))) + eval(datagrid2.valueMatrix(jj, datagrid2.colRef("mix_roll_c")));
														t_wgt_c = t_wgt_c + eval(datagrid2.valueMatrix(jj, datagrid2.colRef("wgt_c"))) + eval(datagrid2.valueMatrix(jj, datagrid2.colRef("mix_wgt_c")));
														t_car_c = t_car_c + eval(datagrid2.valueMatrix(jj, datagrid2.colRef("car_c")));
													}
												}
												//alert(datagrid2.valueMatrix(j, datagrid2.colRef("issu_dt")) + "\n" + datagrid1.valueMatrix(ii, datagrid1.colRef("issu_dt")));
												//if ( datagrid2.valueMatrix(j, datagrid2.colRef("issu_dt"))  == datagrid1.valueMatrix(ii, datagrid1.colRef("issu_dt"))) {
													datagrid1.valueMatrix(ii, datagrid1.colRef("ordr_roll_cnt_a")) = t_roll_a;
													datagrid1.valueMatrix(ii, datagrid1.colRef("ordr_roll_cnt_b")) = t_roll_b;
													datagrid1.valueMatrix(ii, datagrid1.colRef("ordr_roll_cnt_c")) = t_roll_c;
													datagrid1.valueMatrix(ii, datagrid1.colRef("ordr_wgt_a")) = t_wgt_a;
													datagrid1.valueMatrix(ii, datagrid1.colRef("ordr_wgt_b")) = t_wgt_b;
													datagrid1.valueMatrix(ii, datagrid1.colRef("ordr_wgt_c")) = t_wgt_c;
													
													f_makeResult(ii);
												
													f_makeResult2(ii);
												//}
											}			// 발주수정 범위
										}
										
									} else {
										
										//alert("02........" + datagrid1.valueMatrix(i, datagrid1.colRef("ordr_wgt_a")) + "\n" +datagrid2.valueMatrix((j-1), datagrid2.colRef("wgt_a")) )
										exp_wgt_a = first_ordr_wgt_a - eval(datagrid2.valueMatrix((j-1), datagrid2.colRef("wgt_a")));
										exp_wgt_b = first_ordr_wgt_b - eval(datagrid2.valueMatrix((j-1), datagrid2.colRef("wgt_b")));
										exp_wgt_c = first_ordr_wgt_c - eval(datagrid2.valueMatrix((j-1), datagrid2.colRef("wgt_c")));
										
										
										//alert("02....." +exp_wgt_a + "\n" + exp_wgt_b + "\n" + exp_wgt_c);
										if (exp_wgt_a <= 0){
											exp_roll_a = 0;
										} else {
											exp_roll_a = Math.ceil(exp_wgt_a / eval(datagrid2.valueMatrix(j, datagrid2.colRef("roll_wgt_a"))) );
										}
										if (exp_wgt_b <= 0){
											exp_roll_b = 0;
										} else {
											exp_roll_b = Math.ceil(exp_wgt_b / eval(datagrid2.valueMatrix(j, datagrid2.colRef("roll_wgt_b"))) );
										}
										if (exp_wgt_c <= 0){
											exp_roll_c = 0;
										} else {
											exp_roll_c = Math.ceil(exp_wgt_c / eval(datagrid2.valueMatrix(j, datagrid2.colRef("roll_wgt_c"))) );
										}
										
										if (exp_roll_a == 0 && exp_roll_c == 0){
											datagrid2.valueMatrix(j, datagrid2.colRef("roll_a")) = 0;
											datagrid2.valueMatrix(j, datagrid2.colRef("roll_c")) = 0;
											
											datagrid2.valueMatrix(j, datagrid2.colRef("wgt_a")) = 0;
											datagrid2.valueMatrix(j, datagrid2.colRef("wgt_c")) = 0;
										} else {
											model.setValue("/root/reqData/searchData/roll_a", exp_roll_a);
											model.setValue("/root/reqData/searchData/roll_b", exp_roll_b);
											model.setValue("/root/reqData/searchData/roll_c", exp_roll_c);
											model.send("mt_papord_5008_l");
											
											if (model.getValue("/root/tempData/CURLIST/record/a_roll") == "0"){
												datagrid2.valueMatrix(j, datagrid2.colRef("roll_a")) 	= 0;
												datagrid2.valueMatrix(j, datagrid2.colRef("car_a"))	= 0;
												datagrid2.valueMatrix(j, datagrid2.colRef("wgt_a")) 	= 0;
											} else {
												datagrid2.valueMatrix(j, datagrid2.colRef("roll_a")) 	= (Math.floor(eval(model.getValue("/root/tempData/CURLIST/record/a_roll")) / eval(car_roll_a))) * eval(car_roll_a);
												datagrid2.valueMatrix(j, datagrid2.colRef("car_a"))	= Math.floor(eval(model.getValue("/root/tempData/CURLIST/record/a_roll")) / eval(car_roll_a));
												datagrid2.valueMatrix(j, datagrid2.colRef("wgt_a")) = eval(datagrid2.valueMatrix(j, datagrid2.colRef("roll_a"))) * eval(datagrid2.valueMatrix(j, datagrid2.colRef("roll_wgt_a")));
												
											}
											
											if (model.getValue("/root/tempData/CURLIST/record/c_roll") == "0"){
												datagrid2.valueMatrix(j, datagrid2.colRef("roll_c")) 	= 0;
												datagrid2.valueMatrix(j, datagrid2.colRef("car_c"))	= 0;
												datagrid2.valueMatrix(j, datagrid2.colRef("wgt_c")) 	= 0;
											} else {
												datagrid2.valueMatrix(j, datagrid2.colRef("roll_c")) 	= (Math.floor(eval(model.getValue("/root/tempData/CURLIST/record/c_roll")) / eval(car_roll_c))) * eval(car_roll_c);
												datagrid2.valueMatrix(j, datagrid2.colRef("car_c"))	= Math.floor(eval(model.getValue("/root/tempData/CURLIST/record/c_roll")) / eval(car_roll_c));
												datagrid2.valueMatrix(j, datagrid2.colRef("wgt_c")) = eval(datagrid2.valueMatrix(j, datagrid2.colRef("roll_c"))) * eval(datagrid2.valueMatrix(j, datagrid2.colRef("roll_wgt_c")));
											}
											
											// 	제지사 배분을 하면 배분한 결과를 저장할 그리드에 넣는다.
											//	저장할 그리드에 정보가 있으면 업데이트 없으면 행추가해서 인서트.
											var same_a = 0;
											var same_b = 0;
											var same_c = 0;
											//	A권
											for (var k=1; k<datagrid4.rows; k++){
												if (datagrid4.valueMatrix(k, datagrid4.colRef("issu_dt")) == datagrid2.valueMatrix(j, datagrid2.colRef("issu_dt")) &&
													datagrid4.valueMatrix(k, datagrid4.colRef("papcmpy_cd")) == datagrid2.valueMatrix(j, datagrid2.colRef("papcmpy_cd")) &&
													datagrid4.valueMatrix(k, datagrid4.colRef("matr_cd")) == datagrid2.valueMatrix(j, datagrid2.colRef("matr_cd_a"))){
													same_a = k;
												}
											}
											if (same_a == 0){
												datagrid4.addRow(true, true);
												datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("issu_dt")) = datagrid2.valueMatrix(j, datagrid2.colRef("issu_dt"));
												datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("papcmpy_cd")) = datagrid2.valueMatrix(j, datagrid2.colRef("papcmpy_cd"));
												datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("matr_cd")) = datagrid2.valueMatrix(j, datagrid2.colRef("matr_cd_a"));
												datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("ord_roll")) = datagrid2.valueMatrix(j, datagrid2.colRef("roll_a"));
												datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("ord_wgt")) = datagrid2.valueMatrix(j, datagrid2.colRef("wgt_a"));
												datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("car_cnt")) = datagrid2.valueMatrix(j, datagrid2.colRef("car_a"));
											} else {
												datagrid4.valueMatrix(same_a, datagrid4.colRef("ord_roll")) = datagrid2.valueMatrix(j, datagrid2.colRef("roll_a"));
												datagrid4.valueMatrix(same_a, datagrid4.colRef("ord_wgt")) = datagrid2.valueMatrix(j, datagrid2.colRef("wgt_a"));
												datagrid4.valueMatrix(same_a, datagrid4.colRef("car_cnt")) = datagrid2.valueMatrix(j, datagrid2.colRef("car_a"));
												if (datagrid4.rowStatus(same_a) != 1){
													datagrid4.rowStatus(same_a) = 2;
												}
												
											}
											//	B권
											for (var k=1; k<datagrid4.rows; k++){
												if (datagrid4.valueMatrix(k, datagrid4.colRef("issu_dt")) == datagrid2.valueMatrix(j, datagrid2.colRef("issu_dt")) &&
													datagrid4.valueMatrix(k, datagrid4.colRef("papcmpy_cd")) == datagrid2.valueMatrix(j, datagrid2.colRef("papcmpy_cd")) &&
													datagrid4.valueMatrix(k, datagrid4.colRef("matr_cd")) == datagrid2.valueMatrix(j, datagrid2.colRef("matr_cd_b"))){
													same_b = k;
												}
											}
											if (same_b == 0){
												//alert("22222");
												datagrid4.addRow(true, true);
												datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("issu_dt")) = datagrid2.valueMatrix(j, datagrid2.colRef("issu_dt"));
												datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("papcmpy_cd")) = datagrid2.valueMatrix(j, datagrid2.colRef("papcmpy_cd"));
												datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("matr_cd")) = datagrid2.valueMatrix(j, datagrid2.colRef("matr_cd_b"));
												datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("ord_roll")) = datagrid2.valueMatrix(j, datagrid2.colRef("roll_b"));
												datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("ord_wgt")) = datagrid2.valueMatrix(j, datagrid2.colRef("wgt_b"));
												datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("car_cnt")) = datagrid2.valueMatrix(j, datagrid2.colRef("car_b"));
											} else {
												datagrid4.valueMatrix(same_b, datagrid4.colRef("ord_roll")) = datagrid2.valueMatrix(j, datagrid2.colRef("roll_b"));
												datagrid4.valueMatrix(same_b, datagrid4.colRef("ord_wgt")) = datagrid2.valueMatrix(j, datagrid2.colRef("wgt_b"));
												datagrid4.valueMatrix(same_b, datagrid4.colRef("car_cnt")) = datagrid2.valueMatrix(j, datagrid2.colRef("car_b"));
												if (datagrid4.rowStatus(same_b) != 1){
													datagrid4.rowStatus(same_b) = 2;
												}
											}
											//	C권
											for (var k=1; k<datagrid4.rows; k++){
												if (datagrid4.valueMatrix(k, datagrid4.colRef("issu_dt")) == datagrid2.valueMatrix(j, datagrid2.colRef("issu_dt")) &&
													datagrid4.valueMatrix(k, datagrid4.colRef("papcmpy_cd")) == datagrid2.valueMatrix(j, datagrid2.colRef("papcmpy_cd")) &&
													datagrid4.valueMatrix(k, datagrid4.colRef("matr_cd")) == datagrid2.valueMatrix(j, datagrid2.colRef("matr_cd_c"))){
													same_c = k;
												}
											}
											if (same_c == 0){
												datagrid4.addRow(true, true);
												datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("issu_dt")) = datagrid2.valueMatrix(j, datagrid2.colRef("issu_dt"));
												datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("papcmpy_cd")) = datagrid2.valueMatrix(j, datagrid2.colRef("papcmpy_cd"));
												datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("matr_cd")) = datagrid2.valueMatrix(j, datagrid2.colRef("matr_cd_c"));
												datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("ord_roll")) = datagrid2.valueMatrix(j, datagrid2.colRef("roll_c"));
												datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("ord_wgt")) = datagrid2.valueMatrix(j, datagrid2.colRef("wgt_c"));
												datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("car_cnt")) = datagrid2.valueMatrix(j, datagrid2.colRef("car_c"));
											} else {
												datagrid4.valueMatrix(same_c, datagrid4.colRef("ord_roll")) = datagrid2.valueMatrix(j, datagrid2.colRef("roll_c"));
												datagrid4.valueMatrix(same_c, datagrid4.colRef("ord_wgt")) = datagrid2.valueMatrix(j, datagrid2.colRef("wgt_c"));
												datagrid4.valueMatrix(same_c, datagrid4.colRef("car_cnt")) = datagrid2.valueMatrix(j, datagrid2.colRef("car_c"));
												if (datagrid4.rowStatus(same_c) != 1){
													datagrid4.rowStatus(same_c) = 2;
												}
											}
										}
										
										for (var ii=datagrid1.fixedRows; ii<datagrid1.rows; ii++){
											var t_roll_a 		= 0;
											var t_wgt_a		= 0;
											var t_roll_b 		= 0;
											var t_wgt_b		= 0;
											var t_roll_c 		= 0;
											var t_wgt_c		= 0;
											var t_car_a		= 0;
											var t_car_b		= 0;
											var t_car_c		= 0;
											
											if (datagrid1.valueMatrix(ii, datagrid1.colRef("issu_dt")) > issu_dt) {		// 발주수정 범위
												//	변동된 발주정보의 합을 구한다.
												for (var jj=datagrid2.fixedRows; jj<datagrid2.rows; jj++){
													if (datagrid1.valueMatrix(ii, datagrid1.colRef("issu_dt")) == datagrid2.valueMatrix(jj, datagrid2.colRef("issu_dt"))){
														t_roll_a = t_roll_a + eval(datagrid2.valueMatrix(jj, datagrid2.colRef("roll_a"))) + eval(datagrid2.valueMatrix(jj, datagrid2.colRef("mix_roll_a")));
														t_wgt_a = t_wgt_a + eval(datagrid2.valueMatrix(jj, datagrid2.colRef("wgt_a"))) + eval(datagrid2.valueMatrix(jj, datagrid2.colRef("mix_wgt_a")));
														t_car_a = t_car_a + eval(datagrid2.valueMatrix(jj, datagrid2.colRef("car_a")));
						
														t_roll_b = t_roll_b + eval(datagrid2.valueMatrix(jj, datagrid2.colRef("roll_b"))) + eval(datagrid2.valueMatrix(jj, datagrid2.colRef("mix_roll_b")));
														t_wgt_b = t_wgt_b + eval(datagrid2.valueMatrix(jj, datagrid2.colRef("wgt_b"))) + eval(datagrid2.valueMatrix(jj, datagrid2.colRef("mix_wgt_b")));
														t_car_b = t_car_b + eval(datagrid2.valueMatrix(jj, datagrid2.colRef("car_b")));
						
														t_roll_c = t_roll_c + eval(datagrid2.valueMatrix(jj, datagrid2.colRef("roll_c"))) + eval(datagrid2.valueMatrix(jj, datagrid2.colRef("mix_roll_c")));
														t_wgt_c = t_wgt_c + eval(datagrid2.valueMatrix(jj, datagrid2.colRef("wgt_c"))) + eval(datagrid2.valueMatrix(jj, datagrid2.colRef("mix_wgt_c")));
														t_car_c = t_car_c + eval(datagrid2.valueMatrix(jj, datagrid2.colRef("car_c")));
													}
												}
												//	변동된 발주정보의 합을 발주마스터 그리드에 저장한다.
												datagrid1.valueMatrix(ii, datagrid1.colRef("ordr_roll_cnt_a")) = t_roll_a;
												datagrid1.valueMatrix(ii, datagrid1.colRef("ordr_roll_cnt_b")) = t_roll_b;
												datagrid1.valueMatrix(ii, datagrid1.colRef("ordr_roll_cnt_c")) = t_roll_c;
												datagrid1.valueMatrix(ii, datagrid1.colRef("ordr_wgt_a")) = t_wgt_a;
												datagrid1.valueMatrix(ii, datagrid1.colRef("ordr_wgt_b")) = t_wgt_b;
												datagrid1.valueMatrix(ii, datagrid1.colRef("ordr_wgt_c")) = t_wgt_c;
												
												f_makeResult(ii);
												
												f_makeResult2(ii);
											}
										}
									}
								}
							}	// for datagrid2
						}
					}
				}
				
				function funOther(colIndex) {
					var car_a = 0;		//차량적재롤수
					var car_b = 0;		//차량적재롤수
					var car_c = 0;		//차량적재롤수
					
					var roll_cnt_a = 0;	//롤수
					var roll_cnt_b = 0;	//롤수
					var roll_cnt_c = 0;	//롤수
					
					var roll_wgt_a = 0;	//롤수
					var roll_wgt_b = 0;	//롤수
					var roll_wgt_c = 0;	//롤수
					
					var car_prd_cnt_a = 0;	//차량수
					var car_prd_cnt_b = 0;	//차량수
					var car_prd_cnt_c = 0;	//차량수
					
					var roll_other_a = 0;		//나머지
					var roll_other_b = 0;		//나머지
					var roll_other_c = 0;		//나머지
					
					var iRowIndex = datagrid2.row;
					
					
					if(colIndex == "6") {
						roll_wgt_a	= eval(datagrid2.valueMatrix(iRowIndex, datagrid2.colRef("roll_wgt_a")));
						car_a = parseInt(datagrid2.valueMatrix(iRowIndex, datagrid2.colRef("car_a")));
						roll_cnt_a = parseInt(datagrid2.valueMatrix(iRowIndex, datagrid2.colRef("ordr_roll_a")));
						
						if(roll_cnt_a < car_a) {
							car_prd_cnt_a = 0;
							roll_other_a = roll_cnt_a;
						} else if(roll_cnt_a >= car_a) {
							car_prd_cnt_a = parseInt(roll_cnt_a / car_a);
							roll_other_a = parseInt(roll_cnt_a % car_a);
						}
						
						datagrid2.valueMatrix(iRowIndex, datagrid2.colRef("car_prd_cnt_a")) = car_prd_cnt_a;
						datagrid2.valueMatrix(iRowIndex, datagrid2.colRef("roll_other_a")) = roll_other_a;
						datagrid2.valueMatrix(iRowIndex, datagrid2.colRef("mix_roll_a")) = roll_other_a;
						datagrid2.valueMatrix(iRowIndex, datagrid2.colRef("mix_wgt_a")) = roll_other_a * roll_wgt_a;
					}
					
					
					if(colIndex == "18") {
						roll_wgt_b	= eval(datagrid2.valueMatrix(iRowIndex, datagrid2.colRef("roll_wgt_b")));
						car_b = parseInt(datagrid2.valueMatrix(iRowIndex, datagrid2.colRef("car_b")));
						roll_cnt_b = parseInt(datagrid2.valueMatrix(iRowIndex, datagrid2.colRef("ordr_roll_b")));
						
						//alert(roll_wgt_b + "\n" + car_b + "\n" + roll_cnt_b);
						if(roll_cnt_b < car_b) {
							car_prd_cnt_b = 0;
							roll_other_b = roll_cnt_b;
						} else if(roll_cnt_b >= car_b) {
							if (car_b == 0){
								car_prd_cnt_b = 0;
							} else {
								car_prd_cnt_b = parseInt(roll_cnt_b / car_b);
							}
							if (car_b == 0){
								roll_other_b = 0;
							} else {
								roll_other_b = parseInt(roll_cnt_b % car_b);
							}
						}
						
						datagrid2.valueMatrix(iRowIndex, datagrid2.colRef("car_prd_cnt_b")) = car_prd_cnt_b;
						datagrid2.valueMatrix(iRowIndex, datagrid2.colRef("roll_other_b")) = roll_other_b;
						datagrid2.valueMatrix(iRowIndex, datagrid2.colRef("mix_roll_b")) = roll_other_b;
						//alert(roll_other_b + "\n" + roll_wgt_b);
						datagrid2.valueMatrix(iRowIndex, datagrid2.colRef("mix_wgt_b")) = roll_other_b * roll_wgt_b;
					}
					
					if(colIndex == "30") {
						roll_wgt_c	= eval(datagrid2.valueMatrix(iRowIndex, datagrid2.colRef("roll_wgt_c")));
						car_c = parseInt(datagrid2.valueMatrix(iRowIndex, datagrid2.colRef("car_c")));
						roll_cnt_c = parseInt(datagrid2.valueMatrix(iRowIndex, datagrid2.colRef("ordr_roll_c")));
						
						if(roll_cnt_c < car_c) {
							car_prd_cnt_c = 0;
							roll_other_c = roll_cnt_c;
						} else if(roll_cnt_c >= car_c) {
							car_prd_cnt_c = parseInt(roll_cnt_c / car_c);
							roll_other_c = parseInt(roll_cnt_c % car_c);
						}
						
						datagrid2.valueMatrix(iRowIndex, datagrid2.colRef("car_prd_cnt_c")) = car_prd_cnt_c;
						datagrid2.valueMatrix(iRowIndex, datagrid2.colRef("roll_other_c")) = roll_other_c;
						datagrid2.valueMatrix(iRowIndex, datagrid2.colRef("mix_roll_c")) = roll_other_c;
						datagrid2.valueMatrix(iRowIndex, datagrid2.colRef("mix_wgt_c")) = roll_other_c * roll_wgt_c;
					}
					
				}
				
				function funBjOther(){
					var row_2 = datagrid2.row;
					
					var papcmpy_cd = datagrid2.valueMatrix(row_2, datagrid2.colRef("papcmpy_cd"));
					var issu_dt	= datagrid2.valueMatrix(row_2, datagrid2.colRef("issu_dt"));
					var matr_cd_a	= datagrid2.valueMatrix(row_2, datagrid2.colRef("matr_cd_a"));
					var matr_cd_b	= datagrid2.valueMatrix(row_2, datagrid2.colRef("matr_cd_b"));
					var matr_cd_c	= datagrid2.valueMatrix(row_2, datagrid2.colRef("matr_cd_c"));
					var same_row_a	= 0;
					var same_row_b	= 0;
					var same_row_c	= 0;
					
					for (var i=0; i<datagrid3.rows; i++){
						if (papcmpy_cd == datagrid3.valueMatrix(i, datagrid3.colRef("papcmpy_cd")) && issu_dt == datagrid3.valueMatrix(i, datagrid3.colRef("issu_dt")) && matr_cd_a == datagrid3.valueMatrix(i, datagrid3.colRef("matr_cd"))){
							same_row_a = i;
						}
						if (papcmpy_cd == datagrid3.valueMatrix(i, datagrid3.colRef("papcmpy_cd")) && issu_dt == datagrid3.valueMatrix(i, datagrid3.colRef("issu_dt")) && matr_cd_b == datagrid3.valueMatrix(i, datagrid3.colRef("matr_cd"))){
							same_row_b = i;
						}
						if (papcmpy_cd == datagrid3.valueMatrix(i, datagrid3.colRef("papcmpy_cd")) && issu_dt == datagrid3.valueMatrix(i, datagrid3.colRef("issu_dt")) && matr_cd_c == datagrid3.valueMatrix(i, datagrid3.colRef("matr_cd"))){
							same_row_c = i;
						}
					}
					//alert(same_row_a + "\n" + same_row_b + "\n" + same_row_c);
					if (same_row_a != 0){
						datagrid3.valueMatrix(same_row_a, datagrid3.colRef("roll_cnt")) 	= datagrid2.valueMatrix(row_2, datagrid2.colRef("mix_roll_a"));
						datagrid3.valueMatrix(same_row_a, datagrid3.colRef("wgt")) 		= datagrid2.valueMatrix(row_2, datagrid2.colRef("mix_wgt_a"));
						datagrid3.rowStatus(same_row_a) = 2;
					} else {
						datagrid3.addRow();
						datagrid3.valueMatrix((datagrid3.rows-1), datagrid3.colRef("issu_dt"))	= issu_dt;
						datagrid3.valueMatrix((datagrid3.rows-1), datagrid3.colRef("papcmpy_cd"))	= papcmpy_cd;
						datagrid3.valueMatrix((datagrid3.rows-1), datagrid3.colRef("matr_cd"))	= matr_cd_a;
						datagrid3.valueMatrix((datagrid3.rows-1), datagrid3.colRef("roll_cnt")) 	= datagrid2.valueMatrix(row_2, datagrid2.colRef("mix_roll_a"));
						datagrid3.valueMatrix((datagrid3.rows-1), datagrid3.colRef("wgt")) 		= datagrid2.valueMatrix(row_2, datagrid2.colRef("mix_wgt_a"));
					}
					
					if (same_row_b != 0){
						datagrid3.valueMatrix(same_row_b, datagrid3.colRef("roll_cnt")) 	= datagrid2.valueMatrix(row_2, datagrid2.colRef("mix_roll_b"));
						datagrid3.valueMatrix(same_row_b, datagrid3.colRef("wgt")) 		= datagrid2.valueMatrix(row_2, datagrid2.colRef("mix_wgt_b"));
						datagrid3.rowStatus(same_row_b) = 2;
					} else {
						datagrid3.addRow();
						datagrid3.valueMatrix((datagrid3.rows-1), datagrid3.colRef("issu_dt"))	= issu_dt;
						datagrid3.valueMatrix((datagrid3.rows-1), datagrid3.colRef("papcmpy_cd"))	= papcmpy_cd;
						datagrid3.valueMatrix((datagrid3.rows-1), datagrid3.colRef("matr_cd"))	= matr_cd_b;
						datagrid3.valueMatrix((datagrid3.rows-1), datagrid3.colRef("roll_cnt")) 	= datagrid2.valueMatrix(row_2, datagrid2.colRef("mix_roll_b"));
						datagrid3.valueMatrix((datagrid3.rows-1), datagrid3.colRef("wgt")) 		= datagrid2.valueMatrix(row_2, datagrid2.colRef("mix_wgt_b"));
					}

					if (same_row_c != 0){
						datagrid3.valueMatrix(same_row_c, datagrid3.colRef("roll_cnt")) = datagrid2.valueMatrix(row_2, datagrid2.colRef("mix_roll_c"));
						datagrid3.valueMatrix(same_row_c, datagrid3.colRef("wgt")) = datagrid2.valueMatrix(row_2, datagrid2.colRef("mix_roll_c"));
						datagrid3.rowStatus(same_row_c) = 2;
					} else {
						datagrid3.addRow();
						datagrid3.valueMatrix((datagrid3.rows-1), datagrid3.colRef("issu_dt"))	= issu_dt;
						datagrid3.valueMatrix((datagrid3.rows-1), datagrid3.colRef("papcmpy_cd"))	= papcmpy_cd;
						datagrid3.valueMatrix((datagrid3.rows-1), datagrid3.colRef("matr_cd"))	= matr_cd_c;
						datagrid3.valueMatrix((datagrid3.rows-1), datagrid3.colRef("roll_cnt")) 	= datagrid2.valueMatrix(row_2, datagrid2.colRef("mix_roll_c"));
						datagrid3.valueMatrix((datagrid3.rows-1), datagrid3.colRef("wgt")) 		= datagrid2.valueMatrix(row_2, datagrid2.colRef("mix_wgt_c"));
					}
				}
				
				function funBj(){
					var row_2 = datagrid2.row;
					
					var issu_dt 	= datagrid2.valueMatrix(row_2, datagrid2.colRef("issu_dt"));
					var papcmpy_cd = datagrid2.valueMatrix(row_2, datagrid2.colRef("papcmpy_cd"));
					var matr_cd_a	= datagrid2.valueMatrix(row_2, datagrid2.colRef("matr_cd_a"));
					var matr_cd_b	= datagrid2.valueMatrix(row_2, datagrid2.colRef("matr_cd_b"));
					var matr_cd_c	= datagrid2.valueMatrix(row_2, datagrid2.colRef("matr_cd_c"));
					var same_row_a	= 0;
					var same_row_b	= 0;
					var same_row_c	= 0;

					for (var i=0; i<datagrid4.rows; i++){
						//alert(datagrid4.valueMatrix(i, datagrid4.colRef("papcmpy_cd")) + "\n" + datagrid4.valueMatrix(i, datagrid4.colRef("issu_dt")) + "\n" + datagrid4.valueMatrix(i, datagrid4.colRef("matr_cd")));
						if (papcmpy_cd == datagrid4.valueMatrix(i, datagrid4.colRef("papcmpy_cd")) && issu_dt == datagrid4.valueMatrix(i, datagrid4.colRef("issu_dt")) && matr_cd_a == datagrid4.valueMatrix(i, datagrid4.colRef("matr_cd"))){
							same_row_a = i;
							break;
						}
						if (papcmpy_cd == datagrid4.valueMatrix(i, datagrid4.colRef("papcmpy_cd")) && issu_dt == datagrid4.valueMatrix(i, datagrid4.colRef("issu_dt")) && matr_cd_b == datagrid4.valueMatrix(i, datagrid4.colRef("matr_cd"))){
							same_row_b = i;
						}
						if (papcmpy_cd == datagrid4.valueMatrix(i, datagrid4.colRef("papcmpy_cd")) && issu_dt == datagrid4.valueMatrix(i, datagrid4.colRef("issu_dt")) && matr_cd_c == datagrid4.valueMatrix(i, datagrid4.colRef("matr_cd"))){
							same_row_c = i;
						}
					}
					
					if (same_row_a != 0){
						datagrid4.valueMatrix(same_row_a, 6) = datagrid2.valueMatrix(row_2, datagrid2.colRef("ordr_roll_a"));
						datagrid4.valueMatrix(same_row_a, 7) = datagrid2.valueMatrix(row_2, datagrid2.colRef("ordr_wgt_a"));
						datagrid4.valueMatrix(same_row_a, 8) = datagrid2.valueMatrix(row_2, datagrid2.colRef("occr_dt_a"));
						datagrid4.valueMatrix(same_row_a, 9) = datagrid2.valueMatrix(row_2, datagrid2.colRef("seq_a"));
						datagrid4.valueMatrix(same_row_a, 10) = datagrid2.valueMatrix(row_2, datagrid2.colRef("car_prd_cnt_a"));
					} else {
						datagrid4.addRow(true, true);
								
						datagrid4.valueMatrix((datagrid4.rows-1), 1) = datagrid2.valueMatrix(row_2, datagrid2.colRef("issu_dt"));
						datagrid4.valueMatrix((datagrid4.rows-1), 2) = datagrid2.valueMatrix(row_2, datagrid2.colRef("papcmpy_cd"));
						datagrid4.valueMatrix((datagrid4.rows-1), 3) = datagrid2.valueMatrix(row_2, datagrid2.colRef("matr_cd_a"));
						datagrid4.valueMatrix((datagrid4.rows-1), 4) = datagrid2.valueMatrix(row_2, datagrid2.colRef("somo_roll_a"));
						datagrid4.valueMatrix((datagrid4.rows-1), 5) = datagrid2.valueMatrix(row_2, datagrid2.colRef("somo_wgt_a"));
						
						datagrid4.valueMatrix((datagrid4.rows-1), 6) = datagrid2.valueMatrix(row_2, datagrid2.colRef("ordr_roll_a"));
						datagrid4.valueMatrix((datagrid4.rows-1), 7) = datagrid2.valueMatrix(row_2, datagrid2.colRef("ordr_wgt_a"));
						datagrid4.valueMatrix((datagrid4.rows-1), 8) = datagrid2.valueMatrix(row_2, datagrid2.colRef("occr_dt_a"));
						datagrid4.valueMatrix((datagrid4.rows-1), 9) = datagrid2.valueMatrix(row_2, datagrid2.colRef("seq_a"));
						datagrid4.valueMatrix((datagrid4.rows-1), 10) = datagrid2.valueMatrix(row_2, datagrid2.colRef("car_prd_cnt_a"));
					}
					
					if (same_row_b != 0){
						datagrid4.valueMatrix(same_row_b, 6) = datagrid2.valueMatrix(row_2, datagrid2.colRef("ordr_roll_b"));
						datagrid4.valueMatrix(same_row_b, 7) = datagrid2.valueMatrix(row_2, datagrid2.colRef("ordr_wgt_b"));
						datagrid4.valueMatrix(same_row_b, 8) = datagrid2.valueMatrix(row_2, datagrid2.colRef("occr_dt_b"));
						datagrid4.valueMatrix(same_row_b, 9) = datagrid2.valueMatrix(row_2, datagrid2.colRef("seq_b"));
						datagrid4.valueMatrix(same_row_b, 10) = datagrid2.valueMatrix(row_2, datagrid2.colRef("car_prd_cnt_b"));
					} else {
						datagrid4.addRow(true, true);
								
						datagrid4.valueMatrix((datagrid4.rows-1), 1) = datagrid2.valueMatrix(row_2, datagrid2.colRef("issu_dt"));
						datagrid4.valueMatrix((datagrid4.rows-1), 2) = datagrid2.valueMatrix(row_2, datagrid2.colRef("papcmpy_cd"));
						datagrid4.valueMatrix((datagrid4.rows-1), 3) = datagrid2.valueMatrix(row_2, datagrid2.colRef("matr_cd_b"));
						datagrid4.valueMatrix((datagrid4.rows-1), 4) = datagrid2.valueMatrix(row_2, datagrid2.colRef("somo_roll_b"));
						datagrid4.valueMatrix((datagrid4.rows-1), 5) = datagrid2.valueMatrix(row_2, datagrid2.colRef("somo_wgt_b"));
						
						datagrid4.valueMatrix((datagrid4.rows-1), 6) = datagrid2.valueMatrix(row_2, datagrid2.colRef("ordr_roll_b"));
						datagrid4.valueMatrix((datagrid4.rows-1), 7) = datagrid2.valueMatrix(row_2, datagrid2.colRef("ordr_wgt_b"));
						datagrid4.valueMatrix((datagrid4.rows-1), 8) = datagrid2.valueMatrix(row_2, datagrid2.colRef("occr_dt_b"));
						datagrid4.valueMatrix((datagrid4.rows-1), 9) = datagrid2.valueMatrix(row_2, datagrid2.colRef("seq_b"));
						datagrid4.valueMatrix((datagrid4.rows-1), 10) = datagrid2.valueMatrix(row_2, datagrid2.colRef("car_prd_cnt_b"));
					}
					
					if (same_row_c != 0){
						datagrid4.valueMatrix(same_row_c, 6) = datagrid2.valueMatrix(row_2, datagrid2.colRef("ordr_roll_c"));
						datagrid4.valueMatrix(same_row_c, 7) = datagrid2.valueMatrix(row_2, datagrid2.colRef("ordr_wgt_c"));
						datagrid4.valueMatrix(same_row_c, 8) = datagrid2.valueMatrix(row_2, datagrid2.colRef("occr_dt_c"));
						datagrid4.valueMatrix(same_row_c, 9) = datagrid2.valueMatrix(row_2, datagrid2.colRef("seq_c"));
						datagrid4.valueMatrix(same_row_c, 10) = datagrid2.valueMatrix(row_2, datagrid2.colRef("car_prd_cnt_c"));
					} else {
						datagrid4.addRow(true, true);
								
						datagrid4.valueMatrix((datagrid4.rows-1), 1) = datagrid2.valueMatrix(row_2, datagrid2.colRef("issu_dt"));
						datagrid4.valueMatrix((datagrid4.rows-1), 2) = datagrid2.valueMatrix(row_2, datagrid2.colRef("papcmpy_cd"));
						datagrid4.valueMatrix((datagrid4.rows-1), 3) = datagrid2.valueMatrix(row_2, datagrid2.colRef("matr_cd_c"));
						datagrid4.valueMatrix((datagrid4.rows-1), 4) = datagrid2.valueMatrix(row_2, datagrid2.colRef("somo_roll_c"));
						datagrid4.valueMatrix((datagrid4.rows-1), 5) = datagrid2.valueMatrix(row_2, datagrid2.colRef("somo_wgt_c"));
						
						datagrid4.valueMatrix((datagrid4.rows-1), 6) = datagrid2.valueMatrix(row_2, datagrid2.colRef("ordr_roll_c"));
						datagrid4.valueMatrix((datagrid4.rows-1), 7) = datagrid2.valueMatrix(row_2, datagrid2.colRef("ordr_wgt_c"));
						datagrid4.valueMatrix((datagrid4.rows-1), 8) = datagrid2.valueMatrix(row_2, datagrid2.colRef("occr_dt_c"));
						datagrid4.valueMatrix((datagrid4.rows-1), 9) = datagrid2.valueMatrix(row_2, datagrid2.colRef("seq_c"));
						datagrid4.valueMatrix((datagrid4.rows-1), 10) = datagrid2.valueMatrix(row_2, datagrid2.colRef("car_prd_cnt_c"));
					}
				}
				
				function funSave() {
					var issu_dt_fr = model.getValue("/root/reqData/searchData/issu_dt_fr");
					var issu_dt_to = model.getValue("/root/reqData/searchData/issu_dt_to");
					var fac_clsf 	= model.getValue("/root/reqData/searchData/fac_clsf");
					
					var iDataGrid2Rows = 0;
					var seq_a     = "";
					var seq_b     = "";
					var seq_c     = "";
					var occr_dt_a = "";
					var occr_dt_b = "";
					var occr_dt_c = "";
					var matr_cd_a = "";
					var matr_cd_b = "";
					var matr_cd_c = "";
					var papcmpy_nm = "";
					var fac_clsf_nm = "";
					
					var sResult = "";
					
					//if(model1.getValue("/root/reqData/saveGubun/gubun") != "Y") {
					//	alert("제지사별 발주량 조회 후 저장 가능합니다.");
					//	return;
					//}
					
					fac_clsf_nm = datagrid1.valueMatrix(3,datagrid1.colRef("fac_clsf_nm"));
					
					iDataGrid2Rows = datagrid2.rows;
					
					if (window.alert("저장하시겠습니까?", "확인", 1) != 1) {
						return;
					}
					
					model1.setValue("/root/reqData/reqForm/multiUpData1"	,datagrid4.getUpdateData());
					model1.setValue("/root/reqData/reqForm/multiUpData2"	,datagrid3.getUpdateData());
					model1.setValue("/root/reqData/reqForm/fac_clsf"		,model.getValue("/root/reqData/searchData/fac_clsf"));
					
					model1.send("mt_papord_5004_a");
					
					if(submit_completed()) {
						alert("저장 완료되었습니다.");
						model.reset();
						
						model.setValue("/root/reqData/searchData/issu_dt_fr", issu_dt_fr);
						model.setValue("/root/reqData/searchData/issu_dt_to", issu_dt_to);
						model.setValue("/root/reqData/searchData/fac_clsf", fac_clsf);
						
						button1.dispatch("onclick");
					}
					
				}
				
				//저장여부 체크
				function funSaveCheck(seq_a,occr_dt_a,matr_cd_a,seq_b,occr_dt_b,matr_cd_b,seq_c,occr_dt_c,matr_cd_c) {
					var sResult = "";
					if((seq_a == "" || occr_dt_a == "") && matr_cd_a != "") {
						sResult = "A";
					} else if((seq_b == "" || occr_dt_b == "") && matr_cd_b != "") {
						sResult = "B";
					} else if((seq_c == "" || occr_dt_c == "") && matr_cd_c != "") {
						sResult = "C";
					} else {
						sResult = "";
					}
					
					return sResult;
				}
				
				//레코드 추가
				function funAdd(row,seq_a,occr_dt_a,matr_cd_a,seq_b,occr_dt_b,matr_cd_b,seq_c,occr_dt_c,matr_cd_c) {
					var rowIndex = 0;
					var ordr_dt         = "";    //발주일자
					var fac_clsf        = "";    //공장구분
					var matr_cd         = "";    //자재코드
					var papcmpy_cd      = "";    //제지사코드
					var roll_wgt        = "";    //롤중량
					var expt_roll_cnt   = "";    //예상롤수
					var expt_wgt        = "";    //예상중량
					var ordr_roll_cnt   = "";    //발주롤수
					var ordr_wgt        = "";    //발주중량
					var car_occr_dt     = "";    //차량적재발생일자
					var car_seq         = "";    //차량적재일련번호
					var car_prd_cnt     = "";    //차량대수
					
					if(seq_a != "" && occr_dt_a != "" && matr_cd_a != "") {
						ordr_dt        = model1.getValue("/root/reqData/saveGubun/ordr_dt");
						fac_clsf       = datagrid1.valueMatrix(3,datagrid1.colRef("fac_clsf"));
						matr_cd        = datagrid2.valueMatrix(row,datagrid2.colRef("matr_cd_a"));
						papcmpy_cd     = datagrid2.valueMatrix(row,datagrid2.colRef("papcmpy_cd"));
						roll_wgt       = datagrid2.valueMatrix(row,datagrid2.colRef("roll_wgt_a"));
						expt_roll_cnt  = datagrid2.valueMatrix(row,datagrid2.colRef("somo_cnt_a"));
						expt_wgt       = datagrid2.valueMatrix(row,datagrid2.colRef("somo_wgt_a"));
						ordr_roll_cnt  = datagrid2.valueMatrix(row,datagrid2.colRef("ordr_roll_cnt_a"));
						ordr_wgt       = datagrid2.valueMatrix(row,datagrid2.colRef("ordr_wgt_a"));
						car_occr_dt    = datagrid2.valueMatrix(row,datagrid2.colRef("occr_dt_a"));
						car_seq        = datagrid2.valueMatrix(row,datagrid2.colRef("seq_a"));
						car_prd_cnt    = datagrid2.valueMatrix(row,datagrid2.colRef("car_prd_cnt_a"));
						
						
						datagrid3.addRow();
						rowIndex = datagrid3.rows - 1;
						
						
						datagrid3.valueMatrix(rowIndex,datagrid3.colRef("ordr_dt"))       = ordr_dt;
						datagrid3.valueMatrix(rowIndex,datagrid3.colRef("fac_clsf"))      = fac_clsf;
						datagrid3.valueMatrix(rowIndex,datagrid3.colRef("matr_cd"))       = matr_cd;
						datagrid3.valueMatrix(rowIndex,datagrid3.colRef("papcmpy_cd"))    = papcmpy_cd;
						datagrid3.valueMatrix(rowIndex,datagrid3.colRef("roll_wgt"))      = roll_wgt;
						datagrid3.valueMatrix(rowIndex,datagrid3.colRef("expt_roll_cnt")) = expt_roll_cnt;
						datagrid3.valueMatrix(rowIndex,datagrid3.colRef("expt_wgt"))      = expt_wgt;
						datagrid3.valueMatrix(rowIndex,datagrid3.colRef("ordr_roll_cnt")) = ordr_roll_cnt;
						datagrid3.valueMatrix(rowIndex,datagrid3.colRef("ordr_wgt"))      = ordr_wgt;
						datagrid3.valueMatrix(rowIndex,datagrid3.colRef("car_occr_dt"))   = car_occr_dt;
						datagrid3.valueMatrix(rowIndex,datagrid3.colRef("car_seq"))       = car_seq;
						datagrid3.valueMatrix(rowIndex,datagrid3.colRef("car_prd_cnt"))   = car_prd_cnt;
						
					}
					
					if(seq_b != "" && occr_dt_b != "" && matr_cd_b != "") {
						ordr_dt        = model1.getValue("/root/reqData/saveGubun/ordr_dt");
						fac_clsf       = datagrid1.valueMatrix(3,datagrid1.colRef("fac_clsf"));
						matr_cd        = datagrid2.valueMatrix(row,datagrid2.colRef("matr_cd_b"));
						papcmpy_cd     = datagrid2.valueMatrix(row,datagrid2.colRef("papcmpy_cd"));
						roll_wgt       = datagrid2.valueMatrix(row,datagrid2.colRef("roll_wgt_b"));
						expt_roll_cnt  = datagrid2.valueMatrix(row,datagrid2.colRef("somo_cnt_b"));
						expt_wgt       = datagrid2.valueMatrix(row,datagrid2.colRef("somo_wgt_b"));
						ordr_roll_cnt  = datagrid2.valueMatrix(row,datagrid2.colRef("ordr_roll_cnt_b"));
						ordr_wgt       = datagrid2.valueMatrix(row,datagrid2.colRef("ordr_wgt_b"));
						car_occr_dt    = datagrid2.valueMatrix(row,datagrid2.colRef("occr_dt_b"));
						car_seq        = datagrid2.valueMatrix(row,datagrid2.colRef("seq_b"));
						car_prd_cnt    = datagrid2.valueMatrix(row,datagrid2.colRef("car_prd_cnt_b"));
						
						
						datagrid3.addRow();
						rowIndex = datagrid3.rows - 1;
						
						
						datagrid3.valueMatrix(rowIndex,datagrid3.colRef("ordr_dt"))       = ordr_dt;
						datagrid3.valueMatrix(rowIndex,datagrid3.colRef("fac_clsf"))      = fac_clsf;
						datagrid3.valueMatrix(rowIndex,datagrid3.colRef("matr_cd"))       = matr_cd;
						datagrid3.valueMatrix(rowIndex,datagrid3.colRef("papcmpy_cd"))    = papcmpy_cd;
						datagrid3.valueMatrix(rowIndex,datagrid3.colRef("roll_wgt"))      = roll_wgt;
						datagrid3.valueMatrix(rowIndex,datagrid3.colRef("expt_roll_cnt")) = expt_roll_cnt;
						datagrid3.valueMatrix(rowIndex,datagrid3.colRef("expt_wgt"))      = expt_wgt;
						datagrid3.valueMatrix(rowIndex,datagrid3.colRef("ordr_roll_cnt")) = ordr_roll_cnt;
						datagrid3.valueMatrix(rowIndex,datagrid3.colRef("ordr_wgt"))      = ordr_wgt;
						datagrid3.valueMatrix(rowIndex,datagrid3.colRef("car_occr_dt"))   = car_occr_dt;
						datagrid3.valueMatrix(rowIndex,datagrid3.colRef("car_seq"))       = car_seq;
						datagrid3.valueMatrix(rowIndex,datagrid3.colRef("car_prd_cnt"))   = car_prd_cnt;
					}
					
					if(seq_c != "" && occr_dt_c != "" && matr_cd_c != "") {
						ordr_dt        = model1.getValue("/root/reqData/saveGubun/ordr_dt");
						fac_clsf       = datagrid1.valueMatrix(3,datagrid1.colRef("fac_clsf"));
						matr_cd        = datagrid2.valueMatrix(row,datagrid2.colRef("matr_cd_c"));
						papcmpy_cd     = datagrid2.valueMatrix(row,datagrid2.colRef("papcmpy_cd"));
						roll_wgt       = datagrid2.valueMatrix(row,datagrid2.colRef("roll_wgt_c"));
						expt_roll_cnt  = datagrid2.valueMatrix(row,datagrid2.colRef("somo_cnt_c"));
						expt_wgt       = datagrid2.valueMatrix(row,datagrid2.colRef("somo_wgt_c"));
						ordr_roll_cnt  = datagrid2.valueMatrix(row,datagrid2.colRef("ordr_roll_cnt_c"));
						ordr_wgt       = datagrid2.valueMatrix(row,datagrid2.colRef("ordr_wgt_c"));
						car_occr_dt    = datagrid2.valueMatrix(row,datagrid2.colRef("occr_dt_c"));
						car_seq        = datagrid2.valueMatrix(row,datagrid2.colRef("seq_c"));
						car_prd_cnt    = datagrid2.valueMatrix(row,datagrid2.colRef("car_prd_cnt_c"));
						
						
						datagrid3.addRow();
						rowIndex = datagrid3.rows - 1;
						
						
						datagrid3.valueMatrix(rowIndex,datagrid3.colRef("ordr_dt"))       = ordr_dt;
						datagrid3.valueMatrix(rowIndex,datagrid3.colRef("fac_clsf"))      = fac_clsf;
						datagrid3.valueMatrix(rowIndex,datagrid3.colRef("matr_cd"))       = matr_cd;
						datagrid3.valueMatrix(rowIndex,datagrid3.colRef("papcmpy_cd"))    = papcmpy_cd;
						datagrid3.valueMatrix(rowIndex,datagrid3.colRef("roll_wgt"))      = roll_wgt;
						datagrid3.valueMatrix(rowIndex,datagrid3.colRef("expt_roll_cnt")) = expt_roll_cnt;
						datagrid3.valueMatrix(rowIndex,datagrid3.colRef("expt_wgt"))      = expt_wgt;
						datagrid3.valueMatrix(rowIndex,datagrid3.colRef("ordr_roll_cnt")) = ordr_roll_cnt;
						datagrid3.valueMatrix(rowIndex,datagrid3.colRef("ordr_wgt"))      = ordr_wgt;
						datagrid3.valueMatrix(rowIndex,datagrid3.colRef("car_occr_dt"))   = car_occr_dt;
						datagrid3.valueMatrix(rowIndex,datagrid3.colRef("car_seq"))       = car_seq;
						datagrid3.valueMatrix(rowIndex,datagrid3.colRef("car_prd_cnt"))   = car_prd_cnt;
					}
					
					datagrid3.refresh();
				}
				
				function funRemove() {
					for(var i=datagrid3.rows; i > 1; i--) {
						datagrid3.removeRow();
					}
				}
				
			]]>
		</script>
		<script type="javascript" src="/js/CIISComm.js"/>
		<script type="javascript" src="/js/TFCommon.js"/>
	</xhtml:head>
	<xhtml:body pagewidth="946" pageheight="728">
		<import id="iv_Title" src="../../../common/xrw/iv_TitleBar.xrw" style="left:10px; top:5px; width:926px; height:29px; "/>
		<group id="group1" style="left:10px; top:75px; width:926px; height:24px; ">
			<caption id="caption2" class="list_cap02" style="left:0px; top:0px; width:926px; height:24px; text-align:center; "/>
			<caption id="caption1" class="list_cap01" style="left:0px; top:0px; width:100px; height:24px; text-align:center; ">발행일자</caption>
			<caption id="caption3" class="list_cap01" style="left:450px; top:0px; width:100px; height:24px; text-align:center; ">공장</caption>
			<input id="input1" ref="/root/reqData/searchData/issu_dt_fr" class="req" navindex="1" inputtype="date" format="yyyy-mm-dd" caption="시작발행일자" style="left:105px; top:3px; width:100px; height:18px; "/>
			<input id="input2" ref="/root/reqData/searchData/issu_dt_to" class="req" navindex="2" inputtype="date" format="yyyy-mm-dd" caption="종료발행일자" style="left:250px; top:3px; width:100px; height:18px; "/>
			<caption id="caption4" style="left:220px; top:6px; width:15px; height:15px; ">-</caption>
			<select1 id="combo1" ref="/root/reqData/searchData/fac_clsf" class="req" navindex="3" appearance="minimal" caption="공장" style="left:555px; top:3px; width:116px; height:18px; ">
				<choices>
					<itemset nodeset="/root/initData/comboSet/fac_clsf/item">
						<label ref="label"/>
						<value ref="value"/>
					</itemset>
				</choices>
			</select1>
		</group>
		<group id="group2" class="gro_sel" style="left:10px; top:42px; width:926px; height:27px; ">
			<button id="button1" class="btn02" style="left:631px; top:0px; width:52px; height:21px; ">
				<caption>조회</caption>
				<script type="javascript" ev:event="onclick">
					<![CDATA[
					funBjSearch();
					button9.disabled = false;
					button2.disabled = false;
					datagrid1.refresh();
					]]>
				</script>
			</button>
			<button id="btnA1" class="btn03" style="left:689px; top:0px; width:66px; height:21px; ">
				<caption>소모량 조회</caption>
				<script type="javascript" ev:event="onclick">
					<![CDATA[
						funSearch();
						datagrid1.refresh();
					]]>
				</script>
			</button>
			<button id="button3" class="btn02" style="left:817px; top:0px; width:52px; height:21px; ">
				<caption>초기화</caption>
				<script type="javascript" ev:event="onclick">
					<![CDATA[
						model1.reset();
					]]>
				</script>
			</button>
			<button id="button4" class="btn02" style="left:874px; top:0px; width:52px; height:21px; ">
				<caption>종료</caption>
				<script type="javascript" ev:event="onclick">
					<![CDATA[
						viewer("mainFrame").window.javaScript.closeMDIWindow(model.getValue("/root/initData/pageInfo/pageID"));
						
					]]>
				</script>
			</button>
			<!--
			<button id="button6" class="btn02" style="left:770px; top:0px; width:52px; height:21px; ">
				<caption>저장</caption>
				<script type="javascript" ev:event="onclick">
					<![CDATA[
						funSave();
					]]>
				</script>
			</button>
			
			<button id="button1" class="btn02" style="left:705px; top:0px; width:52px; height:21px; ">
				<caption>발주량 산정</caption>
				<script type="javascript" ev:event="onclick">
					<![CDATA[
						funMakeOrder();
						//datagrid1.refresh();
					]]>
				</script>
			</button>
			-->
			<button id="button8" class="btn02" style="left:760px; top:0px; width:52px; height:21px; ">
				<caption>저장</caption>
				<script type="javascript" ev:event="onclick">
					<![CDATA[
						funSave();
					]]>
				</script>
			</button>
		</group>
		<datagrid id="datagrid1" nodeset="/root/resData/gridData1/record" scroll="auto" caption="발행일자^공장^현재고^현재고^현재고^현재고^현재고^현재고^소모량^소모량^소모량^소모량^소모량^소모량^발주량^발주량^발주량^발주량^발주량^발주량^비축분전입량^비축분전입량^비축분전입량^비축분전입량^비축분전입량^비축분전입량^발주포함재고량^발주포함재고량^발주포함재고량^최대적재중량^발주포함 수용비율^발주포함 수용비율^발주포함 수용비율^발주포함 수용비율^caption14^caption7^caption8^caption9^caption10^caption11^caption12^caption13|발행일자^공장^A^A^B^B^C^C^A^A^B^B^C^C^A^A^B^B^C^C^A^A^B^B^C^C^A^B^C^최대적재중량^A^B^C^합계^caption14^공장코드^롤당중량A^롤당중량B^롤당중량C^자재코드A^자재코드B^자재코드C|발행일자^공장^롤^중량^롤^중량^롤^중량^롤^중량^롤^중량^롤^중량^롤^중량^롤^중량^롤^중량^A^중량^B^중량^C^중량^A^B^C^최대적재중량^A^B^C^합계^caption14^caption7^caption8^caption9^caption10^caption11^caption12^caption13" colsep="^" colwidth="70, 60, 35, 50, 35, 50, 35, 50, 35, 50, 35, 50, 35, 50, 35, 50, 35, 50, 35, 50, 35, 50, 35, 50, 35, 50, 46, 46, 46, 80, 55, 55, 55, 55, 45, 50, 50, 50, 50, 50, 50, 50" fixedcols="3" mergecellsfixedrows="bycolrec" rowheader="seq" rowsep="|" selectionmode="free" style="left:10px; top:103px; width:926px; height:297px; ">
			<col ref="issu_dt" format="yyyy.mm.dd"/>
			<col ref="fac_clsf_nm"/>
			<col ref="jg_roll_cnt_a" format="#,###"/>
			<col ref="jg_wgt_a" format="#,###"/>
			<col ref="jg_roll_cnt_b" format="#,###"/>
			<col ref="jg_wgt_b" format="#,###"/>
			<col ref="jg_roll_cnt_c" format="#,###"/>
			<col ref="jg_wgt_c" format="#,###"/>
			<col ref="somo_cnt_a" format="#,###"/>
			<col ref="somo_wgt_a" format="#,###"/>
			<col ref="somo_cnt_b" format="#,###"/>
			<col ref="somo_wgt_b" format="#,###"/>
			<col ref="somo_cnt_c" format="#,###"/>
			<col ref="somo_wgt_c" format="#,###"/>
			<col ref="ordr_roll_cnt_a" format="#,###"/>
			<col ref="ordr_wgt_a" format="#,###"/>
			<col ref="ordr_roll_cnt_b" format="#,###"/>
			<col ref="ordr_wgt_b" format="#,###"/>
			<col ref="ordr_roll_cnt_c" format="#,###"/>
			<col ref="ordr_wgt_c" format="#,###"/>
			<col ref="bi_roll_cnt_a" format="#,###"/>
			<col ref="bi_wgt_a" visibility="hidden" format="#,###"/>
			<col ref="bi_roll_cnt_b" format="#,###"/>
			<col ref="bi_wgt_b" visibility="hidden" format="#,###"/>
			<col ref="bi_roll_cnt_c" format="#,###"/>
			<col ref="bi_wgt_c" visibility="hidden" format="#,###"/>
			<col ref="tot_wgt_a" format="#,###"/>
			<col ref="tot_wgt_b" format="#,###"/>
			<col ref="tot_wgt_c" format="#,###"/>
			<col ref="max_wgt" format="#,###"/>
			<col ref="balju_ratio_a"/>
			<col ref="balju_ratio_b"/>
			<col ref="balju_ratio_c"/>
			<col ref="balju_ratio_tot"/>
			<col ref="chg_yn" visibility="hidden"/>
			<col ref="fac_clsf" visibility="hidden"/>
			<col ref="roll_wgt_a" visibility="hidden"/>
			<col ref="roll_wgt_b" visibility="hidden"/>
			<col ref="roll_wgt_c" visibility="hidden"/>
			<col ref="matr_a" visibility="hidden"/>
			<col ref="matr_b" visibility="hidden"/>
			<col ref="matr_c" visibility="hidden"/>
			<script type="javascript" ev:event="xforms-value-changed">
				<![CDATA[
					var row = datagrid1.row;
					if(datagrid1.col == 9 || datagrid1.col == 11 || datagrid1.col == 13 ) {
						datagrid1.valueMatrix(row, datagrid1.colRef("somo_wgt_a")) = eval(datagrid1.valueMatrix(row, datagrid1.colRef("roll_wgt_a"))) * eval(datagrid1.valueMatrix(row, datagrid1.colRef("somo_cnt_a")));
					   	datagrid1.valueMatrix(row, datagrid1.colRef("somo_wgt_b")) = eval(datagrid1.valueMatrix(row, datagrid1.colRef("roll_wgt_b"))) * eval(datagrid1.valueMatrix(row, datagrid1.colRef("somo_cnt_b")));
					   	datagrid1.valueMatrix(row, datagrid1.colRef("somo_wgt_c")) = eval(datagrid1.valueMatrix(row, datagrid1.colRef("roll_wgt_c"))) * eval(datagrid1.valueMatrix(row, datagrid1.colRef("somo_cnt_c")));
					   	funJGResult();	//Data 변경시 현재고 필드 계산
					} else if(datagrid1.col == 15 || datagrid1.col == 17 || datagrid1.col == 19 ) {
						datagrid1.valueMatrix(row, datagrid1.colRef("ordr_wgt_a")) = eval(datagrid1.valueMatrix(row, datagrid1.colRef("roll_wgt_a"))) * eval(datagrid1.valueMatrix(row, datagrid1.colRef("ordr_roll_cnt_a")));
					   	datagrid1.valueMatrix(row, datagrid1.colRef("ordr_wgt_b")) = eval(datagrid1.valueMatrix(row, datagrid1.colRef("roll_wgt_b"))) * eval(datagrid1.valueMatrix(row, datagrid1.colRef("ordr_roll_cnt_b")));
					   	datagrid1.valueMatrix(row, datagrid1.colRef("ordr_wgt_c")) = eval(datagrid1.valueMatrix(row, datagrid1.colRef("roll_wgt_c"))) * eval(datagrid1.valueMatrix(row, datagrid1.colRef("ordr_roll_cnt_c")));
					   	funJGResult();	//Data 변경시 현재고 필드 계산
					}
				]]>
			</script>
			<script type="javascript" ev:event="onclick">
				<![CDATA[
					/*
					if(datagrid1.col == 15 || datagrid1.col == 16 || datagrid1.col == 17 ||
					   datagrid1.col == 18 || datagrid1.col == 19 || datagrid1.col == 20 ) {
					   	//funJGResult();
					   	if (model.getValue("/root/reqData/searchData/gubun") == "I"){
						   	//funPapcmpySearch();	//제지사별 발주량 조회
						   	
						   	model1.setValue("/root/reqData/saveGubun/ordr_dt", datagrid1.valueMatrix(datagrid1.row, datagrid1.colRef("issu_dt")));
						   	//발주량 조회 후 저장구분 Y로 셋팅 => Y일 경우만 저장 가능
						   	model1.setValue("/root/reqData/saveGubun/gubun","Y");
						   	
						   	funDisabled();		//제지사별 용지구분(A,B,C)이 없는 곳은 입력 못하게 Disabled
							
							funSum();			//제지사별발주량 합계
							
							var issu_dt = datagrid1.valueMatrix(datagrid1.row, datagrid1.colRef("issu_dt"));
							for (var ii=3; ii<datagrid2.rows; ii++){
								datagrid2.valueMatrix(ii, 39) = datagrid1.valueMatrix(datagrid1.row, datagrid1.colRef("issu_dt"));
								datagrid2.valueMatrix(ii, 4) = datagrid1.valueMatrix(datagrid1.row, datagrid1.colRef("somo_cnt_a"));
								datagrid2.valueMatrix(ii, 5) = datagrid1.valueMatrix(datagrid1.row, datagrid1.colRef("somo_wgt_a"));
								datagrid2.valueMatrix(ii, 16) = datagrid1.valueMatrix(datagrid1.row, datagrid1.colRef("somo_cnt_b"));
								datagrid2.valueMatrix(ii, 17) = datagrid1.valueMatrix(datagrid1.row, datagrid1.colRef("somo_wgt_b"));
								datagrid2.valueMatrix(ii, 28) = datagrid1.valueMatrix(datagrid1.row, datagrid1.colRef("somo_cnt_c"));
								datagrid2.valueMatrix(ii, 29) = datagrid1.valueMatrix(datagrid1.row, datagrid1.colRef("somo_wgt_c"));
							}
							
							for (var i=1; i<datagrid4.rows; i++){
								if (issu_dt == datagrid4.valueMatrix(i, datagrid4.colRef("issu_dt"))){
									var papcmpy_cd = datagrid4.valueMatrix(i, datagrid4.colRef("papcmpy_cd"));
									for (var ii=0; ii<datagrid2.rows; ii++){
										
										if (papcmpy_cd == datagrid2.valueMatrix(ii, datagrid2.colRef("papcmpy_cd"))){
											datagrid2.valueMatrix(ii, 4) = datagrid1.valueMatrix(datagrid1.row, 9);
											datagrid2.valueMatrix(ii, 5) = datagrid1.valueMatrix(datagrid1.row, 10);
											datagrid2.valueMatrix(ii, 6) = datagrid1.valueMatrix(datagrid1.row, 15);
											datagrid2.valueMatrix(ii, 7) = datagrid1.valueMatrix(datagrid1.row, 16);
											
											datagrid2.valueMatrix(ii, 16) = datagrid1.valueMatrix(datagrid1.row, 11);
											datagrid2.valueMatrix(ii, 17) = datagrid1.valueMatrix(datagrid1.row, 12);
											datagrid2.valueMatrix(ii, 18) = datagrid1.valueMatrix(datagrid1.row, 17);
											datagrid2.valueMatrix(ii, 19) = datagrid1.valueMatrix(datagrid1.row, 18);
											
											datagrid2.valueMatrix(ii, 28) = datagrid1.valueMatrix(datagrid1.row, 13);
											datagrid2.valueMatrix(ii, 29) = datagrid1.valueMatrix(datagrid1.row, 14);
											datagrid2.valueMatrix(ii, 30) = datagrid1.valueMatrix(datagrid1.row, 19);
											datagrid2.valueMatrix(ii, 31) = datagrid1.valueMatrix(datagrid1.row, 20);
										}
									}
								}
							}
							
							for (var i=1; i<datagrid3.rows; i++){
								if (issu_dt == datagrid3.valueMatrix(i, datagrid3.colRef("issu_dt"))){
									var papcmpy_cd = datagrid3.valueMatrix(i, datagrid3.colRef("papcmpy_cd"));
									var matr_cd = datagrid3.valueMatrix(i, datagrid3.colRef("matr_cd"));
									var roll_cnt = datagrid3.valueMatrix(i, datagrid3.colRef("roll_cnt"));
									var wgt = datagrid3.valueMatrix(i, datagrid3.colRef("wgt"));
									
									for (var ii=0; ii<datagrid2.rows; ii++){
										
										if (papcmpy_cd == datagrid2.valueMatrix(ii, datagrid2.colRef("papcmpy_cd"))){
											//alert("위=" + papcmpy_cd + "\n아래=" + datagrid2.valueMatrix(ii, datagrid2.colRef("papcmpy_cd")));
											if (matr_cd == datagrid2.valueMatrix(ii, datagrid2.colRef("matr_cd_a"))){
												datagrid2.valueMatrix(ii, datagrid2.colRef("mix_roll_a")) = roll_cnt;
												datagrid2.valueMatrix(ii, datagrid2.colRef("mix_wgt_a")) = wgt;
											} else if (matr_cd == datagrid2.valueMatrix(ii, datagrid2.colRef("matr_cd_b"))){
												datagrid2.valueMatrix(ii, datagrid2.colRef("mix_roll_b")) = roll_cnt;
												datagrid2.valueMatrix(ii, datagrid2.colRef("mix_wgt_b")) = wgt;
											} else if (matr_cd == datagrid2.valueMatrix(ii, datagrid2.colRef("matr_cd_c"))){
												datagrid2.valueMatrix(ii, datagrid2.colRef("mix_roll_c")) = roll_cnt;
												datagrid2.valueMatrix(ii, datagrid2.colRef("mix_wgt_c")) = wgt;
											}
										}
									}
								}
							}
							
					    	} else {
					    		
					    		//funloadBj();		//	발주정보 조회
					    		funPapcmpySearch();	//제지사별 발주량 조회
						   	
						   	model1.setValue("/root/reqData/saveGubun/ordr_dt", datagrid1.valueMatrix(datagrid1.row, datagrid1.colRef("issu_dt")));
						   	//발주량 조회 후 저장구분 Y로 셋팅 => Y일 경우만 저장 가능
						   	model1.setValue("/root/reqData/saveGubun/gubun","Y");
						   	
						   	funDisabled();		//제지사별 용지구분(A,B,C)이 없는 곳은 입력 못하게 Disabled
							
							funSum();			//제지사별발주량 합계
							
							var issu_dt = datagrid1.valueMatrix(datagrid1.row, datagrid1.colRef("issu_dt"));
							for (var ii=3; ii<datagrid2.rows; ii++){
								datagrid2.valueMatrix(ii, 39) = datagrid1.valueMatrix(datagrid1.row, datagrid1.colRef("issu_dt"));
								datagrid2.valueMatrix(ii, 4) = datagrid1.valueMatrix(datagrid1.row, datagrid1.colRef("somo_cnt_a"));
								datagrid2.valueMatrix(ii, 5) = datagrid1.valueMatrix(datagrid1.row, datagrid1.colRef("somo_wgt_a"));
								datagrid2.valueMatrix(ii, 16) = datagrid1.valueMatrix(datagrid1.row, datagrid1.colRef("somo_cnt_b"));
								datagrid2.valueMatrix(ii, 17) = datagrid1.valueMatrix(datagrid1.row, datagrid1.colRef("somo_wgt_b"));
								datagrid2.valueMatrix(ii, 28) = datagrid1.valueMatrix(datagrid1.row, datagrid1.colRef("somo_cnt_c"));
								datagrid2.valueMatrix(ii, 29) = datagrid1.valueMatrix(datagrid1.row, datagrid1.colRef("somo_wgt_c"));
							}
							
							for (var i=1; i<datagrid4.rows; i++){
								if (issu_dt == datagrid4.valueMatrix(i, datagrid4.colRef("issu_dt"))){
									var papcmpy_cd = datagrid4.valueMatrix(i, datagrid4.colRef("papcmpy_cd"));
									for (var ii=0; ii<datagrid2.rows; ii++){
										
										if (papcmpy_cd == datagrid2.valueMatrix(ii, datagrid2.colRef("papcmpy_cd"))){
											datagrid2.valueMatrix(ii, 4) = datagrid1.valueMatrix(datagrid1.row, 9);
											datagrid2.valueMatrix(ii, 5) = datagrid1.valueMatrix(datagrid1.row, 10);
											datagrid2.valueMatrix(ii, 6) = datagrid1.valueMatrix(datagrid1.row, 15);
											datagrid2.valueMatrix(ii, 7) = datagrid1.valueMatrix(datagrid1.row, 16);
											
											datagrid2.valueMatrix(ii, 16) = datagrid1.valueMatrix(datagrid1.row, 11);
											datagrid2.valueMatrix(ii, 17) = datagrid1.valueMatrix(datagrid1.row, 12);
											datagrid2.valueMatrix(ii, 18) = datagrid1.valueMatrix(datagrid1.row, 17);
											datagrid2.valueMatrix(ii, 19) = datagrid1.valueMatrix(datagrid1.row, 18);
											
											datagrid2.valueMatrix(ii, 28) = datagrid1.valueMatrix(datagrid1.row, 13);
											datagrid2.valueMatrix(ii, 29) = datagrid1.valueMatrix(datagrid1.row, 14);
											datagrid2.valueMatrix(ii, 30) = datagrid1.valueMatrix(datagrid1.row, 19);
											datagrid2.valueMatrix(ii, 31) = datagrid1.valueMatrix(datagrid1.row, 20);
										}
									}
								}
							}
					    		
					    	}
					}
					*/
				]]>
			</script>
			<script type="javascript" ev:event="ondblclick">
				<![CDATA[
				var nodeList = instance1.selectNodes("/root/resData/gridData1/record");
				var rowIdx = datagrid1.row -3;
				
				if(datagrid1.col >= 9 && datagrid1.col <= 14) {
					if (nodeList.item(rowIdx).getElementsByTagName("same_a").item(0).value != "Y"){
						alert("인쇄량이 변경되어서 수정해야 합니다.");
						
						
						
						
						funPapcmpySearch();	//제지사별 발주량 조회
						   	
						model1.setValue("/root/reqData/saveGubun/ordr_dt", datagrid1.valueMatrix(datagrid1.row, datagrid1.colRef("issu_dt")));
						   	
						funDisabled();		//제지사별 용지구분(A,B,C)이 없는 곳은 입력 못하게 Disabled
							
						funSum();			//제지사별발주량 합계
							
						var issu_dt = datagrid1.valueMatrix(datagrid1.row, datagrid1.colRef("issu_dt"));
							
						for (var ii=3; ii<datagrid2.rows; ii++){
							datagrid2.valueMatrix(ii, 39) = datagrid1.valueMatrix(datagrid1.row, datagrid1.colRef("issu_dt"));
							datagrid2.valueMatrix(ii, 4) = datagrid1.valueMatrix(datagrid1.row, datagrid1.colRef("somo_cnt_a"));
							datagrid2.valueMatrix(ii, 5) = datagrid1.valueMatrix(datagrid1.row, datagrid1.colRef("somo_wgt_a"));
							datagrid2.valueMatrix(ii, 16) = datagrid1.valueMatrix(datagrid1.row, datagrid1.colRef("somo_cnt_b"));
							datagrid2.valueMatrix(ii, 17) = datagrid1.valueMatrix(datagrid1.row, datagrid1.colRef("somo_wgt_b"));
							datagrid2.valueMatrix(ii, 28) = datagrid1.valueMatrix(datagrid1.row, datagrid1.colRef("somo_cnt_c"));
							datagrid2.valueMatrix(ii, 29) = datagrid1.valueMatrix(datagrid1.row, datagrid1.colRef("somo_wgt_c"));
						}
						/*	
							for (var i=1; i<datagrid4.rows; i++){
								if (issu_dt == datagrid4.valueMatrix(i, datagrid4.colRef("issu_dt"))){
									var papcmpy_cd = datagrid4.valueMatrix(i, datagrid4.colRef("papcmpy_cd"));
									for (var ii=0; ii<datagrid2.rows; ii++){
										
										if (papcmpy_cd == datagrid2.valueMatrix(ii, datagrid2.colRef("papcmpy_cd"))){
											datagrid2.valueMatrix(ii, 4) = datagrid1.valueMatrix(datagrid1.row, 9);
											datagrid2.valueMatrix(ii, 5) = datagrid1.valueMatrix(datagrid1.row, 10);
											datagrid2.valueMatrix(ii, 6) = datagrid1.valueMatrix(datagrid1.row, 15);
											datagrid2.valueMatrix(ii, 7) = datagrid1.valueMatrix(datagrid1.row, 16);
											
											datagrid2.valueMatrix(ii, 16) = datagrid1.valueMatrix(datagrid1.row, 11);
											datagrid2.valueMatrix(ii, 17) = datagrid1.valueMatrix(datagrid1.row, 12);
											datagrid2.valueMatrix(ii, 18) = datagrid1.valueMatrix(datagrid1.row, 17);
											datagrid2.valueMatrix(ii, 19) = datagrid1.valueMatrix(datagrid1.row, 18);
											
											datagrid2.valueMatrix(ii, 28) = datagrid1.valueMatrix(datagrid1.row, 13);
											datagrid2.valueMatrix(ii, 29) = datagrid1.valueMatrix(datagrid1.row, 14);
											datagrid2.valueMatrix(ii, 30) = datagrid1.valueMatrix(datagrid1.row, 19);
											datagrid2.valueMatrix(ii, 31) = datagrid1.valueMatrix(datagrid1.row, 20);
										}
									}
								}
							}
							*/
					}
				}
				]]>
			</script>
		</datagrid>
		<group id="group3" style="left:10px; top:445px; width:926px; height:230px; ">
			<datagrid id="datagrid2" nodeset="/root/resData/gridData2/record" scroll="auto" caption="제지사^발주비율^ord^발주량^발주량^발주량^발주량^발주량^발주량^발주량^발주량^발주량^발주량^발주량^발주량^발주량^발주량^발주량^제지사코드&#xA;(HIDDEN)^발행일자^혼합^혼합^혼합^혼합^혼합^혼합^caption2^caption3^caption5|제지사^발주비율^ord^A^A^A^A^A^B^B^B^B^B^C^C^C^C^C^제지사코드&#xA;(HIDDEN)^발행일자^A^A^B^B^C^C^caption2^caption3^caption5|제지사^발주비율^ord^자재코드A^롤중량^롤수^중량^차량수^자재코드B^롤중량^롤수^중량^차량수^자재코드C^롤중량^롤수^중량^차량수^제지사코드&#xA;(HIDDEN)^발행일자^롤수^중량^롤수^중량^롤수^중량^caption2^caption3^caption5" colsep="^" colwidth="88, 55, 37, 70, 50, 45, 50, 40, 70, 50, 45, 50, 40, 70, 50, 45, 50, 45, 52, 80, 40, 45, 40, 45, 40, 45, 100, 100, 100" mergecellsfixedrows="bycolrec" rowheader="seq" rowsep="|" selectionmode="free" style="left:0px; top:0px; width:926px; height:225px; ">
				<col ref="papcmpy_nm"/>
				<col ref="p_ratio"/>
				<col ref="ord" visibility="hidden"/>
				<col ref="matr_cd_a" visibility="hidden"/>
				<col ref="roll_wgt_a" visibility="hidden"/>
				<col ref="roll_a" type="input" format="#,###" style="text-align:right; "/>
				<col ref="wgt_a" format="#,###" style="text-align:right; "/>
				<col ref="car_a" format="#,###" style="text-align:right; "/>
				<col ref="matr_cd_b" visibility="hidden"/>
				<col ref="roll_wgt_b" visibility="hidden"/>
				<col ref="roll_b" type="input" format="#,###" style="text-align:right; "/>
				<col ref="wgt_b" format="#,###" style="text-align:right; "/>
				<col ref="car_b" format="#,###" style="text-align:right; "/>
				<col ref="matr_cd_c" visibility="hidden"/>
				<col ref="roll_wgt_c" visibility="hidden"/>
				<col ref="roll_c" type="input" format="#,###" style="text-align:right; "/>
				<col ref="wgt_c" format="#,###" style="text-align:right; "/>
				<col ref="car_c" format="#,###" style="text-align:right; "/>
				<col ref="papcmpy_cd" visibility="hidden"/>
				<col ref="issu_dt" format="yyyy-mm-dd"/>
				<col ref="mix_roll_a" type="input" format="#,###" style="text-align:right; "/>
				<col ref="mix_wgt_a" format="#,###" style="text-align:right; "/>
				<col ref="mix_roll_b" type="input" format="#,###" style="text-align:right; "/>
				<col ref="mix_wgt_b" format="#,###" style="text-align:right; "/>
				<col ref="mix_roll_c" type="input" format="#,###" style="text-align:right; "/>
				<col ref="mix_wgt_c" format="#,###" style="text-align:right; "/>
				<col ref="roll_car_a" visibility="hidden"/>
				<col ref="roll_car_b" visibility="hidden"/>
				<col ref="roll_car_c" visibility="hidden"/>
				<script type="javascript" ev:event="xforms-value-changed">
					<![CDATA[
						//alert(datagrid2.col);
						if(datagrid2.col == 6  || datagrid2.col == 11 || datagrid2.col == 16) {
							var rollwgt_a = 0;
							var rollwgt_b = 0;
							var rollwgt_c = 0;
							var rollcnt_a = 0;
							var rollcnt_b = 0;
							var rollcnt_c = 0;
							var rollcar_a = 0;
							var rollcar_b = 0;
							var rollcar_c = 0;
							var iRowIndex = datagrid2.row;
							
							//alert(iRowIndex);
							rollcar_a = eval(datagrid2.valueMatrix(iRowIndex, datagrid2.colRef("roll_car_a")));
							rollcar_b = eval(datagrid2.valueMatrix(iRowIndex, datagrid2.colRef("roll_car_b")));
							rollcar_c = eval(datagrid2.valueMatrix(iRowIndex, datagrid2.colRef("roll_car_c")));
							
							rollwgt_a = eval(datagrid2.valueMatrix(iRowIndex, datagrid2.colRef("roll_wgt_a")));
							rollwgt_b = eval(datagrid2.valueMatrix(iRowIndex, datagrid2.colRef("roll_wgt_b")));
							rollwgt_c = eval(datagrid2.valueMatrix(iRowIndex, datagrid2.colRef("roll_wgt_c")));
							
							rollcnt_a = eval(datagrid2.valueMatrix(iRowIndex, datagrid2.colRef("roll_a")));
							rollcnt_b = eval(datagrid2.valueMatrix(iRowIndex, datagrid2.colRef("roll_b")));
							rollcnt_c = eval(datagrid2.valueMatrix(iRowIndex, datagrid2.colRef("roll_c")));
							
							if ((rollcnt_a % rollcar_a) != 0){
								alert("입력한 롤수는 차량적재량관리에서 입력한 차량 적재롤수에 적합하지 않습니다.\n다시 입력해주십시오.\n" + rollcnt_a + "\n" + rollcar_a);
								return;
							}
							//if ((rollcnt_b % rollcar_b) != 0){
							//	alert("입력한 롤수는 차량적재량관리에서 입력한 차량 적재롤수에 적합하지 않습니다.\n다시 입력해주십시오.\n" + rollcnt_b + "\n" + rollcar_b);
							//	return;
							//}
							if ((rollcnt_c % rollcar_c) != 0){
								alert("입력한 롤수는 차량적재량관리에서 입력한 차량 적재롤수에 적합하지 않습니다.\n다시 입력해주십시오.\n" + rollcnt_c + "\n" + rollcar_c);
								return;
							}
							datagrid2.valueMatrix(iRowIndex, datagrid2.colRef("wgt_a")) = (rollwgt_a * rollcnt_a);
							datagrid2.valueMatrix(iRowIndex, datagrid2.colRef("wgt_b")) = (rollwgt_b * rollcnt_b);
							datagrid2.valueMatrix(iRowIndex, datagrid2.colRef("wgt_c")) = (rollwgt_c * rollcnt_c);
							
							datagrid2.valueMatrix(iRowIndex, datagrid2.colRef("car_a")) = (rollcnt_a / rollcar_a);
							//datagrid2.valueMatrix(iRowIndex, datagrid2.colRef("car_b")) = (rollcnt_b / rollcar_b);
							datagrid2.valueMatrix(iRowIndex, datagrid2.colRef("car_c")) = (rollcnt_c / rollcar_c);
							//model1.setValue("/root/resData/gridData2/record["+(iRowIndex-2)+"]/ordr_wgt_a",(rollwgt_a * rollcnt_a));
							//model1.setValue("/root/resData/gridData2/record["+(iRowIndex-2)+"]/ordr_wgt_b",(rollwgt_b * rollcnt_b));
							//model1.setValue("/root/resData/gridData2/record["+(iRowIndex-2)+"]/ordr_wgt_c",(rollwgt_c * rollcnt_c));
							
							model1.refresh();
							
							//funWgt();					//롤입력시 중량 계산하여 셋팅
							//funOther(datagrid2.col);		//차량,나머지
							funSum();					//변경된 데이터의 합계산
							funBJChang();				//datagrid1의 발주량 정보 수정
							//funBjOther();
							//funBjOther_chg(datagrid2.col);
							//button9.dispatch("onclick");
							datagrid1.refresh();
							datagrid2.refresh();
						} else if(datagrid2.col == 21  || datagrid2.col == 23 || datagrid2.col == 25) {
							var rollwgt_a = 0;
							var rollwgt_b = 0;
							var rollwgt_c = 0;
							var rollcnt_a = 0;
							var rollcnt_b = 0;
							var rollcnt_c = 0;
							var rollcar_a = 0;
							var rollcar_b = 0;
							var rollcar_c = 0;
							var iRowIndex = datagrid2.row;
							
							//alert(iRowIndex);
							rollcar_a = eval(datagrid2.valueMatrix(iRowIndex, datagrid2.colRef("roll_car_a")));
							rollcar_b = eval(datagrid2.valueMatrix(iRowIndex, datagrid2.colRef("roll_car_b")));
							rollcar_c = eval(datagrid2.valueMatrix(iRowIndex, datagrid2.colRef("roll_car_c")));
							
							rollwgt_a = eval(datagrid2.valueMatrix(iRowIndex, datagrid2.colRef("roll_wgt_a")));
							rollwgt_b = eval(datagrid2.valueMatrix(iRowIndex, datagrid2.colRef("roll_wgt_b")));
							rollwgt_c = eval(datagrid2.valueMatrix(iRowIndex, datagrid2.colRef("roll_wgt_c")));
							
							rollcnt_a = eval(datagrid2.valueMatrix(iRowIndex, datagrid2.colRef("mix_roll_a")));
							rollcnt_b = eval(datagrid2.valueMatrix(iRowIndex, datagrid2.colRef("mix_roll_b")));
							rollcnt_c = eval(datagrid2.valueMatrix(iRowIndex, datagrid2.colRef("mix_roll_c")));
							
							datagrid2.valueMatrix(iRowIndex, datagrid2.colRef("mix_wgt_a")) = (rollwgt_a * rollcnt_a);
							datagrid2.valueMatrix(iRowIndex, datagrid2.colRef("mix_wgt_b")) = (rollwgt_b * rollcnt_b);
							datagrid2.valueMatrix(iRowIndex, datagrid2.colRef("mix_wgt_c")) = (rollwgt_c * rollcnt_c);
							
							funSum();					//변경된 데이터의 합계산
							funMixBJChang();				//datagrid1의 발주량 정보 수정
						}
						//funBj();
						//funWgt();					//롤입력시 중량 계산하여 셋팅
						//funOther(6);				//차량,나머지
						//funOther(18);
						//funOther(30);
						//funSum();					//변경된 데이터의 합계산
						//funBJChang();				//datagrid1의 발주량 정보 수정
						//funBjOther();
						//funBjOther_chg(datagrid2.col);
						//datagrid1.refresh();
						//datagrid2.refresh();
						/*
						var issu_dt 	= datagrid2.valueMatrix(datagrid2.row, datagrid2.colRef("issu_dt"));
						var papcmpy_cd = datagrid2.valueMatrix(datagrid2.row, datagrid2.colRef("papcmpy_cd"));
						var matr_cd	= datagrid2.valueMatrix(datagrid2.row, (datagrid2.col - 2 ));
						
						var same_chk = 0;
						var same_row = 0;
						for (var i=0; i<datagrid4.rows; i++){
							if (datagrid4.valueMatrix(i, datagrid4.colRef("issu_dt")) == issu_dt && datagrid4.valueMatrix(i, datagrid4.colRef("matr_cd")) == matr_cd && datagrid4.valueMatrix(i, datagrid4.colRef("papcmpy_cd")) == papcmpy_cd){
								same_row = i;
								break;
							}
						}
						
						if (same_row != 0){
								//datagrid4.valueMatrix(same_row, 4) = datagrid2.valueMatrix(datagrid2.row, datagrid2.col - 2);
								//datagrid4.valueMatrix(same_row, 5) = datagrid2.valueMatrix(datagrid2.row, datagrid2.col - 1);
								datagrid4.valueMatrix(same_row, datagrid4.colRef("ord_roll")) = datagrid2.valueMatrix(datagrid2.row, datagrid2.col);
								datagrid4.valueMatrix(same_row, datagrid4.colRef("ord_wgt")) = datagrid2.valueMatrix(datagrid2.row, datagrid2.col + 1);
								datagrid4.valueMatrix(same_row, datagrid4.colRef("car_cnt")) = datagrid2.valueMatrix(datagrid2.row, datagrid2.col + 2);
								//datagrid4.valueMatrix(same_row, 9) = datagrid2.valueMatrix(datagrid2.row, datagrid2.col + 4);
								//datagrid4.valueMatrix(same_row, 10) = datagrid2.valueMatrix(datagrid2.row, datagrid2.col + 6);
								if (datagrid4.rowStatus(same_row) != 1){
									datagrid4.rowStatus(same_row) = 2;
								}
						} else {
							datagrid4.addRow(true, true);
								
							datagrid4.valueMatrix((datagrid4.rows-1), datagrid4.colRef("issu_dt")) = datagrid2.valueMatrix(datagrid2.row, 39);
							datagrid4.valueMatrix((datagrid4.rows-1), datagrid4.colRef("papcmpy_cd")) = datagrid2.valueMatrix(datagrid2.row, 38);
							datagrid4.valueMatrix((datagrid4.rows-1), datagrid4.colRef("matr_cd")) = datagrid2.valueMatrix(datagrid2.row, datagrid2.col- 4);
							//datagrid4.valueMatrix((datagrid4.rows-1), 4) = datagrid2.valueMatrix(datagrid2.row, datagrid2.col- 2);
							//datagrid4.valueMatrix((datagrid4.rows-1), 5) = datagrid2.valueMatrix(datagrid2.row, datagrid2.col- 1);
							
							datagrid4.valueMatrix((datagrid4.rows-1), datagrid4.colRef("ord_roll")) = datagrid2.valueMatrix(datagrid2.row, datagrid2.col);
							datagrid4.valueMatrix((datagrid4.rows-1), datagrid4.colRef("ord_wgt")) = datagrid2.valueMatrix(datagrid2.row, datagrid2.col + 1);
							datagrid4.valueMatrix((datagrid4.rows-1), datagrid4.colRef("car_cnt")) = datagrid2.valueMatrix(datagrid2.row, datagrid2.col + 2);
							//datagrid4.valueMatrix((datagrid4.rows-1), 9) = datagrid2.valueMatrix(datagrid2.row, datagrid2.col + 4);
							//datagrid4.valueMatrix((datagrid4.rows-1), 10) = datagrid2.valueMatrix(datagrid2.row, datagrid2.col + 6);
							datagrid4.rowStatus((datagrid4.rows-1)) = 1;
						}
						*/
						//f_makeResult(i);
					]]>
				</script>
			</datagrid>
		</group>
		<group id="group4" class="gro_sel" style="left:10px; top:412px; width:926px; height:27px; ">
			<button id="button9" class="btn04" style="left:745px; top:0px; width:87px; height:21px; ">
				<caption>발주량 산정</caption>
				<script type="javascript" ev:event="onclick">
					<![CDATA[
					var std_ewh_wgt_a	= eval(model1.getValue("/root/reqData/facpaperamss/std_ewh_wgt_a"));
					var std_ewh_wgt_b	= eval(model1.getValue("/root/reqData/facpaperamss/std_ewh_wgt_b"));
					var std_ewh_wgt_c	= eval(model1.getValue("/root/reqData/facpaperamss/std_ewh_wgt_c"));
					var std_ewh_roll_a	= eval(model1.getValue("/root/reqData/facpaperamss/std_ewh_roll_cnt_a"));
					var std_ewh_roll_b	= eval(model1.getValue("/root/reqData/facpaperamss/std_ewh_roll_cnt_b"));
					var std_ewh_roll_c	= eval(model1.getValue("/root/reqData/facpaperamss/std_ewh_roll_cnt_c"));
					
					var amss_a		= eval(model1.getValue("/root/reqData/facpaperamss/amss_wgt_a"));
					var amss_b		= eval(model1.getValue("/root/reqData/facpaperamss/amss_wgt_b"));
					var amss_c		= eval(model1.getValue("/root/reqData/facpaperamss/amss_wgt_c"));
					var stok_wgt_a		= 0;
					var stok_wgt_b		= 0;
					var stok_wgt_c		= 0;
					var stok_roll_a	= 0;
					var stok_roll_b	= 0;
					var stok_roll_c	= 0;
					var exp_wgt_a		= 0;
					var exp_wgt_b		= 0;
					var exp_wgt_c		= 0;
					var exp_roll_a		= 0;
					var exp_roll_b		= 0;
					var exp_roll_c		= 0;
					var jj_wgt_a		= 0;
					var jj_wgt_b		= 0;
					var jj_wgt_c		= 0;
					var jj_roll_a		= 0;
					var jj_roll_b		= 0;
					var jj_roll_c		= 0;
					var tot_exp_wgt	= 0;
					var chg_yn		= "";
					
					for (var i=datagrid1.fixedRows; i<datagrid1.rows; i++){
						chg_yn		= datagrid1.valueMatrix(i, datagrid1.colRef("chg_yn"));
						
						stok_wgt_a = eval(datagrid1.valueMatrix(i, datagrid1.colRef("jg_wgt_a"))) - eval(datagrid1.valueMatrix(i, datagrid1.colRef("somo_wgt_a"))) + eval(datagrid1.valueMatrix(i, datagrid1.colRef("bi_wgt_a")));
						stok_wgt_b = eval(datagrid1.valueMatrix(i, datagrid1.colRef("jg_wgt_b"))) - eval(datagrid1.valueMatrix(i, datagrid1.colRef("somo_wgt_b"))) + eval(datagrid1.valueMatrix(i, datagrid1.colRef("bi_wgt_b")));
						stok_wgt_c = eval(datagrid1.valueMatrix(i, datagrid1.colRef("jg_wgt_c"))) - eval(datagrid1.valueMatrix(i, datagrid1.colRef("somo_wgt_c"))) + eval(datagrid1.valueMatrix(i, datagrid1.colRef("bi_wgt_c")));
						
						//alert(stok_wgt_a + "\n" + stok_wgt_b + "\n" + stok_wgt_c);
						
						stok_roll_a	= (stok_wgt_a / eval(datagrid1.valueMatrix(i, datagrid1.colRef("roll_wgt_a"))) ) ;
						stok_roll_b	= (stok_wgt_b / eval(datagrid1.valueMatrix(i, datagrid1.colRef("roll_wgt_b"))) ) ;
						stok_roll_c	= (stok_wgt_c / eval(datagrid1.valueMatrix(i, datagrid1.colRef("roll_wgt_c"))) ) ;
						
						//stok_roll_a	= stok_wgt_a / eval(datagrid1.valueMatrix(i, datagrid1.colRef("roll_wgt_a")));
						//stok_roll_b	= stok_wgt_b / eval(datagrid1.valueMatrix(i, datagrid1.colRef("roll_wgt_b")));
						//stok_roll_c	= stok_wgt_c / eval(datagrid1.valueMatrix(i, datagrid1.colRef("roll_wgt_c")));
						
						//alert(stok_roll_a + "\n" + stok_roll_b + "\n" + stok_roll_c);
						
						exp_roll_a = Math.ceil(std_ewh_roll_a - stok_roll_a);
						exp_roll_b = Math.ceil(std_ewh_roll_b - stok_roll_b);
						exp_roll_c = Math.ceil(std_ewh_roll_c - stok_roll_c);
						
						if (eval(datagrid1.valueMatrix(i, datagrid1.colRef("somo_wgt_a"))) == 0){
							exp_roll_a = 0;
						}
						if (eval(datagrid1.valueMatrix(i, datagrid1.colRef("somo_wgt_b"))) == 0){
							exp_roll_b = 0;
						}
						if (eval(datagrid1.valueMatrix(i, datagrid1.colRef("somo_wgt_c"))) == 0){
							exp_roll_c = 0;
						}
						
						//model.setValue("/root/reqData/searchData/roll_a", exp_roll_a);
						//model.setValue("/root/reqData/searchData/roll_b", exp_roll_b);
						//model.setValue("/root/reqData/searchData/roll_c", exp_roll_c);
						//model.send("mt_papord_5008_l");
						
						//datagrid1.valueMatrix(i, datagrid1.colRef("ordr_roll_cnt_a")) = model.getValue("/root/tempData/CURLIST/record/a_roll");
						//datagrid1.valueMatrix(i, datagrid1.colRef("ordr_roll_cnt_b")) = model.getValue("/root/tempData/CURLIST/record/b_roll");
						//datagrid1.valueMatrix(i, datagrid1.colRef("ordr_roll_cnt_c")) = model.getValue("/root/tempData/CURLIST/record/c_roll");
						//datagrid1.valueMatrix(i, datagrid1.colRef("ordr_wgt_a"))		= eval(datagrid1.valueMatrix(i, datagrid1.colRef("ordr_roll_cnt_a"))) * eval(datagrid1.valueMatrix(i, datagrid1.colRef("roll_wgt_a")));
						//datagrid1.valueMatrix(i, datagrid1.colRef("ordr_wgt_b"))		= eval(datagrid1.valueMatrix(i, datagrid1.colRef("ordr_roll_cnt_b"))) * eval(datagrid1.valueMatrix(i, datagrid1.colRef("roll_wgt_b")));
						//datagrid1.valueMatrix(i, datagrid1.colRef("ordr_wgt_c"))		= eval(datagrid1.valueMatrix(i, datagrid1.colRef("ordr_roll_cnt_c"))) * eval(datagrid1.valueMatrix(i, datagrid1.colRef("roll_wgt_c")));
						
						if (exp_roll_a <= 0){
							if (chg_yn != "Y"){
								datagrid1.valueMatrix(i, datagrid1.colRef("ordr_roll_cnt_a")) 	= 0;
								datagrid1.valueMatrix(i, datagrid1.colRef("ordr_wgt_a"))		= 0;
							}
						} else {
							if (chg_yn != "Y"){
								datagrid1.valueMatrix(i, datagrid1.colRef("ordr_roll_cnt_a")) 	= exp_roll_a;
								datagrid1.valueMatrix(i, datagrid1.colRef("ordr_wgt_a"))		= exp_roll_a * eval(datagrid1.valueMatrix(i, datagrid1.colRef("roll_wgt_a")));
							}
						}
						if (exp_roll_b <= 0){
							if (chg_yn != "Y"){
								datagrid1.valueMatrix(i, datagrid1.colRef("ordr_roll_cnt_b")) 	= 0;
								datagrid1.valueMatrix(i, datagrid1.colRef("ordr_wgt_b"))		= 0;
							}
						} else {
							if (chg_yn != "Y"){
								datagrid1.valueMatrix(i, datagrid1.colRef("ordr_roll_cnt_b")) 	= exp_roll_b;
								datagrid1.valueMatrix(i, datagrid1.colRef("ordr_wgt_b"))		= exp_roll_b * eval(datagrid1.valueMatrix(i, datagrid1.colRef("roll_wgt_b")));
							}
						}
						
						if (exp_roll_c <= 0){
							if (chg_yn != "Y"){
								datagrid1.valueMatrix(i, datagrid1.colRef("ordr_roll_cnt_c")) 	= 0;
								datagrid1.valueMatrix(i, datagrid1.colRef("ordr_wgt_c"))		= 0;
							}
						} else {
							if (chg_yn != "Y"){
								datagrid1.valueMatrix(i, datagrid1.colRef("ordr_roll_cnt_c")) 	= exp_roll_c;
								datagrid1.valueMatrix(i, datagrid1.colRef("ordr_wgt_c"))		= exp_roll_c * eval(datagrid1.valueMatrix(i, datagrid1.colRef("roll_wgt_c")));
							}
						}
						
						
						//return;
						//if (i<4){
						//	alert(exp_roll_a +"\n" + exp_roll_b + "\n" + exp_roll_c );
						//	alert(eval(datagrid1.valueMatrix(i, datagrid1.colRef("roll_wgt_a"))) +"\n" + eval(datagrid1.valueMatrix(i, datagrid1.colRef("roll_wgt_b"))) + "\n" + eval(datagrid1.valueMatrix(i, datagrid1.colRef("roll_wgt_c"))) );
						//}
						tot_exp_wgt	= (exp_roll_a * eval(datagrid1.valueMatrix(i, datagrid1.colRef("roll_wgt_a")))) + (exp_roll_b * eval(datagrid1.valueMatrix(i, datagrid1.colRef("roll_wgt_b")))) + (exp_roll_c * eval(datagrid1.valueMatrix(i, datagrid1.colRef("roll_wgt_c"))));
						tot_exp_wgt	= (exp_roll_a * eval(datagrid1.valueMatrix(i, datagrid1.colRef("roll_wgt_a")))) + (exp_roll_c * eval(datagrid1.valueMatrix(i, datagrid1.colRef("roll_wgt_c"))));
						/*
						//alert(exp_roll_a + "\n" + exp_roll_b + "\n" + exp_roll_c);
						//if (i<4){
						//	alert(tot_exp_wgt);
						//}
						if (exp_roll_c <= 0){
							jj_roll_c = 0;
						} else {
							jj_roll_c = Math.floor(exp_roll_c / 6);
						}
						
						//alert("jj_roll_c=" + jj_roll_c);
						
						jj_wgt_c = amss_c * jj_roll_c;
						
						jj_wgt_a = tot_exp_wgt - jj_wgt_c;
						jj_roll_a = jj_wgt_a / amss_a;
						
						//if (i<4)
							//alert("jj_wgt_a=" + jj_wgt_a + "\njj_wgt_c=" + jj_wgt_c);
							
						if (exp_roll_c % 2 == 0){
							jj_roll_a = Math.floor(jj_roll_a);
						} else {
							jj_roll_a = Math.floor(jj_roll_a) - 0.5;
						}
						jj_roll_a = jj_roll_a * 6;
						jj_roll_c = jj_roll_c * 6;
						//if (i<4){
						alert("A권발주롤수=" + jj_roll_a + "\nC권발주롤수=" + jj_roll_c);
						//	alert("A권발주롤수=" + (jj_roll_a * 6) + "\nC권발주롤수=" + (jj_roll_c * 6));
						//}
						datagrid1.valueMatrix(i, datagrid1.colRef("ordr_roll_cnt_a")) = jj_roll_a;
						datagrid1.valueMatrix(i, datagrid1.colRef("ordr_roll_cnt_b")) = jj_roll_b;
						datagrid1.valueMatrix(i, datagrid1.colRef("ordr_roll_cnt_c")) = jj_roll_c;
						
						datagrid1.valueMatrix(i, datagrid1.colRef("ordr_wgt_a")) = jj_roll_a * eval(datagrid1.valueMatrix(i, datagrid1.colRef("roll_wgt_a")));
						datagrid1.valueMatrix(i, datagrid1.colRef("ordr_wgt_b")) = jj_roll_b * eval(datagrid1.valueMatrix(i, datagrid1.colRef("roll_wgt_b")));
						datagrid1.valueMatrix(i, datagrid1.colRef("ordr_wgt_c")) = jj_roll_c * eval(datagrid1.valueMatrix(i, datagrid1.colRef("roll_wgt_c")));
						*/
						
						f_makeResult(i);
						//f_addBj(i);
						
						//return;
						/*
						var nodeList = instance1.selectNodes("/root/resData/papcmpy_cd/record");
						for (var ii=0; ii<nodeList.length; ii++){
							
							datagrid4.addRow();
							datagrid4.valueMatrix(datagrid4.rows-1, datagrid4.colRef("issu_dt")) = datagrid1.valueMatrix(i, datagrid1.colRef("issu_dt"));
							datagrid4.valueMatrix(datagrid4.rows-1, datagrid4.colRef("matr_cd")) = datagrid1.valueMatrix(i, datagrid1.colRef("matr_a"));
							datagrid4.valueMatrix(datagrid4.rows-1, datagrid4.colRef("papcmpy_cd")) = nodeList.item(ii).getElementsByTagName("papcmpy_cd").item(0).value;
							datagrid4.valueMatrix(datagrid4.rows-1, datagrid4.colRef("somo_roll")) = datagrid1.valueMatrix(i, datagrid1.colRef("somo_cnt_a"));
							datagrid4.valueMatrix(datagrid4.rows-1, datagrid4.colRef("somo_wgt")) = datagrid1.valueMatrix(i, datagrid1.colRef("somo_wgt_a"));
							datagrid4.valueMatrix(datagrid4.rows-1, datagrid4.colRef("ord_roll")) = datagrid1.valueMatrix(i, datagrid1.colRef("ordr_roll_cnt_a"));
							datagrid4.valueMatrix(datagrid4.rows-1, datagrid4.colRef("ord_wgt")) = datagrid1.valueMatrix(i, datagrid1.colRef("ordr_wgt_a"));
							
							datagrid4.addRow();
							datagrid4.valueMatrix(datagrid4.rows-1, datagrid4.colRef("issu_dt")) = datagrid1.valueMatrix(i, datagrid1.colRef("issu_dt"));
							datagrid4.valueMatrix(datagrid4.rows-1, datagrid4.colRef("matr_cd")) = datagrid1.valueMatrix(i, datagrid1.colRef("matr_b"));
							datagrid4.valueMatrix(datagrid4.rows-1, datagrid4.colRef("papcmpy_cd")) = nodeList.item(ii).getElementsByTagName("papcmpy_cd").item(0).value;
							datagrid4.valueMatrix(datagrid4.rows-1, datagrid4.colRef("somo_roll")) = datagrid1.valueMatrix(i, datagrid1.colRef("somo_cnt_b"));
							datagrid4.valueMatrix(datagrid4.rows-1, datagrid4.colRef("somo_wgt")) = datagrid1.valueMatrix(i, datagrid1.colRef("somo_wgt_b"));
							datagrid4.valueMatrix(datagrid4.rows-1, datagrid4.colRef("ord_roll")) = datagrid1.valueMatrix(i, datagrid1.colRef("ordr_roll_cnt_b"));
							datagrid4.valueMatrix(datagrid4.rows-1, datagrid4.colRef("ord_wgt")) = datagrid1.valueMatrix(i, datagrid1.colRef("ordr_wgt_b"));
							
							datagrid4.addRow();
							datagrid4.valueMatrix(datagrid4.rows-1, datagrid4.colRef("issu_dt")) = datagrid1.valueMatrix(i, datagrid1.colRef("issu_dt"));
							datagrid4.valueMatrix(datagrid4.rows-1, datagrid4.colRef("matr_cd")) = datagrid1.valueMatrix(i, datagrid1.colRef("matr_c"));
							datagrid4.valueMatrix(datagrid4.rows-1, datagrid4.colRef("papcmpy_cd")) = nodeList.item(ii).getElementsByTagName("papcmpy_cd").item(0).value;
							datagrid4.valueMatrix(datagrid4.rows-1, datagrid4.colRef("somo_roll")) = datagrid1.valueMatrix(i, datagrid1.colRef("somo_cnt_c"));
							datagrid4.valueMatrix(datagrid4.rows-1, datagrid4.colRef("somo_wgt")) = datagrid1.valueMatrix(i, datagrid1.colRef("somo_wgt_c"));
							datagrid4.valueMatrix(datagrid4.rows-1, datagrid4.colRef("ord_roll")) = datagrid1.valueMatrix(i, datagrid1.colRef("ordr_roll_cnt_c"));
							datagrid4.valueMatrix(datagrid4.rows-1, datagrid4.colRef("ord_wgt")) = datagrid1.valueMatrix(i, datagrid1.colRef("ordr_wgt_c"));
							
							for (var j=3; j<datagrid2.rows; j++){
								if (datagrid2.valueMatrix(j, datagrid2.colRef("papcmpy_cd")) == nodeList.item(ii).getElementsByTagName("papcmpy_cd").item(0).value){
									
									datagrid2.valueMatrix(j, datagrid2.colRef("issu_dt")) = datagrid1.valueMatrix(i, datagrid1.colRef("issu_dt"));
									datagrid2.valueMatrix(j, datagrid2.colRef("somo_roll_a")) = datagrid1.valueMatrix(i, datagrid1.colRef("somo_cnt_a"));
									datagrid2.valueMatrix(j, datagrid2.colRef("somo_roll_a")) = datagrid1.valueMatrix(i, datagrid1.colRef("somo_wgt_a"));
									datagrid2.valueMatrix(j, datagrid2.colRef("ordr_roll_a")) = datagrid1.valueMatrix(i, datagrid1.colRef("ordr_roll_cnt_a"));
									datagrid2.valueMatrix(j, datagrid2.colRef("ordr_wgt_a")) = datagrid1.valueMatrix(i, datagrid1.colRef("ordr_wgt_a"));
									
									datagrid2.valueMatrix(j, datagrid2.colRef("somo_roll_b")) = datagrid1.valueMatrix(i, datagrid1.colRef("somo_cnt_b"));
									datagrid2.valueMatrix(j, datagrid2.colRef("somo_roll_b")) = datagrid1.valueMatrix(i, datagrid1.colRef("somo_wgt_b"));
									datagrid2.valueMatrix(j, datagrid2.colRef("ordr_roll_b")) = datagrid1.valueMatrix(i, datagrid1.colRef("ordr_roll_cnt_b"));
									datagrid2.valueMatrix(j, datagrid2.colRef("ordr_wgt_b")) = datagrid1.valueMatrix(i, datagrid1.colRef("ordr_wgt_b"));
									
									datagrid2.valueMatrix(j, datagrid2.colRef("somo_roll_c")) = datagrid1.valueMatrix(i, datagrid1.colRef("somo_cnt_c"));
									datagrid2.valueMatrix(j, datagrid2.colRef("somo_roll_c")) = datagrid1.valueMatrix(i, datagrid1.colRef("somo_wgt_c"));
									datagrid2.valueMatrix(j, datagrid2.colRef("ordr_roll_c")) = datagrid1.valueMatrix(i, datagrid1.colRef("ordr_roll_cnt_c"));
									datagrid2.valueMatrix(j, datagrid2.colRef("ordr_wgt_c")) = datagrid1.valueMatrix(i, datagrid1.colRef("ordr_wgt_c"));
									
									datagrid2.dispatch("xforms-value-changed");
								}
							}
						}
						*/
						
					}
					
					
					/*
					var cell_1			= datagrid1.selectedCells;
					var cell_2			= datagrid2.selectedCells;
					
					if(cell_1.length < 1){
						alert("select a Cell");
						return;
					}
					if(cell_2.length < 1){
						alert("select a Cell");
						return;
					}
					var row_1			= cell_1.item(0).row;
					var row_2			= cell_2.item(0).row;
					funMakeOrder(row_1, row_2);
					
					funWgt();			//롤입력시 중량 계산하여 셋팅
					funOther(6);		//차량,나머지
					funOther(18);		//차량,나머지
					funOther(30);		//차량,나머지
					funBjOther();
					funBj();
					funSum();					//변경된 데이터의 합계산
					funBJChang();				//datagrid1의 발주량 정보 수정
					datagrid1.refresh();
					datagrid2.refresh();
						//datagrid1.refresh();
					*/
					]]>
				</script>
			</button>
			<caption id="caption5" class="tit02" style="left:-1px; top:-1px; width:130px; height:20px; ">제지사별 발주량</caption>
			<button id="button2" class="btn04" style="left:835px; top:0px; width:87px; height:21px; ">
				<caption>제지사 배분</caption>
				<script type="javascript" ev:event="onclick">
					<![CDATA[
					// 제지사 발주비율을 구한다.
					// 최초발주량을 가지고 제지사비율로 배분한다.
					
					var std_ewh_wgt_a	= eval(model1.getValue("/root/reqData/facpaperamss/std_ewh_wgt_a"));
					var std_ewh_wgt_b	= eval(model1.getValue("/root/reqData/facpaperamss/std_ewh_wgt_b"));
					var std_ewh_wgt_c	= eval(model1.getValue("/root/reqData/facpaperamss/std_ewh_wgt_c"));
					var std_ewh_roll_a	= eval(model1.getValue("/root/reqData/facpaperamss/std_ewh_roll_cnt_a"));
					var std_ewh_roll_b	= eval(model1.getValue("/root	/reqData/facpaperamss/std_ewh_roll_cnt_b"));
					var std_ewh_roll_c	= eval(model1.getValue("/root/reqData/facpaperamss/std_ewh_roll_cnt_c"));
					
					var amss_a		= eval(model1.getValue("/root/reqData/facpaperamss/amss_wgt_a"));
					var amss_b		= eval(model1.getValue("/root/reqData/facpaperamss/amss_wgt_b"));
					var amss_c		= eval(model1.getValue("/root/reqData/facpaperamss/amss_wgt_c"));
					var car_roll_a		= eval(model1.getValue("/root/reqData/facpaperamss/roll_cnt_a"));
					var car_roll_b		= eval(model1.getValue("/root/reqData/facpaperamss/roll_cnt_b"));
					var car_roll_c		= eval(model1.getValue("/root/reqData/facpaperamss/roll_cnt_c"));
					var stok_wgt_a		= 0;
					var stok_wgt_b		= 0;
					var stok_wgt_c		= 0;
					var stok_roll_a	= 0;
					var stok_roll_b	= 0;
					var stok_roll_c	= 0;
					var exp_wgt_a		= 0;
					var exp_wgt_b		= 0;
					var exp_wgt_c		= 0;
					var exp_roll_a		= 0;
					var exp_roll_b		= 0;
					var exp_roll_c		= 0;
					var jj_wgt_a		= 0;
					var jj_wgt_b		= 0;
					var jj_wgt_c		= 0;
					var jj_roll_a		= 0;
					var jj_roll_b		= 0;
					var jj_roll_c		= 0;
					var tot_exp_wgt	= 0;
					var issu_dt		= "";
					var first_ordr_wgt_a = 0;
					var first_ordr_wgt_b = 0;
					var first_ordr_wgt_c = 0;
					
					for (var i=datagrid1.fixedRows; i<datagrid1.rows; i++){ // for datagrid1
						for (var j=datagrid2.fixedRows; j< datagrid2.rows; j++){	// for datagrid2
							issu_dt = datagrid2.valueMatrix(j, datagrid2.colRef("issu_dt"));
							if (datagrid1.valueMatrix(i, datagrid1.colRef("issu_dt")) == issu_dt){
								if ( datagrid2.valueMatrix(j, datagrid2.colRef("ord")) == "01"){
									first_ordr_wgt_a = eval(datagrid1.valueMatrix(i, datagrid1.colRef("ordr_wgt_a")));
									first_ordr_wgt_b = eval(datagrid1.valueMatrix(i, datagrid1.colRef("ordr_wgt_b")));
									first_ordr_wgt_c = eval(datagrid1.valueMatrix(i, datagrid1.colRef("ordr_wgt_c")));
									
									//alert(datagrid2.valueMatrix(j, datagrid2.colRef("p_ratio")) + "\n" + datagrid1.valueMatrix(i, datagrid1.colRef("ordr_wgt_a")));
									exp_wgt_a = (eval(datagrid2.valueMatrix(j, datagrid2.colRef("p_ratio"))) / 10) * datagrid1.valueMatrix(i, datagrid1.colRef("ordr_wgt_a"));
									exp_wgt_b = (eval(datagrid2.valueMatrix(j, datagrid2.colRef("p_ratio"))) / 10) * datagrid1.valueMatrix(i, datagrid1.colRef("ordr_wgt_b"));
									exp_wgt_c = (eval(datagrid2.valueMatrix(j, datagrid2.colRef("p_ratio"))) / 10) * datagrid1.valueMatrix(i, datagrid1.colRef("ordr_wgt_c"));
									
									//alert("01........" + exp_wgt_b + "\n" + datagrid2.valueMatrix(j, datagrid2.colRef("roll_wgt_b")) + "\n" + exp_wgt_a + "\n" + datagrid2.valueMatrix(j, datagrid2.colRef("roll_wgt_a")) + "\n" + exp_wgt_c + "\n" + datagrid2.valueMatrix(j, datagrid2.colRef("roll_wgt_c")));
									if (exp_wgt_a == 0){
										exp_roll_a = 0;
									} else {
										exp_roll_a = Math.ceil(exp_wgt_a / eval(datagrid2.valueMatrix(j, datagrid2.colRef("roll_wgt_a"))) );
									}
									if (exp_wgt_b == 0){
										exp_roll_b = 0;
									} else {
										if (eval(datagrid2.valueMatrix(j, datagrid2.colRef("roll_wgt_b"))) == 0){
											exp_roll_b = 0;
										} else {
											exp_roll_b = Math.ceil(exp_wgt_b / eval(datagrid2.valueMatrix(j, datagrid2.colRef("roll_wgt_b"))) );
										}
									}
									if (exp_wgt_c == 0){
										exp_roll_c = 0;
									} else {
										if (eval(datagrid2.valueMatrix(j, datagrid2.colRef("roll_wgt_c"))) == 0){
											exp_roll_c = 0;
										} else {
											exp_roll_c = Math.ceil(exp_wgt_c / eval(datagrid2.valueMatrix(j, datagrid2.colRef("roll_wgt_c"))) );
										}
									}
									
									
									if (exp_roll_a == 0 && exp_roll_b == 0 && exp_roll_c == 0){
										datagrid2.valueMatrix(j, datagrid2.colRef("roll_a")) = 0;
										datagrid2.valueMatrix(j, datagrid2.colRef("roll_b")) = 0;
										datagrid2.valueMatrix(j, datagrid2.colRef("roll_c")) = 0;
										
										datagrid2.valueMatrix(j, datagrid2.colRef("wgt_a")) = 0;
										datagrid2.valueMatrix(j, datagrid2.colRef("wgt_b")) = 0;
										datagrid2.valueMatrix(j, datagrid2.colRef("wgt_c")) = 0;
									} else {
										//alert(exp_roll_a + "\n" + exp_roll_b + "\n" + exp_roll_c);
										model.setValue("/root/reqData/searchData/roll_a", exp_roll_a);
										model.setValue("/root/reqData/searchData/roll_b", exp_roll_b);
										model.setValue("/root/reqData/searchData/roll_c", exp_roll_c);
										
										model.send("mt_papord_5008_l");
										
										if (model.getValue("/root/tempData/CURLIST/record/a_roll") == "0"){
											datagrid2.valueMatrix(j, datagrid2.colRef("roll_a")) 	= 0;
											datagrid2.valueMatrix(j, datagrid2.colRef("car_a"))	= 0;
											datagrid2.valueMatrix(j, datagrid2.colRef("wgt_a")) 	= 0;
											datagrid2.cellStyle("background-color",j, datagrid2.colRef("roll_a")) = "#FFF000";
											datagrid2.cellStyle("background-color",j, datagrid2.colRef("car_a")) = "#FFF000";
											datagrid2.cellStyle("background-color",j, datagrid2.colRef("wgt_a")) = "#FFF000";
										} else {
											datagrid2.valueMatrix(j, datagrid2.colRef("roll_a")) 	= (Math.floor(eval(model.getValue("/root/tempData/CURLIST/record/a_roll")) / eval(car_roll_a))) * eval(car_roll_a);
											datagrid2.valueMatrix(j, datagrid2.colRef("car_a"))	= Math.floor(eval(model.getValue("/root/tempData/CURLIST/record/a_roll")) / eval(car_roll_a));
											datagrid2.valueMatrix(j, datagrid2.colRef("wgt_a")) 	= eval(datagrid2.valueMatrix(j, datagrid2.colRef("roll_a"))) * eval(datagrid2.valueMatrix(j, datagrid2.colRef("roll_wgt_a")));
											datagrid2.cellStyle("background-color",j, datagrid2.colRef("roll_a")) = "#FFFFFF";
											datagrid2.cellStyle("background-color",j, datagrid2.colRef("car_a")) = "#FFFFFF";
											datagrid2.cellStyle("background-color",j, datagrid2.colRef("wgt_a")) = "#FFFFFF";
										}
										if (model.getValue("/root/tempData/CURLIST/record/b_roll") == "0"){
											datagrid2.valueMatrix(j, datagrid2.colRef("roll_b")) 	= 0;
											datagrid2.valueMatrix(j, datagrid2.colRef("car_b"))	= 0;
											datagrid2.valueMatrix(j, datagrid2.colRef("wgt_b")) 	= 0;
											datagrid2.cellStyle("background-color",j, datagrid2.colRef("roll_b")) = "#FFF000";
											datagrid2.cellStyle("background-color",j, datagrid2.colRef("car_b")) = "#FFF000";
											datagrid2.cellStyle("background-color",j, datagrid2.colRef("wgt_b")) = "#FFF000";
										} else {
											datagrid2.valueMatrix(j, datagrid2.colRef("roll_b")) 	= (Math.floor(eval(model.getValue("/root/tempData/CURLIST/record/b_roll")) / eval(car_roll_b))) * eval(car_roll_b);
											datagrid2.valueMatrix(j, datagrid2.colRef("car_b"))	= Math.floor(eval(model.getValue("/root/tempData/CURLIST/record/b_roll")) / eval(car_roll_b));
											datagrid2.valueMatrix(j, datagrid2.colRef("wgt_b")) 	= eval(datagrid2.valueMatrix(j, datagrid2.colRef("roll_b"))) * eval(datagrid2.valueMatrix(j, datagrid2.colRef("roll_wgt_b")));
											datagrid2.cellStyle("background-color",j, datagrid2.colRef("roll_b")) = "#FFFFFF";
											datagrid2.cellStyle("background-color",j, datagrid2.colRef("car_b")) = "#FFFFFF";
											datagrid2.cellStyle("background-color",j, datagrid2.colRef("wgt_b")) = "#FFFFFF";
										}
										if (model.getValue("/root/tempData/CURLIST/record/c_roll") == "0"){
											datagrid2.valueMatrix(j, datagrid2.colRef("roll_c")) 	= 0;
											datagrid2.valueMatrix(j, datagrid2.colRef("car_c"))	= 0;
											datagrid2.valueMatrix(j, datagrid2.colRef("wgt_c")) 	= 0;
											datagrid2.cellStyle("background-color",j, datagrid2.colRef("roll_c")) = "#FFF000";
											datagrid2.cellStyle("background-color",j, datagrid2.colRef("car_c")) = "#FFF000";
											datagrid2.cellStyle("background-color",j, datagrid2.colRef("wgt_c")) = "#FFF000";
										} else {
											datagrid2.valueMatrix(j, datagrid2.colRef("roll_c")) 	= (Math.floor(eval(model.getValue("/root/tempData/CURLIST/record/c_roll")) / eval(car_roll_c))) * eval(car_roll_c);
											datagrid2.valueMatrix(j, datagrid2.colRef("car_c"))	= Math.floor(eval(model.getValue("/root/tempData/CURLIST/record/c_roll")) / eval(car_roll_c));
											datagrid2.valueMatrix(j, datagrid2.colRef("wgt_c")) 	= eval(datagrid2.valueMatrix(j, datagrid2.colRef("roll_c"))) * eval(datagrid2.valueMatrix(j, datagrid2.colRef("roll_wgt_c")));
											datagrid2.cellStyle("background-color",j, datagrid2.colRef("roll_c")) = "#FFFFFF";
											datagrid2.cellStyle("background-color",j, datagrid2.colRef("car_c")) = "#FFFFFF";
											datagrid2.cellStyle("background-color",j, datagrid2.colRef("wgt_c")) = "#FFFFFF";
										}
										
										// 	제지사 배분을 하면 배분한 결과를 저장할 그리드에 넣는다.
										//	저장할 그리드에 정보가 있으면 업데이트 없으면 행추가해서 인서트.
										var same_a = 0;
										var same_b = 0;
										var same_c = 0;
										
										for (var k=1; k<datagrid4.rows; k++){
											if (datagrid4.valueMatrix(k, datagrid4.colRef("issu_dt")) == datagrid2.valueMatrix(j, datagrid2.colRef("issu_dt")) &&
												datagrid4.valueMatrix(k, datagrid4.colRef("papcmpy_cd")) == datagrid2.valueMatrix(j, datagrid2.colRef("papcmpy_cd")) &&
												datagrid4.valueMatrix(k, datagrid4.colRef("matr_cd")) == datagrid2.valueMatrix(j, datagrid2.colRef("matr_cd_a"))){
												same_a = k;
											}
										}
										
										if (same_a == 0){
											datagrid4.addRow(true, true);
											datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("issu_dt")) = datagrid2.valueMatrix(j, datagrid2.colRef("issu_dt"));
											datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("papcmpy_cd")) = datagrid2.valueMatrix(j, datagrid2.colRef("papcmpy_cd"));
											datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("matr_cd")) = datagrid2.valueMatrix(j, datagrid2.colRef("matr_cd_a"));
											datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("ord_roll")) = datagrid2.valueMatrix(j, datagrid2.colRef("roll_a"));
											datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("ord_wgt")) = datagrid2.valueMatrix(j, datagrid2.colRef("wgt_a"));
											datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("car_cnt")) = datagrid2.valueMatrix(j, datagrid2.colRef("car_a"));
										} else {
											datagrid4.valueMatrix(same_a, datagrid4.colRef("ord_roll")) = datagrid2.valueMatrix(j, datagrid2.colRef("roll_a"));
											datagrid4.valueMatrix(same_a, datagrid4.colRef("ord_wgt")) = datagrid2.valueMatrix(j, datagrid2.colRef("wgt_a"));
											datagrid4.valueMatrix(same_a, datagrid4.colRef("car_cnt")) = datagrid2.valueMatrix(j, datagrid2.colRef("car_a"));
											if (datagrid4.rowStatus(same_a) != 1){
												datagrid4.rowStatus(same_a) = 2;
											}
										}
										
										for (var k=1; k<datagrid4.rows; k++){
											if (datagrid4.valueMatrix(k, datagrid4.colRef("issu_dt")) == datagrid2.valueMatrix(j, datagrid2.colRef("issu_dt")) &&
												datagrid4.valueMatrix(k, datagrid4.colRef("papcmpy_cd")) == datagrid2.valueMatrix(j, datagrid2.colRef("papcmpy_cd")) &&
												datagrid4.valueMatrix(k, datagrid4.colRef("matr_cd")) == datagrid2.valueMatrix(j, datagrid2.colRef("matr_cd_b"))){
												same_b = k;
											}
										}
										
										if (same_b == 0){
											datagrid4.addRow(true, true);
											datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("issu_dt")) = datagrid2.valueMatrix(j, datagrid2.colRef("issu_dt"));
											datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("papcmpy_cd")) = datagrid2.valueMatrix(j, datagrid2.colRef("papcmpy_cd"));
											datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("matr_cd")) = datagrid2.valueMatrix(j, datagrid2.colRef("matr_cd_b"));
											datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("ord_roll")) = datagrid2.valueMatrix(j, datagrid2.colRef("roll_b"));
											datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("ord_wgt")) = datagrid2.valueMatrix(j, datagrid2.colRef("wgt_b"));
											datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("car_cnt")) = datagrid2.valueMatrix(j, datagrid2.colRef("car_b"));
										} else {
											datagrid4.valueMatrix(same_b, datagrid4.colRef("ord_roll")) = datagrid2.valueMatrix(j, datagrid2.colRef("roll_b"));
											datagrid4.valueMatrix(same_b, datagrid4.colRef("ord_wgt")) = datagrid2.valueMatrix(j, datagrid2.colRef("wgt_b"));
											datagrid4.valueMatrix(same_b, datagrid4.colRef("car_cnt")) = datagrid2.valueMatrix(j, datagrid2.colRef("car_b"));
											if (datagrid4.rowStatus(same_b) != 1){
												datagrid4.rowStatus(same_b) = 2;
											}
										}
										
										for (var k=1; k<datagrid4.rows; k++){
											if (datagrid4.valueMatrix(k, datagrid4.colRef("issu_dt")) == datagrid2.valueMatrix(j, datagrid2.colRef("issu_dt")) &&
												datagrid4.valueMatrix(k, datagrid4.colRef("papcmpy_cd")) == datagrid2.valueMatrix(j, datagrid2.colRef("papcmpy_cd")) &&
												datagrid4.valueMatrix(k, datagrid4.colRef("matr_cd")) == datagrid2.valueMatrix(j, datagrid2.colRef("matr_cd_c"))){
												same_c = k;
											}
										}
										
										if (same_c == 0){
											datagrid4.addRow(true, true);
											datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("issu_dt")) = datagrid2.valueMatrix(j, datagrid2.colRef("issu_dt"));
											datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("papcmpy_cd")) = datagrid2.valueMatrix(j, datagrid2.colRef("papcmpy_cd"));
											datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("matr_cd")) = datagrid2.valueMatrix(j, datagrid2.colRef("matr_cd_c"));
											datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("ord_roll")) = datagrid2.valueMatrix(j, datagrid2.colRef("roll_c"));
											datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("ord_wgt")) = datagrid2.valueMatrix(j, datagrid2.colRef("wgt_c"));
											datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("car_cnt")) = datagrid2.valueMatrix(j, datagrid2.colRef("car_c"));
										} else {
											datagrid4.valueMatrix(same_c, datagrid4.colRef("ord_roll")) = datagrid2.valueMatrix(j, datagrid2.colRef("roll_c"));
											datagrid4.valueMatrix(same_c, datagrid4.colRef("ord_wgt")) = datagrid2.valueMatrix(j, datagrid2.colRef("wgt_c"));
											datagrid4.valueMatrix(same_c, datagrid4.colRef("car_cnt")) = datagrid2.valueMatrix(j, datagrid2.colRef("car_c"));
											if (datagrid4.rowStatus(same_c) != 1){
												datagrid4.rowStatus(same_c) = 2;
											}
										}
										
										datagrid2.valueMatrix(j, datagrid2.colRef("mix_roll_a"))	= eval(model.getValue("/root/tempData/CURLIST/record/a_roll")) - eval(datagrid2.valueMatrix(j, datagrid2.colRef("roll_a")));
										datagrid2.valueMatrix(j, datagrid2.colRef("mix_roll_b"))	= eval(model.getValue("/root/tempData/CURLIST/record/b_roll")) - eval(datagrid2.valueMatrix(j, datagrid2.colRef("roll_b")));
										datagrid2.valueMatrix(j, datagrid2.colRef("mix_roll_c"))	= eval(model.getValue("/root/tempData/CURLIST/record/c_roll")) - eval(datagrid2.valueMatrix(j, datagrid2.colRef("roll_c")));
										
										datagrid2.valueMatrix(j, datagrid2.colRef("mix_wgt_a"))	= eval(datagrid2.valueMatrix(j, datagrid2.colRef("mix_roll_a"))) * eval(datagrid2.valueMatrix(j, datagrid2.colRef("roll_wgt_a")));
										datagrid2.valueMatrix(j, datagrid2.colRef("mix_wgt_b"))	= eval(datagrid2.valueMatrix(j, datagrid2.colRef("mix_roll_b"))) * eval(datagrid2.valueMatrix(j, datagrid2.colRef("roll_wgt_b")));
										datagrid2.valueMatrix(j, datagrid2.colRef("mix_wgt_c"))	= eval(datagrid2.valueMatrix(j, datagrid2.colRef("mix_roll_c"))) * eval(datagrid2.valueMatrix(j, datagrid2.colRef("roll_wgt_c")));
										
										var samemix_a = 0;
										var samemix_b = 0;
										var samemix_c = 0;
										
										for (var k=1; k<datagrid3.rows; k++){
											if (datagrid3.valueMatrix(k, datagrid3.colRef("issu_dt")) == datagrid2.valueMatrix(j, datagrid2.colRef("issu_dt")) &&
												datagrid3.valueMatrix(k, datagrid3.colRef("papcmpy_cd")) == datagrid2.valueMatrix(j, datagrid2.colRef("papcmpy_cd")) &&
												datagrid3.valueMatrix(k, datagrid3.colRef("matr_cd")) == datagrid2.valueMatrix(j, datagrid2.colRef("matr_cd_a"))){
												samemix_a = k;
											}
										}
										if (samemix_a == 0){
											datagrid3.addRow(true, true);
											datagrid3.valueMatrix(datagrid3.rows -1, datagrid3.colRef("issu_dt")) = datagrid2.valueMatrix(j, datagrid2.colRef("issu_dt"));
											datagrid3.valueMatrix(datagrid3.rows -1, datagrid3.colRef("papcmpy_cd")) = datagrid2.valueMatrix(j, datagrid2.colRef("papcmpy_cd"));
											datagrid3.valueMatrix(datagrid3.rows -1, datagrid3.colRef("matr_cd")) = datagrid2.valueMatrix(j, datagrid2.colRef("matr_cd_a"));
											datagrid3.valueMatrix(datagrid3.rows -1, datagrid3.colRef("roll_cnt")) = datagrid2.valueMatrix(j, datagrid2.colRef("mix_roll_a"));
											datagrid3.valueMatrix(datagrid3.rows -1, datagrid3.colRef("wgt")) = datagrid2.valueMatrix(j, datagrid2.colRef("mix_wgt_a"));
										} else {
											datagrid3.valueMatrix(samemix_a, datagrid3.colRef("roll_cnt")) = datagrid2.valueMatrix(j, datagrid2.colRef("mix_roll_a"));
											datagrid3.valueMatrix(samemix_a, datagrid3.colRef("wgt")) = datagrid2.valueMatrix(j, datagrid2.colRef("mix_wgt_a"));
											if (datagrid3.rowStatus(samemix_a) != 1){
												datagrid3.rowStatus(samemix_a) = 2;
											}
										}
										
										for (var k=1; k<datagrid3.rows; k++){
											if (datagrid3.valueMatrix(k, datagrid3.colRef("issu_dt")) == datagrid2.valueMatrix(j, datagrid2.colRef("issu_dt")) &&
												datagrid3.valueMatrix(k, datagrid3.colRef("papcmpy_cd")) == datagrid2.valueMatrix(j, datagrid2.colRef("papcmpy_cd")) &&
												datagrid3.valueMatrix(k, datagrid3.colRef("matr_cd")) == datagrid2.valueMatrix(j, datagrid2.colRef("matr_cd_b"))){
												samemix_b = k;
											}
										}
										if (samemix_b == 0){
											datagrid3.addRow(true, true);
											datagrid3.valueMatrix(datagrid3.rows -1, datagrid3.colRef("issu_dt")) = datagrid2.valueMatrix(j, datagrid2.colRef("issu_dt"));
											datagrid3.valueMatrix(datagrid3.rows -1, datagrid3.colRef("papcmpy_cd")) = datagrid2.valueMatrix(j, datagrid2.colRef("papcmpy_cd"));
											datagrid3.valueMatrix(datagrid3.rows -1, datagrid3.colRef("matr_cd")) = datagrid2.valueMatrix(j, datagrid2.colRef("matr_cd_b"));
											datagrid3.valueMatrix(datagrid3.rows -1, datagrid3.colRef("roll_cnt")) = datagrid2.valueMatrix(j, datagrid2.colRef("mix_roll_b"));
											datagrid3.valueMatrix(datagrid3.rows -1, datagrid3.colRef("wgt")) = datagrid2.valueMatrix(j, datagrid2.colRef("mix_wgt_b"));
										} else {
											datagrid3.valueMatrix(samemix_b, datagrid3.colRef("roll_cnt")) = datagrid2.valueMatrix(j, datagrid2.colRef("mix_roll_b"));
											datagrid3.valueMatrix(samemix_b, datagrid3.colRef("wgt")) = datagrid2.valueMatrix(j, datagrid2.colRef("mix_wgt_b"));
											if (datagrid3.rowStatus(samemix_b) != 1){
												datagrid3.rowStatus(samemix_b) = 2;
											}
										}
									
										for (var k=1; k<datagrid3.rows; k++){
											if (datagrid3.valueMatrix(k, datagrid3.colRef("issu_dt")) == datagrid2.valueMatrix(j, datagrid2.colRef("issu_dt")) &&
												datagrid3.valueMatrix(k, datagrid3.colRef("papcmpy_cd")) == datagrid2.valueMatrix(j, datagrid2.colRef("papcmpy_cd")) &&
												datagrid3.valueMatrix(k, datagrid3.colRef("matr_cd")) == datagrid2.valueMatrix(j, datagrid2.colRef("matr_cd_c"))){
												samemix_c = k;
											}
										}
										if (samemix_c == 0){
											datagrid3.addRow(true, true);
											datagrid3.valueMatrix(datagrid3.rows -1, datagrid3.colRef("issu_dt")) = datagrid2.valueMatrix(j, datagrid2.colRef("issu_dt"));
											datagrid3.valueMatrix(datagrid3.rows -1, datagrid3.colRef("papcmpy_cd")) = datagrid2.valueMatrix(j, datagrid2.colRef("papcmpy_cd"));
											datagrid3.valueMatrix(datagrid3.rows -1, datagrid3.colRef("matr_cd")) = datagrid2.valueMatrix(j, datagrid2.colRef("matr_cd_c"));
											datagrid3.valueMatrix(datagrid3.rows -1, datagrid3.colRef("roll_cnt")) = datagrid2.valueMatrix(j, datagrid2.colRef("mix_roll_c"));
											datagrid3.valueMatrix(datagrid3.rows -1, datagrid3.colRef("wgt")) = datagrid2.valueMatrix(j, datagrid2.colRef("mix_wgt_c"));
										} else {
											datagrid3.valueMatrix(samemix_c, datagrid3.colRef("roll_cnt")) = datagrid2.valueMatrix(j, datagrid2.colRef("mix_roll_c"));
											datagrid3.valueMatrix(samemix_c, datagrid3.colRef("wgt")) = datagrid2.valueMatrix(j, datagrid2.colRef("mix_wgt_c"));
											if (datagrid3.rowStatus(samemix_c) != 1){
												datagrid3.rowStatus(samemix_c) = 2;
											}
										}
									}
									
									for (var ii=datagrid1.fixedRows; ii<datagrid1.rows; ii++){
										var t_roll_a 		= 0;
										var t_wgt_a		= 0;
										var t_roll_b 		= 0;
										var t_wgt_b		= 0;
										var t_roll_c 		= 0;
										var t_wgt_c		= 0;
										var t_car_a		= 0;
										var t_car_b		= 0;
										var t_car_c		= 0;
										
										for (var jj=datagrid2.fixedRows; jj<datagrid2.rows; jj++){
											if (issu_dt == datagrid2.valueMatrix(jj, datagrid2.colRef("issu_dt"))){
												t_roll_a = t_roll_a + eval(datagrid2.valueMatrix(jj, datagrid2.colRef("roll_a"))) + eval(datagrid2.valueMatrix(jj, datagrid2.colRef("mix_roll_a")));
												t_wgt_a = t_wgt_a + eval(datagrid2.valueMatrix(jj, datagrid2.colRef("wgt_a"))) + eval(datagrid2.valueMatrix(jj, datagrid2.colRef("mix_wgt_a")));
												t_car_a = t_car_a + eval(datagrid2.valueMatrix(jj, datagrid2.colRef("car_a")));
				
												t_roll_b = t_roll_b + eval(datagrid2.valueMatrix(jj, datagrid2.colRef("roll_b"))) + eval(datagrid2.valueMatrix(jj, datagrid2.colRef("mix_roll_b")));
												t_wgt_b = t_wgt_b + eval(datagrid2.valueMatrix(jj, datagrid2.colRef("wgt_b"))) + eval(datagrid2.valueMatrix(jj, datagrid2.colRef("mix_wgt_b")));
												t_car_b = t_car_b + eval(datagrid2.valueMatrix(jj, datagrid2.colRef("car_b")));
				
												t_roll_c = t_roll_c + eval(datagrid2.valueMatrix(jj, datagrid2.colRef("roll_c"))) + eval(datagrid2.valueMatrix(jj, datagrid2.colRef("mix_roll_c")));
												t_wgt_c = t_wgt_c + eval(datagrid2.valueMatrix(jj, datagrid2.colRef("wgt_c"))) + eval(datagrid2.valueMatrix(jj, datagrid2.colRef("mix_wgt_c")));
												t_car_c = t_car_c + eval(datagrid2.valueMatrix(jj, datagrid2.colRef("car_c")));
											}
										}
										if (issu_dt == datagrid1.valueMatrix(ii, datagrid1.colRef("issu_dt"))) {
											datagrid1.valueMatrix(ii, datagrid1.colRef("ordr_roll_cnt_a")) = t_roll_a;
											datagrid1.valueMatrix(ii, datagrid1.colRef("ordr_roll_cnt_b")) = t_roll_b;
											datagrid1.valueMatrix(ii, datagrid1.colRef("ordr_roll_cnt_c")) = t_roll_c;
											datagrid1.valueMatrix(ii, datagrid1.colRef("ordr_wgt_a")) = t_wgt_a;
											datagrid1.valueMatrix(ii, datagrid1.colRef("ordr_wgt_b")) = t_wgt_b;
											datagrid1.valueMatrix(ii, datagrid1.colRef("ordr_wgt_c")) = t_wgt_c;
											
											f_makeResult(ii);
										
											f_makeResult2(ii);
										}
										
									}
									
								} else {
									
									//alert("02........" + datagrid1.valueMatrix(i, datagrid1.colRef("ordr_wgt_a")) + "\n" +datagrid2.valueMatrix((j-1), datagrid2.colRef("wgt_a")) )
									exp_wgt_a = first_ordr_wgt_a - eval(datagrid2.valueMatrix((j-1), datagrid2.colRef("wgt_a")));
									exp_wgt_b = first_ordr_wgt_b - eval(datagrid2.valueMatrix((j-1), datagrid2.colRef("wgt_b")));
									exp_wgt_c = first_ordr_wgt_c - eval(datagrid2.valueMatrix((j-1), datagrid2.colRef("wgt_c")));
									
									
									//alert("02....." +exp_wgt_a + "\n" + exp_wgt_b + "\n" + exp_wgt_c);
									if (exp_wgt_a <= 0){
										exp_roll_a = 0;
									} else {
										exp_roll_a = Math.ceil(exp_wgt_a / eval(datagrid2.valueMatrix(j, datagrid2.colRef("roll_wgt_a"))) );
									}
									if (exp_wgt_b <= 0){
										exp_roll_b = 0;
									} else {
										exp_roll_b = Math.ceil(exp_wgt_b / eval(datagrid2.valueMatrix(j, datagrid2.colRef("roll_wgt_b"))) );
									}
									if (exp_wgt_c <= 0){
										exp_roll_c = 0;
									} else {
										exp_roll_c = Math.ceil(exp_wgt_c / eval(datagrid2.valueMatrix(j, datagrid2.colRef("roll_wgt_c"))) );
									}
									
									if (exp_roll_a == 0 && exp_roll_b == 0 && exp_roll_c == 0){
										datagrid2.valueMatrix(j, datagrid2.colRef("roll_a")) = 0;
										datagrid2.valueMatrix(j, datagrid2.colRef("roll_b")) = 0;
										datagrid2.valueMatrix(j, datagrid2.colRef("roll_c")) = 0;
										
										datagrid2.valueMatrix(j, datagrid2.colRef("wgt_a")) = 0;
										datagrid2.valueMatrix(j, datagrid2.colRef("wgt_b")) = 0;
										datagrid2.valueMatrix(j, datagrid2.colRef("wgt_c")) = 0;
									} else {
										model.setValue("/root/reqData/searchData/roll_a", exp_roll_a);
										model.setValue("/root/reqData/searchData/roll_b", exp_roll_b);
										model.setValue("/root/reqData/searchData/roll_c", exp_roll_c);
										model.send("mt_papord_5008_l");
										
										if (model.getValue("/root/tempData/CURLIST/record/a_roll") == "0"){
											datagrid2.valueMatrix(j, datagrid2.colRef("roll_a")) 	= 0;
											datagrid2.valueMatrix(j, datagrid2.colRef("car_a"))	= 0;
											datagrid2.valueMatrix(j, datagrid2.colRef("wgt_a")) 	= 0;
										} else {
											datagrid2.valueMatrix(j, datagrid2.colRef("roll_a")) 	= (Math.floor(eval(model.getValue("/root/tempData/CURLIST/record/a_roll")) / eval(car_roll_a))) * eval(car_roll_a);
											datagrid2.valueMatrix(j, datagrid2.colRef("car_a"))	= Math.floor(eval(model.getValue("/root/tempData/CURLIST/record/a_roll")) / eval(car_roll_a));
											datagrid2.valueMatrix(j, datagrid2.colRef("wgt_a")) = eval(datagrid2.valueMatrix(j, datagrid2.colRef("roll_a"))) * eval(datagrid2.valueMatrix(j, datagrid2.colRef("roll_wgt_a")));
											
										}
										if (model.getValue("/root/tempData/CURLIST/record/b_roll") == "0"){
											datagrid2.valueMatrix(j, datagrid2.colRef("roll_b")) 	= 0;
											datagrid2.valueMatrix(j, datagrid2.colRef("car_b"))	= 0;
											datagrid2.valueMatrix(j, datagrid2.colRef("wgt_b")) 	= 0;
										
										} else {
											datagrid2.valueMatrix(j, datagrid2.colRef("roll_b")) 	= (Math.floor(eval(model.getValue("/root/tempData/CURLIST/record/b_roll")) / eval(car_roll_b))) * eval(car_roll_b);
											datagrid2.valueMatrix(j, datagrid2.colRef("car_b"))	= Math.floor(eval(model.getValue("/root/tempData/CURLIST/record/b_roll")) / eval(car_roll_b));
											datagrid2.valueMatrix(j, datagrid2.colRef("wgt_b")) = eval(datagrid2.valueMatrix(j, datagrid2.colRef("roll_b"))) * eval(datagrid2.valueMatrix(j, datagrid2.colRef("roll_wgt_b")));
											
										}
										if (model.getValue("/root/tempData/CURLIST/record/c_roll") == "0"){
											datagrid2.valueMatrix(j, datagrid2.colRef("roll_c")) 	= 0;
											datagrid2.valueMatrix(j, datagrid2.colRef("car_c"))	= 0;
											datagrid2.valueMatrix(j, datagrid2.colRef("wgt_c")) 	= 0;
										} else {
											datagrid2.valueMatrix(j, datagrid2.colRef("roll_c")) 	= (Math.floor(eval(model.getValue("/root/tempData/CURLIST/record/c_roll")) / eval(car_roll_c))) * eval(car_roll_c);
											datagrid2.valueMatrix(j, datagrid2.colRef("car_c"))	= Math.floor(eval(model.getValue("/root/tempData/CURLIST/record/c_roll")) / eval(car_roll_c));
											datagrid2.valueMatrix(j, datagrid2.colRef("wgt_c")) = eval(datagrid2.valueMatrix(j, datagrid2.colRef("roll_c"))) * eval(datagrid2.valueMatrix(j, datagrid2.colRef("roll_wgt_c")));
											
										}
										
										// 	제지사 배분을 하면 배분한 결과를 저장할 그리드에 넣는다.
										//	저장할 그리드에 정보가 있으면 업데이트 없으면 행추가해서 인서트.
										var same_a = 0;
										var same_b = 0;
										var same_c = 0;
										//	A권
										for (var k=1; k<datagrid4.rows; k++){
											if (datagrid4.valueMatrix(k, datagrid4.colRef("issu_dt")) == datagrid2.valueMatrix(j, datagrid2.colRef("issu_dt")) &&
												datagrid4.valueMatrix(k, datagrid4.colRef("papcmpy_cd")) == datagrid2.valueMatrix(j, datagrid2.colRef("papcmpy_cd")) &&
												datagrid4.valueMatrix(k, datagrid4.colRef("matr_cd")) == datagrid2.valueMatrix(j, datagrid2.colRef("matr_cd_a"))){
												same_a = k;
											}
										}
										if (same_a == 0){
											datagrid4.addRow(true, true);
											datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("issu_dt")) = datagrid2.valueMatrix(j, datagrid2.colRef("issu_dt"));
											datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("papcmpy_cd")) = datagrid2.valueMatrix(j, datagrid2.colRef("papcmpy_cd"));
											datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("matr_cd")) = datagrid2.valueMatrix(j, datagrid2.colRef("matr_cd_a"));
											datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("ord_roll")) = datagrid2.valueMatrix(j, datagrid2.colRef("roll_a"));
											datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("ord_wgt")) = datagrid2.valueMatrix(j, datagrid2.colRef("wgt_a"));
											datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("car_cnt")) = datagrid2.valueMatrix(j, datagrid2.colRef("car_a"));
										} else {
											datagrid4.valueMatrix(same_a, datagrid4.colRef("ord_roll")) = datagrid2.valueMatrix(j, datagrid2.colRef("roll_a"));
											datagrid4.valueMatrix(same_a, datagrid4.colRef("ord_wgt")) = datagrid2.valueMatrix(j, datagrid2.colRef("wgt_a"));
											datagrid4.valueMatrix(same_a, datagrid4.colRef("car_cnt")) = datagrid2.valueMatrix(j, datagrid2.colRef("car_a"));
											if (datagrid4.rowStatus(same_a) != 1){
												datagrid4.rowStatus(same_a) = 2;
											}
											
										}
										//	B권
										for (var k=1; k<datagrid4.rows; k++){
											if (datagrid4.valueMatrix(k, datagrid4.colRef("issu_dt")) == datagrid2.valueMatrix(j, datagrid2.colRef("issu_dt")) &&
												datagrid4.valueMatrix(k, datagrid4.colRef("papcmpy_cd")) == datagrid2.valueMatrix(j, datagrid2.colRef("papcmpy_cd")) &&
												datagrid4.valueMatrix(k, datagrid4.colRef("matr_cd")) == datagrid2.valueMatrix(j, datagrid2.colRef("matr_cd_b"))){
												same_b = k;
											}
										}
										if (same_b == 0){
											datagrid4.addRow(true, true);
											datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("issu_dt")) = datagrid2.valueMatrix(j, datagrid2.colRef("issu_dt"));
											datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("papcmpy_cd")) = datagrid2.valueMatrix(j, datagrid2.colRef("papcmpy_cd"));
											datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("matr_cd")) = datagrid2.valueMatrix(j, datagrid2.colRef("matr_cd_b"));
											datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("ord_roll")) = datagrid2.valueMatrix(j, datagrid2.colRef("roll_b"));
											datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("ord_wgt")) = datagrid2.valueMatrix(j, datagrid2.colRef("wgt_b"));
											datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("car_cnt")) = datagrid2.valueMatrix(j, datagrid2.colRef("car_b"));
										} else {
											datagrid4.valueMatrix(same_b, datagrid4.colRef("ord_roll")) = datagrid2.valueMatrix(j, datagrid2.colRef("roll_b"));
											datagrid4.valueMatrix(same_b, datagrid4.colRef("ord_wgt")) = datagrid2.valueMatrix(j, datagrid2.colRef("wgt_b"));
											datagrid4.valueMatrix(same_b, datagrid4.colRef("car_cnt")) = datagrid2.valueMatrix(j, datagrid2.colRef("car_b"));
											if (datagrid4.rowStatus(same_b) != 1){
												datagrid4.rowStatus(same_b) = 2;
											}
										}
										//	C권
										for (var k=1; k<datagrid4.rows; k++){
											if (datagrid4.valueMatrix(k, datagrid4.colRef("issu_dt")) == datagrid2.valueMatrix(j, datagrid2.colRef("issu_dt")) &&
												datagrid4.valueMatrix(k, datagrid4.colRef("papcmpy_cd")) == datagrid2.valueMatrix(j, datagrid2.colRef("papcmpy_cd")) &&
												datagrid4.valueMatrix(k, datagrid4.colRef("matr_cd")) == datagrid2.valueMatrix(j, datagrid2.colRef("matr_cd_c"))){
												same_c = k;
											}
										}
										if (same_c == 0){
											datagrid4.addRow(true, true);
											datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("issu_dt")) = datagrid2.valueMatrix(j, datagrid2.colRef("issu_dt"));
											datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("papcmpy_cd")) = datagrid2.valueMatrix(j, datagrid2.colRef("papcmpy_cd"));
											datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("matr_cd")) = datagrid2.valueMatrix(j, datagrid2.colRef("matr_cd_c"));
											datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("ord_roll")) = datagrid2.valueMatrix(j, datagrid2.colRef("roll_c"));
											datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("ord_wgt")) = datagrid2.valueMatrix(j, datagrid2.colRef("wgt_c"));
											datagrid4.valueMatrix(datagrid4.rows -1, datagrid4.colRef("car_cnt")) = datagrid2.valueMatrix(j, datagrid2.colRef("car_c"));
										} else {
											datagrid4.valueMatrix(same_c, datagrid4.colRef("ord_roll")) = datagrid2.valueMatrix(j, datagrid2.colRef("roll_c"));
											datagrid4.valueMatrix(same_c, datagrid4.colRef("ord_wgt")) = datagrid2.valueMatrix(j, datagrid2.colRef("wgt_c"));
											datagrid4.valueMatrix(same_c, datagrid4.colRef("car_cnt")) = datagrid2.valueMatrix(j, datagrid2.colRef("car_c"));
											if (datagrid4.rowStatus(same_c) != 1){
												datagrid4.rowStatus(same_c) = 2;
											}
										}
										
										datagrid2.valueMatrix(j, datagrid2.colRef("mix_roll_a"))	= eval(model.getValue("/root/tempData/CURLIST/record/a_roll")) - eval(datagrid2.valueMatrix(j, datagrid2.colRef("roll_a")));
										datagrid2.valueMatrix(j, datagrid2.colRef("mix_roll_b"))	= eval(model.getValue("/root/tempData/CURLIST/record/b_roll")) - eval(datagrid2.valueMatrix(j, datagrid2.colRef("roll_b")));
										datagrid2.valueMatrix(j, datagrid2.colRef("mix_roll_c"))	= eval(model.getValue("/root/tempData/CURLIST/record/c_roll")) - eval(datagrid2.valueMatrix(j, datagrid2.colRef("roll_c")));
										
										datagrid2.valueMatrix(j, datagrid2.colRef("mix_wgt_a"))	= eval(datagrid2.valueMatrix(j, datagrid2.colRef("mix_roll_a"))) * eval(datagrid2.valueMatrix(j, datagrid2.colRef("roll_wgt_a")));
										datagrid2.valueMatrix(j, datagrid2.colRef("mix_wgt_b"))	= eval(datagrid2.valueMatrix(j, datagrid2.colRef("mix_roll_b"))) * eval(datagrid2.valueMatrix(j, datagrid2.colRef("roll_wgt_b")));
										datagrid2.valueMatrix(j, datagrid2.colRef("mix_wgt_c"))	= eval(datagrid2.valueMatrix(j, datagrid2.colRef("mix_roll_c"))) * eval(datagrid2.valueMatrix(j, datagrid2.colRef("roll_wgt_c")));
										
										// 	제지사 배분을 하면 배분한 결과를 저장할 혼합발주 그리드에 넣는다.
										//	저장할 그리드에 정보가 있으면 업데이트 없으면 행추가해서 인서트.
										var samemix_a = 0;
										var samemix_b = 0;
										var samemix_c = 0;
										//	A권
										for (var k=1; k<datagrid3.rows; k++){
											if (datagrid3.valueMatrix(k, datagrid3.colRef("issu_dt")) == datagrid2.valueMatrix(j, datagrid2.colRef("issu_dt")) &&
												datagrid3.valueMatrix(k, datagrid3.colRef("papcmpy_cd")) == datagrid2.valueMatrix(j, datagrid2.colRef("papcmpy_cd")) &&
												datagrid3.valueMatrix(k, datagrid3.colRef("matr_cd")) == datagrid2.valueMatrix(j, datagrid2.colRef("matr_cd_a"))){
												samemix_a = k;
											}
										}
										if (samemix_a == 0){
											datagrid3.addRow(true, true);
											datagrid3.valueMatrix(datagrid3.rows -1, datagrid3.colRef("issu_dt")) = datagrid2.valueMatrix(j, datagrid2.colRef("issu_dt"));
											datagrid3.valueMatrix(datagrid3.rows -1, datagrid3.colRef("papcmpy_cd")) = datagrid2.valueMatrix(j, datagrid2.colRef("papcmpy_cd"));
											datagrid3.valueMatrix(datagrid3.rows -1, datagrid3.colRef("matr_cd")) = datagrid2.valueMatrix(j, datagrid2.colRef("matr_cd_a"));
											datagrid3.valueMatrix(datagrid3.rows -1, datagrid3.colRef("roll_cnt")) = datagrid2.valueMatrix(j, datagrid2.colRef("mix_roll_a"));
											datagrid3.valueMatrix(datagrid3.rows -1, datagrid3.colRef("wgt")) = datagrid2.valueMatrix(j, datagrid2.colRef("mix_wgt_a"));
										} else {
											datagrid3.valueMatrix(samemix_a, datagrid3.colRef("roll_cnt")) = datagrid2.valueMatrix(j, datagrid2.colRef("mix_roll_a"));
											datagrid3.valueMatrix(samemix_a, datagrid3.colRef("wgt")) = datagrid2.valueMatrix(j, datagrid2.colRef("mix_wgt_a"));
											if (datagrid3.rowStatus(samemix_a) != 1){
												datagrid3.rowStatus(samemix_a) = 2;
											}
										}
										//	B권
										for (var k=1; k<datagrid3.rows; k++){
											if (datagrid3.valueMatrix(k, datagrid3.colRef("issu_dt")) == datagrid2.valueMatrix(j, datagrid2.colRef("issu_dt")) &&
												datagrid3.valueMatrix(k, datagrid3.colRef("papcmpy_cd")) == datagrid2.valueMatrix(j, datagrid2.colRef("papcmpy_cd")) &&
												datagrid3.valueMatrix(k, datagrid3.colRef("matr_cd")) == datagrid2.valueMatrix(j, datagrid2.colRef("matr_cd_b"))){
												samemix_b = k;
											}
										}
										if (samemix_b == 0){
											datagrid3.addRow(true, true);
											datagrid3.valueMatrix(datagrid3.rows -1, datagrid3.colRef("issu_dt")) = datagrid2.valueMatrix(j, datagrid2.colRef("issu_dt"));
											datagrid3.valueMatrix(datagrid3.rows -1, datagrid3.colRef("papcmpy_cd")) = datagrid2.valueMatrix(j, datagrid2.colRef("papcmpy_cd"));
											datagrid3.valueMatrix(datagrid3.rows -1, datagrid3.colRef("matr_cd")) = datagrid2.valueMatrix(j, datagrid2.colRef("matr_cd_b"));
											datagrid3.valueMatrix(datagrid3.rows -1, datagrid3.colRef("roll_cnt")) = datagrid2.valueMatrix(j, datagrid2.colRef("mix_roll_b"));
											datagrid3.valueMatrix(datagrid3.rows -1, datagrid3.colRef("wgt")) = datagrid2.valueMatrix(j, datagrid2.colRef("mix_wgt_b"));
										} else {
											datagrid3.valueMatrix(samemix_b, datagrid3.colRef("roll_cnt")) = datagrid2.valueMatrix(j, datagrid2.colRef("mix_roll_b"));
											datagrid3.valueMatrix(samemix_b, datagrid3.colRef("wgt")) = datagrid2.valueMatrix(j, datagrid2.colRef("mix_wgt_b"));
											if (datagrid3.rowStatus(samemix_b) != 1){
												datagrid3.rowStatus(samemix_b) = 2;
											}
										}
										//	C권
										for (var k=1; k<datagrid3.rows; k++){
											if (datagrid3.valueMatrix(k, datagrid3.colRef("issu_dt")) == datagrid2.valueMatrix(j, datagrid2.colRef("issu_dt")) &&
												datagrid3.valueMatrix(k, datagrid3.colRef("papcmpy_cd")) == datagrid2.valueMatrix(j, datagrid2.colRef("papcmpy_cd")) &&
												datagrid3.valueMatrix(k, datagrid3.colRef("matr_cd")) == datagrid2.valueMatrix(j, datagrid2.colRef("matr_cd_c"))){
												samemix_c = k;
											}
										}
										if (samemix_c == 0){
											datagrid3.addRow(true, true);
											datagrid3.valueMatrix(datagrid3.rows -1, datagrid3.colRef("issu_dt")) = datagrid2.valueMatrix(j, datagrid2.colRef("issu_dt"));
											datagrid3.valueMatrix(datagrid3.rows -1, datagrid3.colRef("papcmpy_cd")) = datagrid2.valueMatrix(j, datagrid2.colRef("papcmpy_cd"));
											datagrid3.valueMatrix(datagrid3.rows -1, datagrid3.colRef("matr_cd")) = datagrid2.valueMatrix(j, datagrid2.colRef("matr_cd_c"));
											datagrid3.valueMatrix(datagrid3.rows -1, datagrid3.colRef("roll_cnt")) = datagrid2.valueMatrix(j, datagrid2.colRef("mix_roll_c"));
											datagrid3.valueMatrix(datagrid3.rows -1, datagrid3.colRef("wgt")) = datagrid2.valueMatrix(j, datagrid2.colRef("mix_wgt_c"));
										} else {
											datagrid3.valueMatrix(samemix_c, datagrid3.colRef("roll_cnt")) = datagrid2.valueMatrix(j, datagrid2.colRef("mix_roll_c"));
											datagrid3.valueMatrix(samemix_c, datagrid3.colRef("wgt")) = datagrid2.valueMatrix(j, datagrid2.colRef("mix_wgt_c"));
											if (datagrid3.rowStatus(samemix_c) != 1){
												datagrid3.rowStatus(samemix_c) = 2;
											}
										}
									}
									
									for (var ii=datagrid1.fixedRows; ii<datagrid1.rows; ii++){
										var t_roll_a 		= 0;
										var t_wgt_a		= 0;
										var t_roll_b 		= 0;
										var t_wgt_b		= 0;
										var t_roll_c 		= 0;
										var t_wgt_c		= 0;
										var t_car_a		= 0;
										var t_car_b		= 0;
										var t_car_c		= 0;
										
										for (var jj=datagrid2.fixedRows; jj<datagrid2.rows; jj++){
											if (issu_dt == datagrid2.valueMatrix(jj, datagrid2.colRef("issu_dt"))){
												t_roll_a = t_roll_a + eval(datagrid2.valueMatrix(jj, datagrid2.colRef("roll_a"))) + eval(datagrid2.valueMatrix(jj, datagrid2.colRef("mix_roll_a")));
												t_wgt_a = t_wgt_a + eval(datagrid2.valueMatrix(jj, datagrid2.colRef("wgt_a"))) + eval(datagrid2.valueMatrix(jj, datagrid2.colRef("mix_wgt_a")));
												t_car_a = t_car_a + eval(datagrid2.valueMatrix(jj, datagrid2.colRef("car_a")));
				
												t_roll_b = t_roll_b + eval(datagrid2.valueMatrix(jj, datagrid2.colRef("roll_b"))) + eval(datagrid2.valueMatrix(jj, datagrid2.colRef("mix_roll_b")));
												t_wgt_b = t_wgt_b + eval(datagrid2.valueMatrix(jj, datagrid2.colRef("wgt_b"))) + eval(datagrid2.valueMatrix(jj, datagrid2.colRef("mix_wgt_b")));
												t_car_b = t_car_b + eval(datagrid2.valueMatrix(jj, datagrid2.colRef("car_b")));
				
												t_roll_c = t_roll_c + eval(datagrid2.valueMatrix(jj, datagrid2.colRef("roll_c"))) + eval(datagrid2.valueMatrix(jj, datagrid2.colRef("mix_roll_c")));
												t_wgt_c = t_wgt_c + eval(datagrid2.valueMatrix(jj, datagrid2.colRef("wgt_c"))) + eval(datagrid2.valueMatrix(jj, datagrid2.colRef("mix_wgt_c")));
												t_car_c = t_car_c + eval(datagrid2.valueMatrix(jj, datagrid2.colRef("car_c")));
											}
										}
										if (issu_dt == datagrid1.valueMatrix(ii, datagrid1.colRef("issu_dt"))) {
											datagrid1.valueMatrix(ii, datagrid1.colRef("ordr_roll_cnt_a")) = t_roll_a;
											datagrid1.valueMatrix(ii, datagrid1.colRef("ordr_roll_cnt_b")) = t_roll_b;
											datagrid1.valueMatrix(ii, datagrid1.colRef("ordr_roll_cnt_c")) = t_roll_c;
											datagrid1.valueMatrix(ii, datagrid1.colRef("ordr_wgt_a")) = t_wgt_a;
											datagrid1.valueMatrix(ii, datagrid1.colRef("ordr_wgt_b")) = t_wgt_b;
											datagrid1.valueMatrix(ii, datagrid1.colRef("ordr_wgt_c")) = t_wgt_c;
											
											f_makeResult(ii);
										
											f_makeResult2(ii);
										}
										
									}
									//funJGResult();
								}
							}
						}	// for datagrid2
					}	// for datagrid1
					
					//	제지사 배분한 발주정보를 상단의 발주마스터 그리드에 업데이트한다.
					//	업데이트 하고 난 다음에 재고를 다시 설정한다.
					/*
					for (var i=datagrid1.fixedRows; i<datagrid1.rows; i++){
						var t_roll_a 		= 0;
						var t_wgt_a		= 0;
						var t_roll_b 		= 0;
						var t_wgt_b		= 0;
						var t_roll_c 		= 0;
						var t_wgt_c		= 0;
						var t_car_a		= 0;
						var t_car_b		= 0;
						var t_car_c		= 0;
						
						for (var j=datagrid2.fixedRows; j<datagrid2.rows; j++){
							if (datagrid1.valueMatrix(i, datagrid1.colRef("issu_dt")) == datagrid2.valueMatrix(j, datagrid2.colRef("issu_dt"))){
								t_roll_a = t_roll_a + eval(datagrid2.valueMatrix(j, datagrid2.colRef("roll_a"))) + eval(datagrid2.valueMatrix(j, datagrid2.colRef("mix_roll_a")));
								t_wgt_a = t_wgt_a + eval(datagrid2.valueMatrix(j, datagrid2.colRef("wgt_a"))) + eval(datagrid2.valueMatrix(j, datagrid2.colRef("mix_wgt_a")));
								t_car_a = t_car_a + eval(datagrid2.valueMatrix(j, datagrid2.colRef("car_a")));

								t_roll_b = t_roll_b + eval(datagrid2.valueMatrix(j, datagrid2.colRef("roll_b"))) + eval(datagrid2.valueMatrix(j, datagrid2.colRef("mix_roll_b")));
								t_wgt_b = t_wgt_b + eval(datagrid2.valueMatrix(j, datagrid2.colRef("wgt_b"))) + eval(datagrid2.valueMatrix(j, datagrid2.colRef("mix_wgt_b")));
								t_car_b = t_car_b + eval(datagrid2.valueMatrix(j, datagrid2.colRef("car_b")));

								t_roll_c = t_roll_c + eval(datagrid2.valueMatrix(j, datagrid2.colRef("roll_c"))) + eval(datagrid2.valueMatrix(j, datagrid2.colRef("mix_roll_c")));
								t_wgt_c = t_wgt_c + eval(datagrid2.valueMatrix(j, datagrid2.colRef("wgt_c"))) + eval(datagrid2.valueMatrix(j, datagrid2.colRef("mix_wgt_c")));
								t_car_c = t_car_c + eval(datagrid2.valueMatrix(j, datagrid2.colRef("car_c")));
							}
						}
						datagrid1.valueMatrix(i, datagrid1.colRef("ordr_roll_cnt_a")) = t_roll_a;
						datagrid1.valueMatrix(i, datagrid1.colRef("ordr_roll_cnt_b")) = t_roll_b;
						datagrid1.valueMatrix(i, datagrid1.colRef("ordr_roll_cnt_c")) = t_roll_c;
						datagrid1.valueMatrix(i, datagrid1.colRef("ordr_wgt_a")) = t_wgt_a;
						datagrid1.valueMatrix(i, datagrid1.colRef("ordr_wgt_b")) = t_wgt_b;
						datagrid1.valueMatrix(i, datagrid1.colRef("ordr_wgt_c")) = t_wgt_c;
					}
					funJGResult();
					*/
					
					//	제지사 배분한 발주정보를 하단의 발주합계 폼에 업데이트한다.
					var a_roll_a 	= 0;
					var a_wgt_a	= 0;
					var a_car_a	= 0;
					var a_roll_b 	= 0;
					var a_wgt_b	= 0;
					var a_car_b	= 0;
					var a_roll_c 	= 0;
					var a_wgt_c	= 0;
					var a_car_c	= 0;
					
					for (var j=datagrid2.fixedRows; j<datagrid2.rows; j++){
						a_roll_a = a_roll_a + eval(datagrid2.valueMatrix(j, datagrid2.colRef("roll_a"))) + eval(datagrid2.valueMatrix(j, datagrid2.colRef("mix_roll_a")));
						a_wgt_a = a_wgt_a + eval(datagrid2.valueMatrix(j, datagrid2.colRef("wgt_a"))) + eval(datagrid2.valueMatrix(j, datagrid2.colRef("mix_wgt_a")));
						a_car_a = a_car_a + eval(datagrid2.valueMatrix(j, datagrid2.colRef("car_a")));

						a_roll_b = a_roll_b + eval(datagrid2.valueMatrix(j, datagrid2.colRef("roll_b"))) + eval(datagrid2.valueMatrix(j, datagrid2.colRef("mix_roll_b")));
						a_wgt_b = a_wgt_b + eval(datagrid2.valueMatrix(j, datagrid2.colRef("wgt_b"))) + eval(datagrid2.valueMatrix(j, datagrid2.colRef("mix_wgt_b")));
						a_car_b = a_car_b + eval(datagrid2.valueMatrix(j, datagrid2.colRef("car_b")));

						a_roll_c = a_roll_c + eval(datagrid2.valueMatrix(j, datagrid2.colRef("roll_c"))) + eval(datagrid2.valueMatrix(j, datagrid2.colRef("mix_roll_c")));
						a_wgt_c = a_wgt_c + eval(datagrid2.valueMatrix(j, datagrid2.colRef("wgt_c"))) + eval(datagrid2.valueMatrix(j, datagrid2.colRef("mix_wgt_c")));
						a_car_c = a_car_c + eval(datagrid2.valueMatrix(j, datagrid2.colRef("car_c")));
					}
					
					model.setValue("/root/resData/gridData2_sum/sum_ordr_roll_cnt_a", a_roll_a);
					model.setValue("/root/resData/gridData2_sum/sum_ordr_roll_cnt_b", a_roll_b);
					model.setValue("/root/resData/gridData2_sum/sum_ordr_roll_cnt_c", a_roll_c);
						
					model.setValue("/root/resData/gridData2_sum/sum_ordr_wgt_a", a_wgt_a);
					model.setValue("/root/resData/gridData2_sum/sum_ordr_wgt_b", a_wgt_b);
					model.setValue("/root/resData/gridData2_sum/sum_ordr_wgt_c", a_wgt_c);
					
					group5.refresh();
					/*	
					datagrid1.colHidden(datagrid1.colRef("ordr_roll_cnt_a")) 	= true;
					datagrid1.colHidden(datagrid1.colRef("ordr_wgt_a")) 		= true;
					datagrid1.colHidden(datagrid1.colRef("ordr_roll_cnt_b")) 	= true;
					datagrid1.colHidden(datagrid1.colRef("ordr_wgt_b")) 		= true;
					datagrid1.colHidden(datagrid1.colRef("ordr_roll_cnt_c")) 	= true;
					datagrid1.colHidden(datagrid1.colRef("ordr_wgt_c")) 		= true;
						
					datagrid1.colHidden(datagrid1.colRef("fix_roll_cnt_a")) 	= false;
					datagrid1.colHidden(datagrid1.colRef("fix_wgt_a")) 		= false;
					datagrid1.colHidden(datagrid1.colRef("fix_roll_cnt_b")) 	= false;
					datagrid1.colHidden(datagrid1.colRef("fix_wgt_b")) 		= false;
					datagrid1.colHidden(datagrid1.colRef("fix_roll_cnt_c")) 	= false;
					datagrid1.colHidden(datagrid1.colRef("fix_wgt_c")) 		= false;
					*/
					]]>
				</script>
			</button>
		</group>
		<datagrid id="datagrid4" nodeset="/root/resData/gridData4/record" visibility="hidden" caption="발주일^제지사^자재코드^예상롤^예상중량^소모롤^소모중량^대수" colsep="#" colwidth="70, 60, 50, 50, 50, 50, 50, 50" mergecellsfixedrows="bycolrec" rowheader="update" rowsep="|" style="left:10px; top:320px; width:330px; height:125px; ">
			<col ref="issu_dt"/>
			<col ref="papcmpy_cd"/>
			<col ref="matr_cd"/>
			<col ref="somo_roll"/>
			<col ref="somo_wgt"/>
			<col ref="ord_roll"/>
			<col ref="ord_wgt"/>
			<col ref="car_cnt"/>
		</datagrid>
		<datagrid id="datagrid3" nodeset="/root/resData/gridData3/record" visibility="hidden" caption="발주일^자재코드^제지사^롤^중량" colsep="#" colwidth="70, 55, 55, 40, 50" mergecellsfixedrows="bycolrec" rowheader="update" rowsep="|" selectionmode="free" style="left:355px; top:320px; width:250px; height:125px; ">
			<col ref="issu_dt"/>
			<col ref="matr_cd"/>
			<col ref="papcmpy_cd"/>
			<col ref="roll_cnt"/>
			<col ref="wgt"/>
		</datagrid>
		<group id="group5" style="left:10px; top:680px; width:925px; height:30px; ">
			<caption id="caption9" class="list_cap02" style="left:69px; top:0px; width:855px; height:24px; text-align:center; "/>
			<output id="output22" ref="/root/resData/gridData2_sum/sum_ordr_roll_cnt_a" format="#,###" style="left:75px; top:3px; width:48px; height:18px; text-align:right; "/>
			<output id="output23" ref="/root/resData/gridData2_sum/sum_ordr_wgt_a" format="#,###" style="left:135px; top:3px; width:58px; height:18px; text-align:right; "/>
			<output id="output16" ref="/root/resData/gridData2_sum/sum_ordr_roll_cnt_b" format="#,###" style="left:390px; top:3px; width:48px; height:18px; text-align:right; "/>
			<output id="output18" ref="/root/resData/gridData2_sum/sum_ordr_wgt_b" format="#,###" style="left:447px; top:3px; width:58px; height:18px; text-align:right; "/>
			<output id="output15" ref="/root/resData/gridData2_sum/sum_ordr_roll_cnt_c" format="#,###" style="left:695px; top:3px; width:48px; height:18px; text-align:right; "/>
			<output id="output17" ref="/root/resData/gridData2_sum/sum_ordr_wgt_c" format="#,###" style="left:753px; top:3px; width:58px; height:18px; text-align:right; "/>
			<caption id="caption7" class="list_cap01" style="left:0px; top:0px; width:70px; height:24px; text-align:center; ">A권</caption>
			<caption id="caption8" class="list_cap01" style="left:315px; top:0px; width:70px; height:24px; text-align:center; ">B권</caption>
			<caption id="caption6" class="list_cap01" style="left:620px; top:0px; width:70px; height:24px; text-align:center; ">C권</caption>
		</group>
	</xhtml:body>
</xhtml:html>

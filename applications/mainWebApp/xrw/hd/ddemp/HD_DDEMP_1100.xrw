<?xml version="1.0" encoding="EUC-KR"?>
<?xml-stylesheet type="text/css" href="../../../css/style_sheet.css" ?>
<xhtml:html xmlns:ex="http://www.comsquare.co.kr/xforms/excel" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:ms="urn:schemas-microsoft-com:xslt" xmlns:my="http://www.comsquare.co.kr/example" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/2002/01/xforms" xmlns:ev="http://www.w3.org/2001/xml-events" xmlns:cs="http://www.comsquare.co.kr/xforms">
	<xhtml:head>
		<xhtml:title>Untitle</xhtml:title>
		<model id="model1">
			<instance id="instance1">
				<root xmlns="">
					<initData>
						<hd_ddemp_1107_m>
							<dataSet>
								<xx_proc_clsf_010/>
								<xx_proc_clsf_020/>
								<xx_proc_clsf_030/>
								<xx_proc_clsf_040/>
								<xx_job_clsf_00/>
								<xx_cd_clsf_010/>
								<xx_cd_clsf_020/>
								<xx_job_clsf_03/>
								<xx_cd_clsf_030/>
								<xx_medi_cd_010/>
							</dataSet>
						</hd_ddemp_1107_m>
						<!-- 화면 로딩시의 초기 데이터를 담당 -->
						<session/>
						<!-- 서버의 세션 정보를 담당한다 -->
						<comboSet>
							<octgr_cd>
								<item>
									<label/>
									<value/>
								</item>
							</octgr_cd>
							<lve_job_resn_cd>
								<item>
									<label/>
									<value/>
								</item>
							</lve_job_resn_cd>
							<!-- 선택계열의 정보를 담당 -->
						</comboSet>
						<!-- 콤보리스트와 같은 선택게열의 데이터는 <item>을 반복함으로써 list를 구성한다. -->
						<pageInfo>
							<!-- 해당 화면의 필요한 기타 정보들을 추가운영 할 수 있다 -->
						</pageInfo>
						<!-- 해당 화면의 필요한 기타 정보들을 추가운영 할 수 있다 -->
					</initData>
					<reqData>
						<!-- 전달하고자 하는 데이터를 담당 ( submit 함수에서 처리) -->
						<!-- 검색조건 처리 -->
						<reqForm>
							<pay_amt/>
							<cntr_amt/>
						</reqForm>
						<!-- formData 팝업,화면전환시 data이동시 -->
						<!-- MultiUpDate유형 사용시 처리 -->
						<searchData>
							<dept_cd/>
							<s_duty_yymm/>
							<emp_no/>
							<cmpy_cd/>
							<proc_stat_clsf>50</proc_stat_clsf>
							<actu_slip_no/>
							<budg_cd/>
							<budg_nm/>
							<mode/>
							<gubun>2</gubun>
						</searchData>
						<fwdData>
							<func_nm/>
						</fwdData>
						<multiUpData/>
						<paidhodyData>
							<paidhody_cnt/>
						</paidhodyData>
						<gridSearchData>
							<ern/>
							<dlco_nm/>
							<dlco_no/>
						</gridSearchData>
						<mediSearchData>
							<budg_cd/>
							<medi_cd/>
						</mediSearchData>
						<gubun/>
					</reqData>
					<resData>
						<!-- 전달 받은 데이터를 담당 ( submit의 결과가 담김) -->
						<resForm>
							<temp/>
						</resForm>
						<!-- 전달 받은 formData를 담당 ( submit의 결과가 담김) -->
						<!-- 전달 받은 데이터를 가공할 임시저장소 ( submit의 결과가 담김) -->
						<msg/>
						<!-- 전달 받은 errorCode를 담당 ( submit의 결과가 담김) -->
						<!-- 전달 받은 errorMsg를 담당 ( submit의 결과가 담김) -->
						<gridData>
							<!-- 전달 받은 grid데이터를 담당 ( submit의 결과가 담김) -->
							<record>
								<chk/>
								<prn/>
								<flnm/>
								<studt_wk_yn/>
								<ptph_no/>
								<emp_insr_dduc_yn/>
								<octgr_cd/>
								<lve_job_resn_cd/>
								<avg_duty_tm/>
								<day01/>
								<day02/>
								<day03/>
								<day04/>
								<day05/>
								<day06/>
								<day07/>
								<day08/>
								<day09/>
								<day10/>
								<day11/>
								<day12/>
								<day13/>
								<day14/>
								<day15/>
								<day16/>
								<day17/>
								<day18/>
								<day19/>
								<day20/>
								<day21/>
								<day22/>
								<day23/>
								<day24/>
								<day25/>
								<day26/>
								<day27/>
								<day28/>
								<day29/>
								<day30/>
								<day31/>
								<pay_amt/>
								<hlth_insr_fee/>
								<np_fee/>
								<dd_amt/>
								<time_amt/>
								<budg_nm/>
								<rcpt_clsf_nm/>
								<medi_nm/>
								<use_dept_nm/>
								<rmks/>
								<evnt_nm/>
								<actu_slip_no/>
								<emp_insr_fee/>
								<hd_decid_pers/>
								<hd_decid_dt_tm/>
								<duty_dds/>
								<clos_yn/>
								<clos_dt/>
								<incm_tax/>
								<res_tax/>
								<budg_cd/>
								<rcpt_clsf/>
								<medi_cd/>
								<use_dept_cd/>
								<evnt_cd/>
								<cmpy_cd/>
								<mang_no/>
								<occr_dt/>
								<seq/>
								<duty_yymm/>
								<slip_proc_mang_dt/>
								<slip_proc_mang_seq/>
								<proc_clsf/>
								<dtls_medi_cd/>
								<dtls_medi_nm/>
								<medi_cnt/>
								<budg_cnt/>
								<hlth_insr_med_care_insr_fee/>
								<all_insr_dduc_yn/>
								<cntr_amt/>
							</record>
							<!-- datagrid2 -->
							<!-- datagrid3 -->
						</gridData>
						<resPhoto type="xsd:base64Binary"/>
						<dlcoInfo>
							<ern/>
							<dlco_nm/>
						</dlcoInfo>
						<dutyBehvInfo>
							<prsnt_tm/>
							<finish_dd_clsf/>
							<finish_dd_clsf_nm/>
							<finish_tm/>
						</dutyBehvInfo>
					</resData>
					<tempData/>
					<mediData>
						<cnt/>
					</mediData>
				</root>
			</instance>
			<script type="javascript">
				<![CDATA[
					var searchFlag = false;
					//사원 찾기 
					function setEmpInfo(emp_no, nm_korn)
					{
						var n_row = datagrid2.row;
						
						model1.setValue("/root/reqData/searchData/emp_no",emp_no);
						
						model1.send("hd_dwnwrk_1100");
						model1.copyNode("/root/resData/empInfo","/root/tempData/empInfo/record");
						model1.removenode("/root/tempData");
						var dept_cd = model1.getValue("/root/resData/empInfo/dept_cd");
						var dept_nm = model1.getValue("/root/resData/empInfo/dept_nm");
						var emp_no = model1.getValue("/root/resData/empInfo/emp_no");
						var nm_korn = model1.getValue("/root/resData/empInfo/nm_korn");
						var posi_nm = model1.getValue("/root/resData/empInfo/posi_nm");
						var cmpy_cd = model1.getValue("/root/resData/empInfo/cmpy_cd");
						
						model1.setValue("/root/resData/gridData/record[" + n_row + "]/cmpy_cd", cmpy_cd);
						model1.setValue("/root/resData/gridData/record[" + n_row + "]/dept_cd", dept_cd);
						model1.setValue("/root/resData/gridData/record[" + n_row + "]/dept_nm", dept_nm);
						model1.setValue("/root/resData/gridData/record[" + n_row + "]/emp_no", emp_no);
						model1.setValue("/root/resData/gridData/record[" + n_row + "]/nm_korn", nm_korn);
						model1.setValue("/root/resData/gridData/record[" + n_row + "]/posi_nm", posi_nm);
					
						model1.refresh();
					}
					
					function setDept_cd(iv_dept_cd, iv_dept_nm){
						var n_row = datagrid2.row;
						
						model1.setValue("/root/resData/gridData/record[" + n_row + "]/use_dept_cd", iv_dept_cd);
						model1.setValue("/root/resData/gridData/record[" + n_row + "]/use_dept_nm", iv_dept_nm);
						model1.refresh();
					}	
					
					//현재 날짜 
					function DateDemo()
					{
						var now_dt = "";
						var now_date = new Date();
						var year = now_date.getYear();
						var month = now_date.getMonth() + 1;
						var day = now_date.getDate();    
						var month_tm = '0' + month;
						var day_tm = '0' + day;  
						if(month_tm.length == 3){
							month_tm = month_tm.substring(1, 3);
						}
						if(day_tm.length == 3){
							day_tm = day_tm.substring(1, 3);
						}
						now_dt = year + month_tm;
					       return(now_dt);
						/*var s="";
						var mydate=new Date() 
						var year=mydate.getYear() 
						    if (year < 1000) 
						        year+=1900 
						
						var day=mydate.getDay() 
						var month=mydate.getMonth()+1 
						    if (month<10) 
						        month="0"+month 
						
						var daym=mydate.getDate() 
						    if (daym<10) 
						        daym="0"+daym 
						s  = year+month;
					       return(s);*/
					}
					
				     function setDeleteSlipValue(){
				     	var row = datagrid2.rows;
				     	if(row == 1){
				     		return;
				     	}
						else if(row > 1){					     	
							var actu_slip_no = model1.getValue("/root/resData/gridData/record[1]/actu_slip_no");
				     		model1.setValue("/root/reqData/searchData/actu_slip_no",actu_slip_no);
						}
						//model1.refresh();
				     }			
				
					
					function gridDisabled(){
						for(var i=1 ;i< datagrid2.rows;i++){
							var proc_stat = model1.getValue("/root/resData/gridData/record["+i+"]/proc_clsf");	
							//if(proc_stat == '29' || proc_stat == '36' || proc_stat == '33'){ 120213
							if(proc_stat == model.getValue("/root/initData/hd_ddemp_1107_m/dataSet/xx_proc_clsf_010") 
							|| proc_stat == model.getValue("/root/initData/hd_ddemp_1107_m/dataSet/xx_proc_clsf_020") 
							|| proc_stat == model.getValue("/root/initData/hd_ddemp_1107_m/dataSet/xx_proc_clsf_030")){
								datagrid2.isReadOnly(i, 1, i, 60) = true;
							}else{
								datagrid2.isReadOnly(i, 1, i, 60) = false;
							}					
						}						
						model1.refresh();							
					}
					
					function gridSearchList(){
						model1.send("hd_ddemp_1002");
						model1.copyNode("/root/resData/gridData","/root/tempData");
						model1.removenode("/root/tempData");
						
						datagrid2.clearStatus();
						datagrid2.refresh();
						gridDisabled();		
						
						var obj = htmldocument.SessionInfo;
						var cmpy_cd = obj.cmpycd.value; 
						if(cmpy_cd == "100"){
							datagrid2.colDisabled(datagrid2.colRef("studt_wk_yn")) = true;
							datagrid2.colDisabled(datagrid2.colRef("emp_insr_dduc_yn")) = true;
							datagrid2.colHidden(datagrid2.colRef("all_insr_dduc_yn")) = false; // 2018.03.05 나현철대리님 요청으로 숨겨달라
 							datagrid2.colHidden(datagrid2.colRef("cntr_amt")) = false;
						}				
						model1.refresh();
						
						//고용보험료 계산
						/*for(var i = 0; i < datagrid2.rows; i++){
							if(model1.getValue("/root/resData/gridData/record[" + i + "]/pay_amt") != ""){
								model1.setValue("/root/reqData/reqForm/pay_amt", model1.getValue("/root/resData/gridData/record[" + i + "]/pay_amt"));
								model1.send("hd_ddemp_1105");
								model1.setValue("/root/resData/gridData/record[" + i + "]/emp_insr_fee", model1.getValue("/root/dataSet/CURLIST/record/pay_amt"));
								model1.removenode("/root/dataSet");
							}
						}*/

						//세부매체코드 활성화 여부
						/*for(var i=1; i<datagrid2.rows;i++){
							var medi_cd = model1.getValue("/root/resData/gridData/record["+i+"]/medi_cd");
							
							if(medi_cd == "110" || medi_cd == "220"){
								datagrid2.isReadOnly(i, 47)  =false;
							}else{
								datagrid2.isReadOnly(i, 47)  =true;
							}
							datagrid2.fixedcellischeck(i, datagrid2.colRef("chkbox")) = false;		
						}
							datagrid2.fixedcellischeck(0, datagrid2.colRef("chkbox")) = false;		*/
						searchFlag = true;
						rowCnt.value = "총 "+ (parseInt(datagrid2.rows)- 1) + " 건";
					}
					
				function setDlco(dlco_no ,ern ,dlco_nm){
					var obj = htmldocument.SessionInfo;
					var cmpy_cd = obj.cmpycd.value; 	
					var row = datagrid2.row;
						if(cmpy_cd == "100"){ // 조선일보만 일용징등록에 등록된 연락처, 계약급여, 적요 가져온다.
							model1.makeNode("/root/reqData/searchData/ern"); 
							model1.setValue("/root/reqData/searchData/ern", ern);
							model1.send("hd_ddemp_1011");
							
							if(model1.getValue("/root/tempData/CURLIST/totalcnt") == 1){
								model1.setValue("/root/resData/gridData/record[" + (row) + "]/ptph_no",	model1.getValue("/root/tempData/CURLIST/record/tel_no"));	
								model1.setValue("/root/resData/gridData/record[" + (row) + "]/cntr_amt", model1.getValue("/root/tempData/CURLIST/record/servcost"));	
								model1.setValue("/root/resData/gridData/record[" + (row) + "]/rmks", model1.getValue("/root/tempData/CURLIST/record/chrg_posk_nm"));
								
								model1.setValue("/root/reqData/reqForm/cntr_amt", model1.getValue("/root/resData/gridData/record[" +row + "]/cntr_amt"));  
									
								model1.send("hd_ddemp_1105");
								model1.setValue("/root/resData/gridData/record[" +row + "]/np_fee", model1.getValue("/root/dataSet/CURLIST/record/np_amt")); //국민연금 
								model1.setValue("/root/resData/gridData/record[" +row + "]/hlth_insr_fee", model1.getValue("/root/dataSet/CURLIST/record/hlth_insr_amt")); // 건강보험
								model1.setValue("/root/resData/gridData/record[" +row + "]/hlth_insr_med_care_insr_fee", model1.getValue("/root/dataSet/CURLIST/record/hlth_insr_med_care_insr_amt"));  //건강장기요양보험 
								
								if(model1.getValue("/root/resData/gridData/record["+row+"]/emp_insr_dduc_yn") == "Y") //4대보험불공제는 아니고 고용보험 불공제 일때  
								{
									model1.setValue("/root/resData/gridData/record[" +row + "]/emp_insr_fee", "0");// 고용보험 	
								}
								
								model1.removenode("/root/dataSet");
							}else{
								alert("일용직등록에 등록되지않은 일용직입니다.");
								model1.setValue("/root/resData/gridData/record[" + (row) + "]/prn",	"");
								model1.setValue("/root/resData/gridData/record[" + (row) + "]/flnm", "");
								return;
							}
						}
						
					model1.setValue("/root/resData/gridData/record[" + (row) + "]/mang_no", dlco_no);
					model1.setValue("/root/resData/gridData/record[" + (row) + "]/prn", ern);
					model1.setValue("/root/resData/gridData/record[" + (row) + "]/flnm", dlco_nm);
					datagrid2.refresh();
				}			     
				function setEvntInfo(evnt_cd, evnt_cd_nm){
					if(model1.getValue("/root/reqData/gubun") == "1"){
						model1.setValue("/root/resData/gridData/record[" + datagrid2.row + "]/budg_cd", evnt_cd);
						model1.setValue("/root/resData/gridData/record[" + datagrid2.row + "]/budg_nm", evnt_cd_nm);
						//var budg_cd = model1.getValue("/root/resData/gridData/record[" +row + "]/budg_cd");
						//var medi_cd = model1.getValue("/root/resData/gridData/record[" +row + "]/medi_cd");
					}else if(model1.getValue("/root/reqData/gubun") == "2"){
						var row = datagrid2.row;
						//var event_cd = iv_evnt_yy+iv_evnt_cd+iv_evnt_seq;
						model1.setValue("/root/resData/gridData/record["+row+"]/evnt_cd", evnt_cd);
						model1.setValue("/root/resData/gridData/record["+row+"]/evnt_nm", evnt_cd_nm);
						if(datagrid2.rowStatus(row) == 0){
							datagrid2.addStatus(row, "update");	
						}
					}else if(model1.getValue("/root/reqData/gubun")	== "3"){
						var	row	= datagrid2.row;
						//var event_cd = iv_evnt_yy+iv_evnt_cd+iv_evnt_seq;
						model1.setValue("/root/resData/gridData/record["+row+"]/dtls_medi_cd", evnt_cd);
						model1.setValue("/root/resData/gridData/record["+row+"]/dtls_medi_nm", evnt_cd_nm);
						if(datagrid2.rowStatus(row)	== 0){
							datagrid2.addStatus(row, "update");
						}
					}
					model1.refresh();
				}
				]]>
			</script>
			<script type="javascript" ev:event="xforms-ready">
				<![CDATA[
					model.send("hd_ddemp_1107_m");
					model.refresh();
					/*
					alert(model.getValue("/root/initData/hd_ddemp_1107_m/dataSet/xx_proc_clsf_010"));	
					alert(model.getValue("/root/initData/hd_ddemp_1107_m/dataSet/xx_proc_clsf_020"));	
					alert(model.getValue("/root/initData/hd_ddemp_1107_m/dataSet/xx_proc_clsf_030"));	
					alert(model.getValue("/root/initData/hd_ddemp_1107_m/dataSet/xx_proc_clsf_040"));	
					alert(model.getValue("/root/initData/hd_ddemp_1107_m/dataSet/xx_job_clsf_00"));	
					alert(model.getValue("/root/initData/hd_ddemp_1107_m/dataSet/xx_cd_clsf_010"));	
					alert(model.getValue("/root/initData/hd_ddemp_1107_m/dataSet/xx_cd_clsf_020"));	
					alert(model.getValue("/root/initData/hd_ddemp_1107_m/dataSet/xx_job_clsf_03"));	
					alert(model.getValue("/root/initData/hd_ddemp_1107_m/dataSet/xx_cd_clsf_030"));	
					alert(model.getValue("/root/initData/hd_ddemp_1107_m/dataSet/xx_medi_cd_010"));					
					*/
					
					
					model1.setValue("/root/reqData/searchData/s_duty_yymm", DateDemo());
			
					datagrid2.fixedcellcheckbox(0, datagrid2.colRef("chk"), false) = true;
					
					model1.send("hd_ddemp_1001");
					model1.copyNode("/root/initData/comboSet","/root/tempData");
					model1.removenode("/root/tempData");
					model1.refresh();
					//datagrid2.addStatus(1, "insert");		
					//datagrid2.isReadOnly(1, 1, 1, 60)  = true;
					datagrid2.refresh();
					//rowCnt.value = "총 "+ (parseInt(datagrid2.rows)- 1) + " 건";
					var obj = htmldocument.SessionInfo;
					var cmpy_cd = obj.cmpycd.value; 
					
					if(cmpy_cd == "100"){
						datagrid2.colDisabled(datagrid2.colRef("studt_wk_yn")) = true;
						datagrid2.colDisabled(datagrid2.colRef("emp_insr_dduc_yn")) = true;
						datagrid2.colHidden(datagrid2.colRef("all_insr_dduc_yn")) = false; // 2018.03.05 나현철대리님 요청으로 숨겨달라
						datagrid2.colHidden(datagrid2.colRef("cntr_amt")) = false;
					}
					model1.refresh();

				]]>
			</script>
			<script type="javascript" src="/js/CIISComm.js"/>
			<script type="javascript" src="/js/TFCommon.js"/>
			<submission id="hd_ddemp_1104" action="/hd/ddemp/1104" mediatype="application/x-www-form-urlencoded" method="post" ref="/root/reqData" resultref="/root/tempData"/>
			<submission id="hd_ddemp_1000" action="/hd/ddemp/1000" mediatype="application/x-www-form-urlencoded" method="post" ref="/root/reqData/gridSearchData" resultref="/root/tempData"/>
			<submission id="hd_ddemp_1001" action="/hd/ddemp/1001" mediatype="application/x-www-form-urlencoded" method="post" ref="/root/reqData/dutyBehvInfoSearch" resultref="/root/tempData"/>
			<submission id="hd_ddemp_1002" action="/hd/ddemp/1002" mediatype="application/x-www-form-urlencoded" method="post" ref="/root/reqData/searchData" resultref="/root/tempData"/>
			<submission id="hd_ddemp_1103" action="/hd/ddemp/1103" mediatype="application/x-www-form-urlencoded" method="post" ref="/root/reqData" resultref="/root/tempData"/>
			<submission id="hd_ddemp_1007" action="/hd/ddemp/1007" mediatype="application/x-www-form-urlencoded" method="post" ref="/root/reqData/mediSearchData/budg_cd" resultref="/root/tempData"/>
			<submission id="hd_ddemp_1005" action="/hd/ddemp/1005" mediatype="application/x-www-form-urlencoded" method="post" ref="/root/reqData" resultref="/root/tempData"/>
			<submission id="hd_ddemp_1006" action="/hd/ddemp/1006" mediatype="application/x-www-form-urlencoded" method="post" ref="/root/reqData" resultref="/root/tempData"/>
			<submission id="hd_ddemp_1105" action="/hd/ddemp/1105" mediatype="application/x-www-form-urlencoded" method="post" ref="/root/reqData" resultref="/root/tempData"/>
			<submission id="hd_ddemp_1010" action="/hd/ddemp/1010" mediatype="application/x-www-form-urlencoded" method="post" ref="/root/reqData/mediSearchData/medi_cd" resultref="/root/tempData"/>
			<submission id="hd_ddemp_1009" action="/hd/ddemp/1009" mediatype="application/x-www-form-urlencoded" method="post" resultref="/root/tempData"/>
			<submission id="hd_ddemp_1107_m" action="/hd/ddemp/1107" mediatype="application/x-www-form-urlencoded" method="post" resultref="/root/initData/hd_ddemp_1107_m/dataSet"/>
			<submission id="hd_ddemp_1011" action="/hd/ddemp/1011" mediatype="application/x-www-form-urlencoded" method="post" ref="/root/reqData/searchData" resultref="/root/tempData"/>
		</model>
	</xhtml:head>
	<xhtml:body class="main" pagewidth="946" pageheight="728" guideline="1,9;1,934;2,730;1,171;" style="font-family:굴림; ">
		<group id="group_scr" class="gro_sel" style="left:10px; top:76px; width:926px; height:49px; ">
			<caption id="caption4" class="list_cap02" style="left:79px; top:24px; width:845px; height:25px; text-align:center; "/>
			<caption id="caption3" class="list_cap02" style="left:85px; top:0px; width:839px; height:25px; text-align:center; "/>
			<caption id="caption18" class="list_cap01" style="left:1px; top:0px; width:85px; height:25px; text-align:center; ">근로년월</caption>
			<input id="duty_dt" ref="/root/reqData/searchData/s_duty_yymm" inputtype="date" format="yyyy-mm" appearance="input" style="left:90px; top:4px; width:115px; height:18px; "/>
			<caption id="caption7" class="list_cap01" style="left:1px; top:24px; width:85px; height:25px; text-align:center; ">진행상태</caption>
			<select1 id="radio1" ref="/root/reqData/searchData/proc_stat_clsf" appearance="full" cols="5" overflow="visible" style="left:90px; top:28px; width:435px; height:20px; border-style:none; ">
				<choices>
					<item>
						<label>현업등록</label>
						<value>10</value>
					</item>
					<item>
						<label>인사결재</label>
						<value>20</value>
					</item>
					<item>
						<label>전표등록취소</label>
						<value>30</value>
					</item>
					<item>
						<label>전표등록/승인</label>
						<value>40</value>
					</item>
					<item>
						<label>전체</label>
						<value>50</value>
					</item>
				</choices>
			</select1>
			<input id="actu_slip_no_in" ref="/root/reqData/searchData/actu_slip_no" format="99999999-99-999" appearance="input" style="left:312px; top:3px; width:124px; height:18px; text-align:left; "/>
			<caption id="caption1" class="list_cap01" style="left:224px; top:0px; width:85px; height:25px; text-align:center; ">전표번호</caption>
		</group>
		<import id="iv_Title" src="../../../common/xrw/iv_TitleBar.xrw" style="left:10px; top:5px; width:926px; height:29px; "/>
		<datagrid id="datagrid2" nodeset="/root/resData/gridData/record" scroll="auto" caption="선택^주민등록번호^성명^학생(주간)^고용보험 불공제^4대보험 불공제^휴대폰/전화번호^직종^이직사유^일평균 근로시간^1일^2일^3일^4일^5일^6일^7일^8일^9일^10일^11일^12일^13일^14일^15일^16일^17일^18일^19일^20일^21일^22일^23일^24일^25일^26일^27일^28일^29일^30일^31일^계약급여^급여지급액^일급^시급^건강장기요양보험^건강보험^국민연금^예산코드^영수증구분^매체코드^세부매체코드^사용부서코드^적요^행사코드^전표번호^고용보험료^인사결재자^인사결제일시^caption1^caption2^caption3^caption4^caption5^caption6^caption7^caption8^caption9^caption10^caption11^caption12^caption13^caption14^caption15^caption16^caption17^caption18^caption19" colsep="#" colwidth="50, 100, 100, 70, 100, 100, 142, 230, 230, 100, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 100, 100, 100, 100, 100, 100, 100, 130, 130, 130, 130, 160, 200, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100" extendlastcol="scroll" frozencols="3" mergecellsfixedrows="bycolrec" rowheader="update" rowsep="|" selectionmode="free" style="left:10px; top:150px; width:924px; height:550px; ">
			<col checkvalue="1,0" ref="chk" type="checkbox">
				<script type="javascript" ev:event="xforms-select">
					<![CDATA[
						var row = datagrid2.row;
						var slip_proc_mang_dt = model1.getValue("/root/resData/gridData/record["+row+"]/slip_proc_mang_dt");
						var slip_proc_mang_seq = model1.getValue("/root/resData/gridData/record["+row+"]/slip_proc_mang_seq");
						var tmp_slip_proc_dt = "";
						var tmp_slip_proc_seq = "";
						for (i = 1; i < datagrid2.rows; i++) {
							tmp_slip_proc_dt = model1.getValue("/root/resData/gridData/record["+i+"]/slip_proc_mang_dt");
							tmp_slip_proc_seq = model1.getValue("/root/resData/gridData/record["+i+"]/slip_proc_mang_seq");
							if (slip_proc_mang_dt + slip_proc_mang_seq == tmp_slip_proc_dt + tmp_slip_proc_seq) {
								datagrid2.valueMatrix(i, 1) = "1";
								if(datagrid2.rowstatus(i) == 1 || datagrid2.rowstatus(i) == 3){
									datagrid2.rowstatus(i) = 1;
								}else{
									datagrid2.rowstatus(i) = 2;
								}
							}
						}
					]]>
				</script>
				<script type="javascript" ev:event="xforms-deselect">
					<![CDATA[
						var row = datagrid2.row;
						var slip_proc_mang_dt = model1.getValue("/root/resData/gridData/record["+row+"]/slip_proc_mang_dt");
						var slip_proc_mang_seq = model1.getValue("/root/resData/gridData/record["+row+"]/slip_proc_mang_seq");
						
						var tmp_slip_proc_dt = "";
						var tmp_slip_proc_seq = "";
						for (i = 1; i < datagrid2.rows; i++) {
							tmp_slip_proc_dt = model1.getValue("/root/resData/gridData/record["+i+"]/slip_proc_mang_dt");
							tmp_slip_proc_seq = model1.getValue("/root/resData/gridData/record["+i+"]/slip_proc_mang_seq");
							if (slip_proc_mang_dt + slip_proc_mang_seq == tmp_slip_proc_dt + tmp_slip_proc_seq) {
								datagrid2.valueMatrix(i, 1) = "0";
								if(datagrid2.rowstatus(i) == 1 || datagrid2.rowstatus(i) == 3){
									datagrid2.rowstatus(i) = 1;
								}else{
									datagrid2.rowstatus(i) = 0;
								}
							}
						}
					]]>
				</script>
				<script type="javascript" ev:event="xforms-value-changed">
					<![CDATA[
						var row = datagrid2.row;
						if (datagrid2.valueMatrix(row, 1) == "0" && datagrid2.rowStatus(row) == 2)
							datagrid2.rowStatus(row) = 0;
					]]>
				</script>
			</col>
			<col class="req" ref="prn" type="input" format="999999-9999999" caption="주민등록번호"/>
			<col class="req" ref="flnm" type="input" caption="성명"/>
			<col checkvalue="Y,N" ref="studt_wk_yn" type="checkbox"/>
			<col checkvalue="Y,N" ref="emp_insr_dduc_yn" type="checkbox" visibility="visible"/>
			<col checkvalue="Y,N" ref="all_insr_dduc_yn" type="checkbox" visibility="hidden"/>
			<col ref="ptph_no" type="input"/>
			<col ref="octgr_cd" type="combo" style="text-align:left; ">
				<choices>
					<itemset nodeset="/root/initData/comboSet/octgr_cd/item">
						<label ref="label">//</label>
						<value ref="value"/>
					</itemset>
				</choices>
			</col>
			<col ref="lve_job_resn_cd" type="combo" style="text-align:left; ">
				<choices>
					<itemset nodeset="/root/initData/comboSet/lve_job_resn_cd/item">
						<label ref="label"/>
						<value ref="value"/>
					</itemset>
				</choices>
			</col>
			<col ref="avg_duty_tm" type="input"/>
			<col checkvalue="1,0" ref="day01" type="checkbox"/>
			<col checkvalue="1,0" ref="day02" type="checkbox"/>
			<col checkvalue="1,0" ref="day03" type="checkbox"/>
			<col checkvalue="1,0" ref="day04" type="checkbox"/>
			<col checkvalue="1,0" ref="day05" type="checkbox"/>
			<col checkvalue="1,0" ref="day06" type="checkbox" format="hh:nn"/>
			<col checkvalue="1,0" ref="day07" type="checkbox"/>
			<col checkvalue="1,0" ref="day08" type="checkbox"/>
			<col checkvalue="1,0" ref="day09" type="checkbox"/>
			<col checkvalue="1,0" ref="day10" type="checkbox"/>
			<col checkvalue="1,0" ref="day11" type="checkbox"/>
			<col checkvalue="1,0" ref="day12" type="checkbox"/>
			<col checkvalue="1,0" ref="day13" type="checkbox"/>
			<col checkvalue="1,0" ref="day14" type="checkbox"/>
			<col checkvalue="1,0" ref="day15" type="checkbox"/>
			<col checkvalue="1,0" ref="day16" type="checkbox"/>
			<col checkvalue="1,0" ref="day17" type="checkbox"/>
			<col checkvalue="1,0" ref="day18" type="checkbox"/>
			<col checkvalue="1,0" ref="day19" type="checkbox"/>
			<col checkvalue="1,0" ref="day20" type="checkbox"/>
			<col checkvalue="1,0" ref="day21" type="checkbox"/>
			<col checkvalue="1,0" ref="day22" type="checkbox"/>
			<col checkvalue="1,0" ref="day23" type="checkbox"/>
			<col checkvalue="1,0" ref="day24" type="checkbox"/>
			<col checkvalue="1,0" ref="day25" type="checkbox"/>
			<col checkvalue="1,0" ref="day26" type="checkbox"/>
			<col checkvalue="1,0" ref="day27" type="checkbox"/>
			<col checkvalue="1,0" ref="day28" type="checkbox"/>
			<col checkvalue="1,0" ref="day29" type="checkbox"/>
			<col checkvalue="1,0" ref="day30" type="checkbox"/>
			<col checkvalue="1,0" ref="day31" type="checkbox"/>
			<col ref="cntr_amt" type="input" visibility="hidden" format="#,###" caption="계약급여" style="text-align:right; "/>
			<col class="req" ref="pay_amt" type="input" format="#,###" caption="급여지급액" style="text-align:right; "/>
			<col ref="dd_amt" format="#,###" style="text-align:right; "/>
			<col ref="time_amt" format="#,###" style="text-align:right; "/>
			<col ref="hlth_insr_med_care_insr_fee" type="input" format="(-)#,###" caption="건강장기요양보험" style="text-align:right; "/>
			<col ref="hlth_insr_fee" type="input" format="(-)#,###" caption="건강보험" style="text-align:right; "/>
			<col ref="np_fee" type="input" format="(-)#,###" caption="국민연금" style="text-align:right; "/>
			<col class="req" ref="budg_nm" type="inputbutton" caption="예산코드" style="text-align:left; "/>
			<col class="req" ref="rcpt_clsf_nm" caption="영수증구분" style="text-align:left; "/>
			<!--<col class="req" ref="rcpt_clsf_nm" type="inputbutton" caption="영수증구분" style="text-align:left; "/>-->
			<col ref="medi_nm" type="inputbutton" caption="매체코드" style="text-align:left; "/>
			<col ref="dtls_medi_nm" type="inputbutton" style="text-align:left; "/>
			<col class="req" ref="use_dept_nm" type="inputbutton" caption="사용부서코드" style="text-align:left; "/>
			<col ref="rmks" type="input" style="text-align:left; "/>
			<col ref="evnt_nm" type="inputbutton" style="text-align:left; "/>
			<col ref="actu_slip_no" format="99999999-99-999"/>
			<col ref="emp_insr_fee" type="input" format="#,###" style="text-align:right; "/>
			<col ref="hd_decid_pers"/>
			<col ref="hd_decid_dt_tm" format="yyyy-mm-dd"/>
			<col ref="duty_dds" visibility="hidden"/>
			<col ref="clos_yn" visibility="hidden"/>
			<col ref="clos_dt" visibility="hidden"/>
			<col ref="incm_tax" visibility="hidden"/>
			<col ref="res_tax" visibility="hidden"/>
			<col ref="budg_cd" visibility="hidden"/>
			<col ref="rcpt_clsf" visibility="hidden"/>
			<col ref="medi_cd" visibility="hidden"/>
			<col ref="use_dept_cd" visibility="hidden"/>
			<col ref="evnt_cd" visibility="hidden"/>
			<col ref="cmpy_cd" visibility="hidden"/>
			<col ref="mang_no" visibility="hidden"/>
			<col ref="occr_dt" visibility="hidden"/>
			<col ref="seq" visibility="hidden"/>
			<col ref="duty_yymm" visibility="hidden"/>
			<col ref="slip_proc_mang_dt" visibility="hidden"/>
			<col ref="slip_proc_mang_seq" visibility="hidden"/>
			<col ref="proc_clsf" visibility="hidden"/>
			<col ref="dtls_medi_cd" visibility="hidden"/>
			<col ref="budg_cnt" visibility="hidden"/>
			<col ref="medi_cnt" visibility="hidden"/>
			<script type="javascript" ev:event="onbuttonclick">
				<![CDATA[
						var cd   =  "";
						var cdnm =  "";
							
						var col = datagrid2.col;
						var row = datagrid2.row;
					
					//	if(col=="46") {		
						if( datagrid2.col ==  datagrid2.colRef("budg_nm")){
							//예산 코드							
							/*var resultRef1 = "/root/resData/gridData/record[" +row + "]/budg_cd";
							var resultRef2 =  "/root/resData/gridData/record[" +row + "]/budg_nm";
							
							
							showCommonCodePopup1("02", "87", cd, cdnm, "Y", resultRef1, resultRef2, "", "", "", "", "", "", "", "", "", "", "", "");*/
	
							model1.setValue("/root/reqData/gubun", "1");
							var obj = htmldocument.SessionInfo;
				    	 		setProperty("ss_cmpycd"   , obj.cmpycd.value);
				    	 		setProperty("ss_deptcd"   , obj.deptcd.value);
							model.removeNodeset("/root/reqData/fwdData");  
							model.makeNode("/root/reqData/fwdData/cmpy_cd");
							model.makeNode("/root/reqData/fwdData/G_Tag");
							model.makeNode("/root/reqData/fwdData/G_Caption");
							model.makeNode("/root/reqData/fwdData/G_Codenu");
							model.makeNode("/root/reqData/fwdData/G_BRCode");
							model.setValue("/root/reqData/fwdData/cmpy_cd", obj.cmpycd.value);
							model.setValue("/root/reqData/fwdData/G_Tag", "2");
							model.setValue("/root/reqData/fwdData/G_Caption", "부서별예산코드조회");
//							model.setValue("/root/reqData/fwdData/G_Codenu", "/root/reqData/searchData/dept_cd");
							model.setValue("/root/reqData/fwdData/G_Codenu", obj.deptcd.value);					
							model.setValue("/root/reqData/fwdData/G_BRCode", "");
							gstr_popupid = "budg_cd";
							window.load("../../mc/co/MC_CO_1000.xrw", "modal", "", "align:center; width:460; height:420; sysmenu:visible; min:visible; max:true; resize:true; caption:hidden;", "/root/reqData/fwdData", "/root/reqData/fwdData")
							
							var budg_cd = model1.getValue("/root/resData/gridData/record[" +row + "]/budg_cd");
							model1.setValue("/root/reqData/mediSearchData/budg_cd", budg_cd);
							model1.send("hd_ddemp_1007");
							model1.setValue("/root/resData/gridData/record[" +row + "]/budg_cnt", model1.getValue("/root/tempData/mediData/record/cnt"));
							model1.removenode("/root/tempData");
							model.refresh();
					//	}else if(col=="47") {	
						}else if( datagrid2.col ==  datagrid2.colRef("rcpt_clsf_nm")){
							//영수증구분							
							var resultRef1 = "/root/resData/gridData/record[" +row + "]/rcpt_clsf";
							var resultRef2 =  "/root/resData/gridData/record[" +row + "]/rcpt_clsf_nm";
							
							
							//showCommonCodePopup1("00", "12", cd, cdnm, "Y", resultRef1, resultRef2, "", "", "", "", "", "", "", "", "", "", "", ""); 120213
							showCommonCodePopup1(model.getValue("/root/initData/hd_ddemp_1107_m/dataSet/xx_job_clsf_00"), model.getValue("/root/initData/hd_ddemp_1107_m/dataSet/xx_cd_clsf_010")	, cd, cdnm, "Y", resultRef1, resultRef2, "", "", "", "", "", "", "", "", "", "", "", "");
	
							model.refresh();
					//	}else if(col=="48") {		
						}else if( datagrid2.col ==  datagrid2.colRef("medi_nm")){
							//매체 코드				
							var resultRef1 = "/root/resData/gridData/record[" +row + "]/medi_cd";
							var resultRef2 =  "/root/resData/gridData/record[" +row + "]/medi_nm";
							
							
							//showCommonCodePopup1("00", "01", cd, cdnm, "Y", resultRef1, resultRef2, "", "", "", "", "", "", "", "", "", "", "", ""); 120213
							showCommonCodePopup1(model.getValue("/root/initData/hd_ddemp_1107_m/dataSet/xx_job_clsf_00"), model.getValue("/root/initData/hd_ddemp_1107_m/dataSet/xx_cd_clsf_020"), cd, cdnm, "Y", resultRef1, resultRef2, "", "", "", "", "", "", "", "", "", "", "", "");
	
							model.refresh();
							
							var medi_cd = model1.getValue("/root/resData/gridData/record[" +row + "]/medi_cd");
							model1.setValue("/root/reqData/mediSearchData/medi_cd", medi_cd);
							model1.send("hd_ddemp_1010");
							model1.setValue("/root/resData/gridData/record[" +row + "]/medi_cnt", model1.getValue("/root/dataSet/CURLIST/record/cnt"));
							model1.removenode("/root/tempData");
							
							/*var budg_cd = model1.getValue("/root/resData/gridData/record[" +row + "]/budg_cd");
							var medi_cd = model1.getValue("/root/resData/gridData/record[" +row + "]/medi_cd");
							
							if(budg_cd&&medi_cd)
							{
								//alert("budg_cd="+budg_cd);
								//alert("medi_cd="+medi_cd);
								if(medi_cd=="110" || medi_cd =="210") {
									model1.setValue("/root/reqData/mediSearchData/budg_cd",budg_cd);
									model1.setValue("/root/reqData/mediSearchData/medi_cd",medi_cd);
	
									model1.send("hd_ddemp_1007");
									model1.copyNode("/root/resData/mediData","/root/tempData/mediData/record");
									model1.removenode("/root/tempData");
									var cnt = model1.getValue("/root/resData/mediData/cnt");
									
									if(cnt == 1)
									{
										//datagrid2.isReadOnly(row, 49)  =false;
									}else{
										datagrid2.valueMatrix(row, datagrid2.colRef("dtls_medi_cd")) = "";
										datagrid2.valueMatrix(row, datagrid2.colRef("dtls_medi_nm")) = "";
										//datagrid2.isReadOnly(row, 49)  =true;
									}
								}else{
									datagrid2.valueMatrix(row, datagrid2.colRef("dtls_medi_cd")) = "";
									datagrid2.valueMatrix(row, datagrid2.colRef("dtls_medi_nm")) = "";
									//datagrid2.isReadOnly(row, 49)  =true;
								}
							}else{
								datagrid2.valueMatrix(row, datagrid2.colRef("dtls_medi_cd")) = "";
								datagrid2.valueMatrix(row, datagrid2.colRef("dtls_medi_nm")) = "";
								//datagrid2.isReadOnly(row, 49)  =true;
							}*/
							
					//	}else if(col=="52") {	
						}else if( datagrid2.col ==  datagrid2.colRef("evnt_nm")){
							//행사 코드 
							model1.setValue("/root/reqData/gubun", "2");
							model.removeNodeset("/root/reqData/fwdData");  
							model.makeNode("/root/reqData/fwdData/cmpy_cd");
							model.makeNode("/root/reqData/fwdData/G_Tag");
							model.makeNode("/root/reqData/fwdData/G_Caption");
							model.makeNode("/root/reqData/fwdData/G_Codenu");
							model.makeNode("/root/reqData/fwdData/G_BRCode");
							model.setValue("/root/reqData/fwdData/cmpy_cd", getProperty("ss_cmpycd"));
							model.setValue("/root/reqData/fwdData/G_Tag", "16");
							model.setValue("/root/reqData/fwdData/G_Caption", "국별행사코드조회");
							model.setValue("/root/reqData/fwdData/G_Codenu", getProperty("ss_deptcd").substring(0, 2));	
							model.setValue("/root/reqData/fwdData/G_BRCode", "");
							window.load("../../mc/co/MC_CO_1000.xrw", "modal", "", "align:center; width:460; height:420; sysmenu:visible; min:visible; max:true; resize:true; caption:hidden;", "/root/reqData/fwdData", "/root/reqData/fwdData");
					//	}else if(col=="49") {		
						}else if( datagrid2.col ==  datagrid2.colRef("dtls_medi_nm")){  
							var medi_cd = model1.getValue("/root/resData/gridData/record[" +row + "]/medi_cd");
							
							//if(medi_cd == "110"){ 120213
							if(medi_cd == model.getValue("/root/initData/hd_ddemp_1107_m/dataSet/xx_medi_cd_010")){
								//세부매체 코드				
								var resultRef1 = "/root/resData/gridData/record[" +row + "]/dtls_medi_cd";
								var resultRef2 = "/root/resData/gridData/record[" +row + "]/dtls_medi_nm";
								
								//showCommonCodePopup1("03", "30", cd, cdnm, "Y", resultRef1, resultRef2, "", "", "", "", "", "", "", "", "", "", "", ""); 120213
								showCommonCodePopup1(model.getValue("/root/initData/hd_ddemp_1107_m/dataSet/xx_job_clsf_03"), model.getValue("/root/initData/hd_ddemp_1107_m/dataSet/xx_cd_clsf_030"), cd, cdnm, "Y", resultRef1, resultRef2, "", "", "", "", "", "", "", "", "", "", "", "");
							}else if(medi_cd != ""){
								model1.setValue("/root/reqData/gubun", "3");
								model.removeNodeset("/root/reqData/fwdData");  
								model.makeNode("/root/reqData/fwdData/cmpy_cd");
								model.makeNode("/root/reqData/fwdData/G_Tag");
								model.makeNode("/root/reqData/fwdData/G_Caption");
								model.makeNode("/root/reqData/fwdData/G_Codenu");
								model.makeNode("/root/reqData/fwdData/G_BRCode");
								model.setValue("/root/reqData/fwdData/cmpy_cd", getProperty("ss_cmpycd"));
								model.setValue("/root/reqData/fwdData/G_Tag", "3");
								model.setValue("/root/reqData/fwdData/G_Caption", "상세매체코드조회");
								model.setValue("/root/reqData/fwdData/G_Codenu", medi_cd.substring(0, 3));					
								model.setValue("/root/reqData/fwdData/G_BRCode", "");
							
								window.load("../../mc/co/MC_CO_1000.xrw"
											, "modal"
											, ""
											, "align:center; width:460; height:420; sysmenu:visible; min:visible; max:true; resize:true; caption:hidden;"
										,"/root/reqData/fwdData"
										,"/root/reqData/fwdData"
										)
							}
//							model.refresh();
							datagrid2.refresh();
							/*var budg_cd = model1.getValue("/root/resData/gridData/record[" +row + "]/budg_cd");
							model1.setValue("/root/reqData/mediSearchData/budg_cd",budg_cd);
							model1.setValue("/root/reqData/mediSearchData/medi_cd",medi_cd);

							model1.send("hd_ddemp_1007");
							model1.copyNode("/root/resData/mediData","/root/tempData/mediData/record");
							model1.removenode("/root/tempData");
							var cnt = model1.getValue("/root/resData/mediData/cnt");
							if(cnt == 1 && (medi_cd == "110" || medi_cd == "210")){
								//세부매체 코드				
								var resultRef1 = "/root/resData/gridData/record[" +row + "]/dtls_medi_cd";
								var resultRef2 =  "/root/resData/gridData/record[" +row + "]/dtls_medi_nm";
								
								showCommonCodePopup1("03", "30", cd, cdnm, "Y", resultRef1, resultRef2, "", "", "", "", "", "", "", "", "", "", "", "");
							}else{
								alert("예산코드가 상세매체이고 매체코드는 본지(110), 주간(210)일 경우에만 세부매체코드를 입력할 수 있습니다.");
							}
//							model.refresh();
							datagrid2.refresh();*/
							
						//}else if(col=="50") {	
						}else if( datagrid2.col ==  datagrid2.colRef("use_dept_nm")){
							//사용부서코드
							model1.makeNode("/root/reqData/fwdData/func_nm");
							model1.setValue("/root/reqData/fwdData/func_nm", "setDept_cd");
							window.load("/xrw/hd/com/HD_COM_1100.xrw","modal", "hd_com_1100", "align:center; caption:hidden;", "/root/reqData/fwdData", "/root/reqData/fwdData");
						}
						datagrid2.addStatus(datagrid2.row, "update");
						datagrid2.refresh();
						model1.makeNode("/root/resData/resForm/temp");
						model1.setValue("/root/resData/resForm/temp", "1");
				]]>
			</script>
			<script type="javascript" ev:event="xforms-value-changed">
				<![CDATA[
					var col = datagrid2.col;
					var row = datagrid2.row;
					var obj = htmldocument.SessionInfo;
					var cmpy_cd = obj.cmpycd.value; 
					
					//if (col == 1) {
					//	alert("1"); 
					if( datagrid2.col ==  datagrid2.colRef("chk")){
						var mang_dt = datagrid2.valueMatrix(row, datagrid2.colRef("slip_proc_mang_dt"));
						var mang_seq = datagrid2.valueMatrix(row, datagrid2.colRef("slip_proc_mang_seq"));
						if (datagrid2.valueMatrix(row, datagrid2.colRef("chk")) == "1") {
							for (i = 1; i < datagrid2.rows; i++) {
								if (mang_dt == datagrid2.valueMatrix(i, datagrid2.colRef("slip_proc_mang_dt")) &&
								    mang_seq == datagrid2.valueMatrix(i, datagrid2.colRef("slip_proc_mang_seq"))) {
									datagrid2.valueMatrix(row, datagrid2.colRef("chk")) = "1";
									datagrid2.rowStatus(row) = 2;
								}
							}
						} else {
							for (i = 1; i < datagrid2.rows; i++) {
								if (mang_dt == datagrid2.valueMatrix(i, datagrid2.colRef("slip_proc_mang_dt")) &&
								    mang_seq == datagrid2.valueMatrix(i, datagrid2.colRef("slip_proc_mang_seq"))) {
									datagrid2.valueMatrix(row, datagrid2.colRef("chk")) = "0";
									datagrid2.rowStatus(row) = 0;
								}
							}
						}
					}

					//if(col=="2"){
					if( datagrid2.col ==  datagrid2.colRef("prn")){	
						var prn = model1.getValue("/root/resData/gridData/record[" +row + "]/prn");
						
						if(!prn) {
							 alert("주민등록번호를 입력해주세요.");	
							 return;
						}
						
						model1.setValue("/root/reqData/gridSearchData/ern",prn);
						model1.setValue("/root/reqData/gridSearchData/dlco_nm","");
						model1.send("hd_ddemp_1000");
						var cnt = model1.getValue("/root/tempData/dlcoInfo/totalcnt");
						if(cnt == 0 ){
							alert("조회 정보와 일치하는 일용직이 없습니다.");
							model1.removenode("/root/tempData");
							return;
					//	}else if(cnt ==1){
					//		model1.copyNode("/root/resData/dlcoInfo","/root/tempData/dlcoInfo/record");
					//		model1.removenode("/root/tempData");
						}else if(cnt >= 1){
							model.removeNodeset("/root/reqData/fwdData");  
							model.makeNode("/root/reqData/fwdData/func_nm");
							model.setValue("/root/reqData/fwdData/func_nm", "setDlco");
							model.makeNode("/root/reqData/fwdData/dlco_nm");
							model.setValue("/root/reqData/fwdData/dlco_nm","");
							model.makeNode("/root/reqData/fwdData/ern");
							model.setValue("/root/reqData/fwdData/ern", prn);
							window.load("/xrw/hd/com/HD_COM_1211.xrw","modal", "hd_com_1211", "align:center; caption:hidden;", "/root/reqData/fwdData", "/root/reqData/fwdData");
							model1.removenode("/root/tempData");
							return;
						}
						
						var s_ern = model1.getValue("/root/resData/dlcoInfo/ern");
						var s_dlco_nm = model1.getValue("/root/resData/dlcoInfo/dlco_nm");
						var s_dlco_no  = model1.getValue("/root/resData/dlcoInfo/dlco_no");
						
						model1.setValue("/root/resData/gridData/record[" +row + "]/prn",s_ern);
						model1.setValue("/root/resData/gridData/record[" +row + "]/flnm",s_dlco_nm);
						model1.setValue("/root/resData/gridData/record[" +row + "]/mang_no",s_dlco_no);
						
					//}else if(col=="3") {
					}else if( datagrid2.col ==  datagrid2.colRef("flnm")){	
						
						var flnm = model1.getValue("/root/resData/gridData/record[" +row + "]/flnm");

						
						if(!flnm) {
							 alert("성명를 입력하십시오.");	
							 return;
						}
						
						model1.setValue("/root/reqData/gridSearchData/dlco_nm",flnm);
						model1.setValue("/root/reqData/gridSearchData/ern","");
						
						model1.send("hd_ddemp_1000");
						model1.copyNode("/root/resData/dlcoInfo","/root/tempData/dlcoInfo/record");
						var cnt = model1.getValue("/root/tempData/dlcoInfo/totalcnt");
						if(cnt == 0 ){
							alert("조회 정보와 일치하는 일용직이 없습니다.");
							model1.removenode("/root/tempData");
							return;
					//	}else if(cnt ==1){
					//		model1.copyNode("/root/resData/dlcoInfo","/root/tempData/dlcoInfo/record");
					//		model1.removenode("/root/tempData");
						}else if(cnt >= 1){
							model.removeNodeset("/root/reqData/fwdData");  
							model.makeNode("/root/reqData/fwdData/func_nm");
							model.setValue("/root/reqData/fwdData/func_nm", "setDlco");
							model.makeNode("/root/reqData/fwdData/dlco_nm");
							model.setValue("/root/reqData/fwdData/dlco_nm",flnm);
							model.makeNode("/root/reqData/fwdData/ern");
							model.setValue("/root/reqData/fwdData/ern", "");
							window.load("/xrw/hd/com/HD_COM_1211.xrw","modal", "hd_com_1211", "align:center; caption:hidden;", "/root/reqData/fwdData", "/root/reqData/fwdData");
							model1.removenode("/root/tempData");
							return;
						}
						
						var s_ern = model1.getValue("/root/resData/dlcoInfo/ern");
						var s_dlco_nm = model1.getValue("/root/resData/dlcoInfo/dlco_nm");
						var s_dlco_no  = model1.getValue("/root/resData/dlcoInfo/dlco_no");
						
						model1.setValue("/root/resData/gridData/record[" +row + "]/prn",s_ern);
						model1.setValue("/root/resData/gridData/record[" +row + "]/flnm",s_dlco_nm);		
						model1.setValue("/root/resData/gridData/record[" +row + "]/mang_no",s_dlco_no);		
					//}else if(col == "5"){
					}else if( datagrid2.col ==  datagrid2.colRef("emp_insr_dduc_yn")){	
						if(model1.getValue("/root/resData/gridData/record[" +row + "]/emp_insr_dduc_yn") == "N"){
							if(model1.getValue("/root/resData/gridData/record[" +row + "]/pay_amt") == ""){
								alert("급여지급액을 입력하십시오.");
								model1.setValue("/root/resData/gridData/record[" +row + "]/emp_insr_dduc_yn", "N");
								model1.setValue("/root/resData/gridData/record[" +row + "]/emp_insr_fee", "0");
								return;
							}else if(model1.getValue("/root/resData/gridData/record[" +row + "]/pay_amt") != ""){
								model1.setValue("/root/reqData/reqForm/pay_amt", model1.getValue("/root/resData/gridData/record[" +row + "]/pay_amt"));
								model1.send("hd_ddemp_1105");
								model1.setValue("/root/resData/gridData/record[" +row + "]/emp_insr_fee", model1.getValue("/root/dataSet/CURLIST/record/emp_insr_amt"));
								model1.removenode("/root/dataSet");
							}
						}else if(model1.getValue("/root/resData/gridData/record[" +row + "]/emp_insr_dduc_yn") == "Y"){
							model1.setValue("/root/resData/gridData/record[" +row + "]/emp_insr_fee", "0");
						}
					}else if( datagrid2.col ==  datagrid2.colRef("all_insr_dduc_yn")){  //2017.11.28일 추가 
						if(model1.getValue("/root/resData/gridData/record["+row+"]/all_insr_dduc_yn") == "Y"){
							model1.setValue("/root/resData/gridData/record[" +row + "]/emp_insr_fee", "0"); // 고용보험 
							model1.setValue("/root/resData/gridData/record[" +row + "]/hlth_insr_med_care_insr_fee", "0"); //건강장기요양보험 
							model1.setValue("/root/resData/gridData/record[" +row + "]/hlth_insr_fee", "0"); // 건강보험 
							model1.setValue("/root/resData/gridData/record[" +row + "]/np_fee", "0"); //국민연금 
						}else if(model1.getValue("/root/resData/gridData/record["+row+"]/all_insr_dduc_yn") == "N"){
							if(cmpy_cd == "100")  //조선일보일 경우 계약급여로 자동계산(국민연금, 건강보험, 건강장기요양보험만 적용) 2018.01.25 한현재 
							{
								if(model1.getValue("/root/resData/gridData/record[" +row + "]/cntr_amt") == ""){
									alert("계약급여를 입력하십시오.");
									model1.setValue("/root/resData/gridData/record[" +row + "]/emp_insr_fee", "0");// 고용보험 
									model1.setValue("/root/resData/gridData/record[" +row + "]/hlth_insr_med_care_insr_fee", "0"); //건강장기요양보험 
									model1.setValue("/root/resData/gridData/record[" +row + "]/hlth_insr_fee", "0"); // 건강보험 
									model1.setValue("/root/resData/gridData/record[" +row + "]/np_fee", "0"); //국민연금 
									return;
								}else if(model1.getValue("/root/resData/gridData/record[" +row + "]/cntr_amt") != ""){
									model1.setValue("/root/reqData/reqForm/pay_amt", model1.getValue("/root/resData/gridData/record[" +row + "]/pay_amt"));
									model1.setValue("/root/reqData/reqForm/cntr_amt", model1.getValue("/root/resData/gridData/record[" +row + "]/cntr_amt"));
									model1.send("hd_ddemp_1105");
									//model1.setValue("/root/resData/gridData/record[" +row + "]/emp_insr_fee", model1.getValue("/root/dataSet/CURLIST/record/pay_amt"));
									   model1.setValue("/root/resData/gridData/record[" +row + "]/emp_insr_fee", model1.getValue("/root/dataSet/CURLIST/record/emp_insr_amt"));
									   model1.setValue("/root/resData/gridData/record[" +row + "]/np_fee", model1.getValue("/root/dataSet/CURLIST/record/np_amt"));
									   model1.setValue("/root/resData/gridData/record[" +row + "]/hlth_insr_fee", model1.getValue("/root/dataSet/CURLIST/record/hlth_insr_amt"));
									   model1.setValue("/root/resData/gridData/record[" +row + "]/hlth_insr_med_care_insr_fee", model1.getValue("/root/dataSet/CURLIST/record/hlth_insr_med_care_insr_amt"));
									model1.removenode("/root/dataSet");
								}
							}
							else 
							{
								if(model1.getValue("/root/resData/gridData/record[" +row + "]/pay_amt") == ""){
									alert("급여지급액을 입력하십시오.");
									model1.setValue("/root/resData/gridData/record[" +row + "]/emp_insr_fee", "0");// 고용보험 
									model1.setValue("/root/resData/gridData/record[" +row + "]/hlth_insr_med_care_insr_fee", "0"); //건강장기요양보험 
									model1.setValue("/root/resData/gridData/record[" +row + "]/hlth_insr_fee", "0"); // 건강보험 
									model1.setValue("/root/resData/gridData/record[" +row + "]/np_fee", "0"); //국민연금 
									return;
								}else if(model1.getValue("/root/resData/gridData/record[" +row + "]/pay_amt") != ""){
									model1.setValue("/root/reqData/reqForm/pay_amt", model1.getValue("/root/resData/gridData/record[" +row + "]/pay_amt"));
									model1.send("hd_ddemp_1105");
									//model1.setValue("/root/resData/gridData/record[" +row + "]/emp_insr_fee", model1.getValue("/root/dataSet/CURLIST/record/pay_amt"));
									   model1.setValue("/root/resData/gridData/record[" +row + "]/emp_insr_fee", model1.getValue("/root/dataSet/CURLIST/record/emp_insr_amt"));
									   model1.setValue("/root/resData/gridData/record[" +row + "]/np_fee", model1.getValue("/root/dataSet/CURLIST/record/np_amt"));
									   model1.setValue("/root/resData/gridData/record[" +row + "]/hlth_insr_fee", model1.getValue("/root/dataSet/CURLIST/record/hlth_insr_amt"));
									   model1.setValue("/root/resData/gridData/record[" +row + "]/hlth_insr_med_care_insr_fee", model1.getValue("/root/dataSet/CURLIST/record/hlth_insr_med_care_insr_amt"));
									model1.removenode("/root/dataSet");
								}
							}
						}
					//}else if(col=="49") {
					}else if( datagrid2.col ==  datagrid2.colRef("dtls_medi_nm")){	
						datagrid2.valueMatrix(row, datagrid2.colRef("dtls_medi_cd")) = "";
						datagrid2.valueMatrix(row, datagrid2.colRef("dtls_medi_nm")) = "";
					//}else if(col=="41"){
					}else if( datagrid2.col ==  datagrid2.colRef("cntr_amt")){ // 2017.12.27 추가 조선일보일경우만(계약급액을 사용 .. 계약급액을 기준으로 사대보험이 계산되도록 변경 나현철대리요청) 
					   if(cmpy_cd == "100") { // 조선일보 경우만 계약급여로 자동계산(국민연금, 건강보험, 건강장기요양보험만 적용) 2018.01.25 한현재
							if(model1.getValue("/root/resData/gridData/record["+row+"]/all_insr_dduc_yn") == "Y"){ 
								model1.setValue("/root/resData/gridData/record[" +row + "]/emp_insr_fee", "0"); // 고용보험 
								model1.setValue("/root/resData/gridData/record[" +row + "]/hlth_insr_med_care_insr_fee", "0"); //건강장기요양보험 
								model1.setValue("/root/resData/gridData/record[" +row + "]/hlth_insr_fee", "0"); // 건강보험 
								model1.setValue("/root/resData/gridData/record[" +row + "]/np_fee", "0"); //국민연금 
							}else {
								if(model1.getValue("/root/resData/gridData/record[" +row + "]/cntr_amt") == ""){
									alert("계약급여를 입력하십시오.");
									model1.setValue("/root/resData/gridData/record[" +row + "]/hlth_insr_med_care_insr_fee", "0"); //건강장기요양보험 
									model1.setValue("/root/resData/gridData/record[" +row + "]/hlth_insr_fee", "0"); // 건강보험 
									model1.setValue("/root/resData/gridData/record[" +row + "]/np_fee", "0"); //국민연금 
									return;
								}else if(model1.getValue("/root/resData/gridData/record[" +row + "]/cntr_amt") != ""){
									//조선일보 경우만 계약급여로 자동계산(국민연금, 건강보험, 건강장기요양보험만 적용) 2018.01.25 한현재
									model1.setValue("/root/reqData/reqForm/cntr_amt", model1.getValue("/root/resData/gridData/record[" +row + "]/cntr_amt"));  
									model1.send("hd_ddemp_1105");

									model1.setValue("/root/resData/gridData/record[" +row + "]/np_fee", model1.getValue("/root/dataSet/CURLIST/record/np_amt"));
									model1.setValue("/root/resData/gridData/record[" +row + "]/hlth_insr_fee", model1.getValue("/root/dataSet/CURLIST/record/hlth_insr_amt"));
									model1.setValue("/root/resData/gridData/record[" +row + "]/hlth_insr_med_care_insr_fee", model1.getValue("/root/dataSet/CURLIST/record/hlth_insr_med_care_insr_amt"));
									
									if(model1.getValue("/root/resData/gridData/record["+row+"]/emp_insr_dduc_yn") == "Y") //4대보험불공제는 아니고 고용보험 불공제 일때  
									{
										model1.setValue("/root/resData/gridData/record[" +row + "]/emp_insr_fee", "0");// 고용보험 	
									}
									
									model1.removenode("/root/dataSet");
								}
							}
						}
					}else if( datagrid2.col ==  datagrid2.colRef("pay_amt")){							
						if(model1.getValue("/root/resData/gridData/record[" +row + "]/emp_insr_dduc_yn") != "Y"){
							model1.setValue("/root/reqData/reqForm/pay_amt", model1.getValue("/root/resData/gridData/record[" +row + "]/pay_amt"));
							model1.send("hd_ddemp_1105");
							model1.setValue("/root/resData/gridData/record[" +row + "]/emp_insr_fee", model1.getValue("/root/dataSet/CURLIST/record/emp_insr_amt"));
							model1.removenode("/root/dataSet");
							model1.setValue("/root/resData/gridData/record[" +row + "]/emp_insr_dduc_yn", "N");
						}
						else 
						{
							if(model1.getValue("/root/resData/gridData/record[" +row + "]/pay_amt") != "")
							{
								model1.setValue("/root/resData/gridData/record[" +row + "]/emp_insr_fee", "0");// 고용보험 
							}
						}
						// 4대 보험 불공제  2017.11.28일 추가 
						if(model1.getValue("/root/resData/gridData/record["+row+"]/all_insr_dduc_yn") == "Y"){ 
							model1.setValue("/root/resData/gridData/record[" +row + "]/emp_insr_fee", "0"); // 고용보험 
							model1.setValue("/root/resData/gridData/record[" +row + "]/hlth_insr_med_care_insr_fee", "0"); //건강장기요양보험 
							model1.setValue("/root/resData/gridData/record[" +row + "]/hlth_insr_fee", "0"); // 건강보험 
							model1.setValue("/root/resData/gridData/record[" +row + "]/np_fee", "0"); //국민연금 
						}else {
							if(model1.getValue("/root/resData/gridData/record[" +row + "]/pay_amt") == ""){
								alert("급여지급액을 입력하십시오.");
								model1.setValue("/root/resData/gridData/record[" +row + "]/emp_insr_fee", "0");// 고용보험 
								
								return;
							}else if(model1.getValue("/root/resData/gridData/record[" +row + "]/pay_amt") != ""){
								model1.setValue("/root/reqData/reqForm/pay_amt", model1.getValue("/root/resData/gridData/record[" +row + "]/pay_amt"));
								model1.send("hd_ddemp_1105");
								//model1.setValue("/root/resData/gridData/record[" +row + "]/emp_insr_fee", model1.getValue("/root/dataSet/CURLIST/record/pay_amt"));
								   model1.setValue("/root/resData/gridData/record[" +row + "]/emp_insr_fee", model1.getValue("/root/dataSet/CURLIST/record/emp_insr_amt"));
								
								if(model1.getValue("/root/resData/gridData/record["+row+"]/emp_insr_dduc_yn") == "Y") //4대보험불공제는 아니고 고용보험 불공제 일때  
								{
									model1.setValue("/root/resData/gridData/record[" +row + "]/emp_insr_fee", "0");// 고용보험 	
								}
								model1.removenode("/root/dataSet");
							}
						}
						
					}
					
					model1.makeNode("/root/resData/resForm/temp");
					model1.setValue("/root/resData/resForm/temp", "1");
				]]>
			</script>
			<script type="javascript" ev:event="xforms-select">
				<![CDATA[
				if(event.target == "datagrid2") {
					for(var i=1 ;i<datagrid2.rows;i++){
						if (datagrid2.rowStatus(i) == 0 && datagrid2.valueMatrix(i, datagrid2.colRef("actu_slip_no")) == "") 
							datagrid2.rowStatus(i) = 2;
					}		
				}
				]]>
			</script>
			<script type="javascript" ev:event="xforms-deselect">
				<![CDATA[
				if (event.target == "datagrid2") {
					for(var i = 1; i < datagrid2.rows; i++){
						if (datagrid2.rowStatus(i) == 2) 
							datagrid2.rowStatus(i) = 0;
					}	
				}
				]]>
			</script>
			<script type="javascript" ev:event="onclick">
				<![CDATA[
				//rowStatus(datagrid2);
				]]>
			</script>
		</datagrid>
		<group id="group_btnG1" class="gro_btn" style="left:10px; top:130px; width:926px; height:20px; ">
			<caption id="caption26" class="tit02" style="left:2px; top:0px; width:335px; height:20px; font-weight:bold; ">일용직 고용보험 자료 등록</caption>
			<button id="button5" class="btn_grid03" visibility="hidden" style="left:872px; top:0px; width:52px; height:17px; ">
				<caption>행추가</caption>
				<script type="javascript" ev:event="onclick">
					<![CDATA[
					
						var rowCnt = datagrid2.rows;
						var selectedIdx = datagrid2.rows-1;
						var prn     = model1.getValue("/root/resData/gridData/record[1]/prn");	

						datagrid2.addRow(true, true);
					
						//세부매체코드 활성화 여부
						/*for(var i=1; i<datagrid2.rows;i++){
							var medi_cd = model1.getValue("/root/resData/gridData/record["+i+"]/medi_cd");
							
							if(medi_cd == "110" || medi_cd == "220"){
								datagrid2.isReadOnly(i, 49)  =false;
							}else{
								datagrid2.isReadOnly(i, 49)  =true;
							}
						}*/
						datagrid2.refresh();
					
						model1.makeNode("/root/resData/resForm/temp");
						model1.setValue("/root/resData/resForm/temp", "1");
					
					]]>
				</script>
			</button>
		</group>
		<group id="group_btnA" class="gro_btn" style="left:10px; top:43px; width:926px; height:21px; ">
			<button id="btnA1" class="btn02" style="left:356px; top:0px; width:52px; height:21px; ">
				<caption>조회</caption>
				<script type="javascript" ev:event="onclick">
					<![CDATA[
						gridSearchList();
					]]>
				</script>
			</button>
			<button id="btnA2" class="btn02" style="left:301px; top:0px; width:52px; height:21px; ">
				<caption>초기화</caption>
				<script type="javascript" ev:event="onclick">
					<![CDATA[
					model1.reset();
					datagrid2.addStatus(1, "insert");		
					datagrid2.isReadOnly(1, 1, 1, 60) = false;
					]]>
				</script>
			</button>
			<button id="button7" class="btn02" style="left:874px; top:0px; width:52px; height:21px; ">
				<caption>종료</caption>
				<script type="javascript" ev:event="onclick">
					<![CDATA[
				 	viewer("mainFrame").window.javaScript.closeMDIWindow(model.getValue("/root/initData/pageInfo/pageID"));
					]]>
				</script>
			</button>
			<button id="button2" class="btn02" visibility="hidden" style="left:187px; top:0px; width:52px; height:21px; ">
				<caption>삭제</caption>
				<script type="javascript" ev:event="onclick">
					<![CDATA[
						if (!rowDelSubmit(datagrid2)) {
							return;
						}
						 
	 					if (window.alert("삭제하시겠습니까?", "확인", 1) != 1) {
							return;
						}
					
						model1.setValue("/root/reqData/multiUpData", datagrid2.getUpdateData());
						model1.send("hd_ddemp_1103");
	
						if(submit_completed()) {
							model1.reset();
							gridSearchList();								
							datagrid2.clearStatus();
						}
					]]>
				</script>
			</button>
			<button id="button10" class="btn02" style="left:411px; top:0px; width:52px; height:21px; ">
				<caption>저장</caption>
				<script type="javascript" ev:event="onclick">
					<![CDATA[
						var temp = model1.getValue("/root/resData/resForm/temp");
						
						if(temp == ""){
							alert("등록 및 삭제 하실 데이터를 입력 또는 선택하신 후 진행하십시오.");
							return;
						}else if(temp == "1"){
							
							var selectedIdx = datagrid2.rows-1;
							
							/*var obj = htmldocument.SessionInfo;
				    	 		setProperty("ss_deptcd"   , obj.deptcd.value);
				    	 		model1.send("hd_ddemp_1009");
				    	 		var mang_cd_1 = model1.getValue("/root/dataSet/CURLIST/record/mang_cd_1");
				    	 		model1.removenode("/root/dataSet");
				    	 		if(obj.deptcd.value == mang_cd_1){
								var row = datagrid2.row;			
								for(var i=1;i<datagrid2.rows;i++){
									if(datagrid2.isReadOnly(i, 50) != 1 && datagrid2.valueMatrix(i,50) == ""){
										alert("행사코드는 필수입력사항입니다.");
										return;
									}
								}
				    	 		} 20090902 고윤양 과장님 */
				    	 		
				    	 		for(var i = 1; i < datagrid2.rows; i++){ // 만 64세 이상 불공제
								/// 오늘 날짜와 주민번호로 만 나이구하기 ///
								var dd = model1.getValue("/root/resData/gridData/record["+i+"]/occr_dt").substring(4,8);
								var jm = model1.getValue("/root/resData/gridData/record["+i+"]/prn").substring(0,6)+
				    	 			model1.getValue("/root/resData/gridData/record["+i+"]/prn").substring(7,14);
								var jmdd = jm.substring(2,6);//주민번호에서 생일
								var jmyear = "19"+jm.substring(0,2);//태어난 년도
								
								var today=new Date();//현제날짜구하기
								
								var mage = today.getFullYear() - parseInt(jmyear) + 1;//현제나이구하기
								 //alert(age);
								
								if(dd < jmdd){//생일이 안지났으면
									mage = mage - 2;
								}else{//지났으면
									mage = mage - 1;
								}
								if(mage > 63){
									model1.setValue("/root/resData/gridData/record["+i+"]/emp_insr_dduc_yn", "Y");
									model1.setValue("/root/resData/gridData/record["+i+"]/emp_insr_fee", "0");
								}
								/// 오늘 날짜와 주민번호로 만 나이구하기 ///
				    	 		}
							
				    	 		for(var i = 1; i < datagrid2.rows; i++){
				    	 			if(model1.getValue("/root/resData/gridData/record["+i+"]/budg_cd") == ""){
				    	 				alert(i + "번째줄 예산코드는 필수 항목입니다.");
				    	 				return;
				    	 			}
				    	 		}
				    	 		for(var i = 1; i < datagrid2.rows; i++){
				    	 			if(model1.getValue("/root/resData/gridData/record["+i+"]/budg_cnt") == "1"){
					    	 			if(model1.getValue("/root/resData/gridData/record["+i+"]/medi_cd") == ""){
					    	 				alert(i + "번째줄 매체코드는 필수 항목입니다.");
					    	 				return;
					    	 			}
				    	 			}
				    	 		}
				    	 		for(var i = 1; i < datagrid2.rows; i++){
				    	 			if(model1.getValue("/root/resData/gridData/record["+i+"]/medi_cnt") == "1"){
					    	 			if(model1.getValue("/root/resData/gridData/record["+i+"]/dtls_medi_cd") == ""){
					    	 				alert(i + "번째줄 세부매체코드는 필수 항목입니다.");
					    	 				return;
					    	 			}
				    	 			}
				    	 		}
							
							if(!commGridReqCheck("datagrid2")) return;
							 
							if (!rowInSubmit(datagrid2)) {
								return;
							}
		 					if (window.alert("저장하시겠습니까?", "확인", 1) != 1) {
								return;
							}
							
							for(var i = 1; i < datagrid2.rows; i++){
								if(datagrid2.rowStatus(i) == "3" || datagrid2.rowStatus(i) == "2"){
									var days = "";
									for(var j = 1; j < 32; j++){ // 체크된달구하기
										var z = "";
										if(j == 1 || j == 2 || j == 3 || j == 4 || j == 5 || j == 6 || j == 7 || j == 8 || j == 9){
											z = "0" + j;
										}else{
											z = j;
										}
										if(model1.getValue("/root/resData/gridData/record["+i+"]/day"+z+"") == "1"){
											days = Number(days + 1);
										}
									}
									
									var dd_amt_tm = datagrid2.valueMatrix(i, datagrid2.colRef("pay_amt")) / days ;// 일급 = 급여지급액 / 근무일수 - 십원단위 사사오입 -->  수정 계산법이 잘못되어 있어서 수정 2012.06.11
									var dd_amt = (Math.round(dd_amt_tm/10)*10);
									model1.setValue("/root/resData/gridData/record["+i+"]/dd_amt", dd_amt);
								
									var time_amt_tm = dd_amt / datagrid2.valueMatrix(i, datagrid2.colRef("avg_duty_tm"));// 시급 = 일급 / 근무시간수 - 십원단위 사사오입 -->  수정 계산법이 잘못되어 있어서 수정 2012.06.11
									var time_amt = (Math.round(time_amt_tm/10)*10);
									model1.setValue("/root/resData/gridData/record["+i+"]/time_amt", time_amt);
								}
							}
						
							model1.setValue("/root/reqData/multiUpData", datagrid2.getUpdateData());
							model1.send("hd_ddemp_1103");
		
							if(submit_completed()) {
								model1.reset();
								gridSearchList();								
								datagrid2.clearStatus();
							}
						}
					]]>
				</script>
			</button>
			<button id="button11" class="btn03" style="left:466px; top:0px; width:64px; height:21px; ">
				<caption>엑셀다운</caption>
				<script type="javascript" ev:event="onclick">
					<![CDATA[
					//excel 파일로 저장한다
					var filePath = window.fileDialog("save", "", false, "", "xls", "Excel Files(*.xls)|*.xls");
					if(filePath != "") {
						datagrid2.saveExcel(filePath);
						window.exec(filePath);
					}
					]]>
				</script>
			</button>
			<button id="button12" class="btn03" style="left:534px; top:0px; width:64px; height:21px; ">
				<caption>인사결재</caption>
				<script type="javascript" ev:event="onclick">
					<![CDATA[
					//	var temp = model1.getValue("/root/resData/resForm/temp");
						
					//	if(temp == ""){
					//		alert("등록 및 삭제 하실 데이터를 입력 또는 선택하신 후 진행하십시오.");
					//		return;
					//	}else if(temp == "1"){ -- 2017.08.22 수정 선택을 체크했경우는 인식을 못하므로 수정함 
							
						var iud_cnt = 0;
						for (i = 1; i <= datagrid2.rows; i++) {
							if (datagrid2.rowStatus(i) > 0) iud_cnt++;
						}
						
						if (iud_cnt == 0) {
							alert("등록 및 삭제 하실 데이터를 입력 또는 선택하신 후 진행하십시오.");
							return;
						}else {
					  
							var selectedIdx = datagrid2.rows-1;
							
							if(!commGridReqCheck("datagrid2")) return;
							for (var i = 1; i < datagrid2.rows; i++) {
								var proc_stat = model1.getValue("/root/resData/gridData/record["+i+"]/proc_clsf");
								var chk = datagrid2.valueMatrix(i,datagrid2.colRef("chk"));
								//전표 등록 체크
								if (chk == "1") {
									//if(proc_stat == 10 ){ 120213
									if(proc_stat == "25"){
										alert("이미 인사결재 되었습니다. 인사취소 후 진행해주십시오.");
										return;
									}
								}
							}
		 					if (window.alert("인사결재 하시겠습니까?", "확인", 1) != 1) {
								return;
							}
						
							model1.setValue("/root/reqData/searchData/mode","U");
							model1.setValue("/root/reqData/multiUpData", datagrid2.getUpdateData());
							model1.send("hd_ddemp_1104");
		
							if(submit_completed()) {
								//model1.reset();
								model1.resetInstanceNode("/root/resData/gridData/record");
								model1.refresh();
								gridSearchList();								
								datagrid2.clearStatus();
							}
						}
					]]>
				</script>
			</button>
			<button id="button3" class="btn03" style="left:602px; top:0px; width:64px; height:21px; ">
				<caption>인사취소</caption>
				<script type="javascript" ev:event="onclick">
					<![CDATA[
						//var temp = model1.getValue("/root/resData/resForm/temp");
						
					//	if(temp == ""){
					//		alert("등록 및 삭제 하실 데이터를 입력 또는 선택하신 후 진행하십시오.");
					//		return;
					//	}else if(temp == "1"){-- 2017.08.22 수정 선택을 체크했경우는 인식을 못하므로 수정함 
						var iud_cnt = 0;
						for (i = 1; i <= datagrid2.rows; i++) {
							if (datagrid2.rowStatus(i) > 0) iud_cnt++;
						}
						
						if (iud_cnt == 0) {
							alert("등록 및 삭제 하실 데이터를 입력 또는 선택하신 후 진행하십시오.");
							return;
						}else {		
							var selectedIdx = datagrid2.rows-1;
							
							if(!commGridReqCheck("datagrid2")) return;
							 
		 					if (window.alert("인사취소 하시겠습니까?", "확인", 1) != 1) {
								return;
							}
							model1.setValue("/root/reqData/searchData/mode","C");
							model1.setValue("/root/reqData/multiUpData", datagrid2.getUpdateData());
							model1.send("hd_ddemp_1104");
		
							if(submit_completed()) {
								//model1.reset();
								model1.resetInstanceNode("/root/resData/gridData/record");
								model1.refresh();
								gridSearchList();								
								datagrid2.clearStatus();
							}
							
						}
					]]>
				</script>
			</button>
			<button id="button8" class="btn03" style="left:670px; top:0px; width:64px; height:21px; ">
				<caption>전표생성</caption>
				<script type="javascript" ev:event="onclick">
					<![CDATA[
						//if (!commGridReqCheck("datagrid2"))
						//	return;
							
						var flag = false;
						if(datagrid2.rows == -1){
							alert("생성할전표가 없습니다.");
							return;
						}					
						if(datagrid2.rowStatus(1) == 1 && datagrid2.valueMatrix(1,2) == ""){
							alert("생성할전표가 없습니다.");
							return;
						}					
						var checked_rows = 0;
						for (var i = 1; i < datagrid2.rows; i++) {
							var proc_stat = model1.getValue("/root/resData/gridData/record["+i+"]/proc_clsf");
							var chk = datagrid2.valueMatrix(i,datagrid2.colRef("chk"));
							//전표 등록 체크
							if (chk == "1") {
								//if(proc_stat == 10 ){ 120213
								if(proc_stat == Number(model.getValue("/root/initData/hd_ddemp_1107_m/dataSet/xx_proc_clsf_040")) ){
									alert(i+"번째 행이 인사결재 되지 않았습니다.");
									return;
								}
								//if(proc_stat == 29 || proc_stat == 36 ){ 120213
								if(proc_stat == Number(model.getValue("/root/initData/hd_ddemp_1107_m/dataSet/xx_proc_clsf_010")) 
								|| proc_stat == Number(model.getValue("/root/initData/hd_ddemp_1107_m/dataSet/xx_proc_clsf_020")) ){
									alert(i+"번째 행이 전표발행되었습니다.");
									return;
								}
								checked_rows++;
							}
						}
						if (checked_rows == 0) {
							alert("전표를 생성할 대상을 선택하십시오.");
							return;
						}
						
						if (window.alert("전표생성 하시겠습니까?", "확인", 1) != 1) {
							return;
						}		
						
						model1.setValue("/root/reqData/multiUpData", datagrid2.getUpdateData());
						datagrid2.clearStatus();
						model1.send("hd_ddemp_1005");
						var actu_slip_no = model1.getValue("/root/dataSet/CURLIST/record/actu_slip_no");
						model1.removenode("/root/slipNoData/slip_no");
						model1.makeValue("/root/slipNoData/slip_no",actu_slip_no);
						model1.removenode("/root/dataSet");
						
						if(submit_completed()) {
							model1.resetInstanceNode("/root/resData/gridData/record");
							model1.refresh();
							datagrid2.clearStatus();
							datagrid2.valueMatrix(1, 1) = "0";
							gridSearchList();
							
							// 오즈관련 노드 초기화..					
						 	resetOznode();					
						 						
						 	// ozr경로 및 odi 파일명으로 사용될 노드 및 value셋팅 ( OZR파일경로 .ozr 제거)					
					 	 	makeNodeValue("/root/oz_data/ozrName","hd/HD_DDEMP_1106");
							makeNodeValue("/root/oz_data/preview","preview"); 			//preview : 미리보기, print : 인쇄
							makeNodeValue("/root/oz_data/printsize",""); 					//페이지용지설정(기본 A4)																				
										
						 	// odi 파라미터 설정.					
						 	makeNodeValue("/root/oz_data/odiParam/iv_cmpy_cd"     ,getProperty("ss_cmpycd") );
							makeNodeValue("/root/oz_data/odiParam/iv_actu_slip_no" ,actu_slip_no );
							
							//은행송금 확인서
					 		makeNodeValue("/root/oz_data/childCount","2");
					
							makeNodeValue("/root/oz_data/child1/ozrName","hd/HD_COM_3000_P");
							makeNodeValue("/root/oz_data/child1/odiParam/iv_cmpy_cd"     ,getProperty("ss_cmpycd") );	
							makeNodeValue("/root/oz_data/child1/odiParam/iv_actu_slip_no",actu_slip_no);
							
							//은행송금 의뢰서
							makeNodeValue("/root/oz_data/child2/ozrName","hd/HD_COM_3001_P");
							makeNodeValue("/root/oz_data/child2/odiParam/iv_cmpy_cd"     ,getProperty("ss_cmpycd") );	
							makeNodeValue("/root/oz_data/child2/odiParam/iv_actu_slip_no",actu_slip_no);
							
						 	// 레포트뷰어 호출.					
						 	openOzwin("/root/oz_data");	
							
						}
					]]>
				</script>
			</button>
			<button id="button13" class="btn03" style="left:738px; top:0px; width:64px; height:21px; ">
				<caption>전표취소</caption>
				<script type="javascript" ev:event="onclick">
					<![CDATA[
						var tmp_actu_slip_no = "xxxxxxxxxxxxx";
						var cnt = 0;
						for(var i=1;i<datagrid2.rows;i++){
							var actu_slip_no = model1.getValue("/root/resData/gridData/record["+i+"]/actu_slip_no");
							if(actu_slip_no != ""){
								if(tmp_actu_slip_no !=  actu_slip_no){
									tmp_actu_slip_no =  actu_slip_no;
									cnt++;
								}
							}
						}
						if(cnt > 1){
							alert("취소할전표를 조회하십시오.");
							return;
						}else if(cnt == 0){
							alert("취소할 전표가 없습니다.");	
							return;
						}
						
						if(searchFlag == false && actu_slip_no_in.value == ""){
							alert("취소할 전표번호를 조회하십시오.");	
							return;
						}								
						if(datagrid2.rows == -1){
							alert("취소할 전표가 없습니다.");
							return;
						}					
						if(datagrid2.rows == 1){
							alert("취소할 전표번호를 조회하십시오.");	
							return;
						}					
					
						if (window.alert("전표취소 하시겠습니까?", "확인", 1) != 1) {
							return;
						}				
						setDeleteSlipValue();
						for(var i=0;i<datagrid2.rows;i++){ 
							datagrid2.addStatus(i, "update");							
						}
						model1.setValue("/root/reqData/multiUpData", datagrid2.getUpdateData());
						model1.send("hd_ddemp_1006");
						actu_slip_no_in.value = "";						
						datagrid2.clearStatus();
						if(submit_completed()) {	
							model1.resetInstanceNode("/root/resData/gridData/record");
							model1.refresh();
							gridSearchList()
						}
					]]>
				</script>
			</button>
			<button id="button1" class="btn03" style="left:806px; top:0px; width:64px; height:21px; ">
				<caption>장표출력</caption>
				<script type="javascript" ev:event="onclick">
					<![CDATA[
						var actu_slip_no = model1.getValue("/root/reqData/searchData/actu_slip_no");
						if (actu_slip_no == "") {
							alert("전표번호를 입력하여 조회한 후 출력하십시오.");
							return;
						}

						if (datagrid2.rows > 1) {
							if (datagrid2.valueMatrix(1, datagrid2.colRef("actu_slip_no")) != actu_slip_no) {
								alert("입력한 전표번호와 조회된 전표번호가 일치하지 않습니다.");
								return;
							}
						} else {
							alert("출력할 대상이 존재하지 않습니다. 전표번호를 다시 입력하여 조회 후 출력하십시오.");
							return;
						}
						
						// 오즈관련 노드 초기화..					
					 	resetOznode();					
					 						
					 	// ozr경로 및 odi 파일명으로 사용될 노드 및 value셋팅 ( OZR파일경로 .ozr 제거)					
				 	 	makeNodeValue("/root/oz_data/ozrName","hd/HD_DDEMP_1106");
						makeNodeValue("/root/oz_data/preview","preview"); 			//preview : 미리보기, print : 인쇄
						makeNodeValue("/root/oz_data/printsize",""); 					//페이지용지설정(기본 A4)																				
									
					 	// odi 파라미터 설정.					
					 	makeNodeValue("/root/oz_data/odiParam/iv_cmpy_cd", getProperty("ss_cmpycd") );
						makeNodeValue("/root/oz_data/odiParam/iv_actu_slip_no", actu_slip_no );
						
						//은행송금 확인서
				 		makeNodeValue("/root/oz_data/childCount","2");
				
						makeNodeValue("/root/oz_data/child1/ozrName","hd/HD_COM_3000_P");
						makeNodeValue("/root/oz_data/child1/odiParam/iv_cmpy_cd"     ,getProperty("ss_cmpycd") );	
						makeNodeValue("/root/oz_data/child1/odiParam/iv_actu_slip_no",actu_slip_no);
						
						//은행송금 의뢰서
						makeNodeValue("/root/oz_data/child2/ozrName","hd/HD_COM_3001_P");
						makeNodeValue("/root/oz_data/child2/odiParam/iv_cmpy_cd"     ,getProperty("ss_cmpycd") );	
						makeNodeValue("/root/oz_data/child2/odiParam/iv_actu_slip_no",actu_slip_no);
						
					 	// 레포트뷰어 호출.					
					 	openOzwin("/root/oz_data");	
					]]>
				</script>
			</button>
		</group>
		<caption id="rowCnt" style="left:809px; top:700px; width:125px; height:20px; font-weight:bold; text-align:right; "/>
		<caption id="caption2" class="tit02" visibility="hidden" style="left:210px; top:130px; width:335px; height:20px; font-weight:bold; ">저장, 수정, 삭제시 체크박스를 선택해주세요.</caption>
	</xhtml:body>
</xhtml:html>

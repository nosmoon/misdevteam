<?xml version="1.0" encoding="EUC-KR"?>
<?xml-stylesheet href="../../../css/style_sheet.css" type="text/css" ?>
<xhtml:html xmlns:ex="http://www.comsquare.co.kr/xforms/excel" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:my="http://www.comsquare.co.kr/example" xmlns:ms="urn:schemas-microsoft-com:xslt" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/2002/01/xforms" xmlns:ev="http://www.w3.org/2001/xml-events" xmlns:cs="http://www.comsquare.co.kr/xforms">
	<xhtml:head>
		<xhtml:title>Untitle</xhtml:title>
		<model id="model1">
			<instance id="instance1">
				<root xmlns="">
					<initData>
						<!-- 화면 로딩시의 초기 데이터를 담당 -->
						<session/>
						<!-- 서버의 세션 정보를 담당한다 -->
						<comboSet>
							<!-- 선택계열의 정보를 담당 -->
							<dept_cd_1>
								<item/>
							</dept_cd_1>
							<dept_cd_2>
								<item/>
							</dept_cd_2>
							<proc_clsf>
								<item>
									<label/>
									<value/>
								</item>
							</proc_clsf>
						</comboSet>
						<!-- 콤보리스트와 같은 선택게열의 데이터는 <item>을 반복함으로써 list를 구성한다. -->
						<pageInfo>
							<!-- 해당 화면의 필요한 기타 정보들을 추가운영 할 수 있다 -->
						</pageInfo>
						<!-- 해당 화면의 필요한 기타 정보들을 추가운영 할 수 있다 -->
						<infoData>
							<dty_nm/>
							<dty_cd/>
							<dept_nm/>
							<dept_cd/>
							<flnm/>
							<emp_no/>
							<posi_nm/>
							<posi_cd/>
						</infoData>
						<hd_dalon_2040_m>
							<dataSet>
								<xx_dept_cd/>
								<xx_proc_stat_010/>
								<xx_proc_stat_020/>
								<xx_proc_stat_030/>
								<xx_proc_stat_040/>
								<xx_proc_stat_050/>
								<xx_proc_stat_060/>
							</dataSet>
						</hd_dalon_2040_m>
					</initData>
					<reqData>
						<!-- 전달하고자 하는 데이터를 담당 ( submit 함수에서 처리) -->
						<!-- 검색조건 처리 -->
						<!-- formData 팝업,화면전환시 data이동시 -->
						<!-- MultiUpDate유형 사용시 처리 -->
						<searchData>
							<duty_dt_fm/>
							<duty_dt_to/>
							<!--<dept_cd>250000</dept_cd>-->
							<dept_cd/>
							<dept_nm/>
							<emp_no/>
							<flnm/>
							<pay_dt/>
							<cmpy_cd/>
							<mang_seq/>
							<not_cost_obj_clsf/>
							<search_emp_no/>
							<search_duty_dt/>
							<search_dept_cd/>
							<actu_slip_no/>
							<tmp_crdt_amt/>
							<titl/>
							<slip_seq/>
							<slip_occr_dt/>
							<slip_clsf_cd/>
							<incmg_pers/>
							<incmg_pers_ipadd/>
							<proc_clsf/>
							<slip_proc_seq/>
						</searchData>
						<fwdData>
							<func_nm/>
							<emp_no/>
						</fwdData>
						<multiUpData/>
						<reqForm>
							<cmpy_cd/>
							<flnm/>
							<dept_cd/>
							<dept_nm/>
							<dty_cd/>
							<dty_nm/>
							<posi_cd/>
							<posi_nm/>
							<chrg_job/>
							<edu_nm/>
							<edu_instt/>
							<edu_frdt/>
							<edu_dds/>
							<edu_cost/>
							<remk/>
							<edu_todt/>
							<edu_tm/>
							<edu_dds_fm/>
							<edu_dds_to/>
							<expen_dt/>
							<expen_num/>
							<train_flag/>
							<nation_flag/>
							<emp_no/>
						</reqForm>
						<multiUpData1/>
					</reqData>
					<resData>
						<!-- 전달 받은 데이터를 담당 ( submit의 결과가 담김) -->
						<!-- 전달 받은 formData를 담당 ( submit의 결과가 담김) -->
						<!-- 전달 받은 데이터를 가공할 임시저장소 ( submit의 결과가 담김) -->
						<!-- 전달 받은 errorCode를 담당 ( submit의 결과가 담김) -->
						<!-- 전달 받은 errorMsg를 담당 ( submit의 결과가 담김) -->
						<gridData>
							<!-- 전달 받은 grid데이터를 담당 ( submit의 결과가 담김) -->
							<record>
								<emp_no/>
								<flnm/>
								<dept_nm/>
								<dty_nm/>
								<posi_nm/>
								<dept_cd/>
								<dty_cd/>
								<posi_cd/>
								<cmpy_cd/>
								<connect_ip/>
								<connect_userid/>
								<duty_dt/>
								<prvdd_prsnt_tm/>
								<prvdd_finish_tm/>
								<thdd_prsnt_tm/>
								<thdd_finish_tm/>
								<pay_dt/>
								<pay_cost/>
								<proc_stat/>
								<thdd_duty_tm/>
								<vgl_duty_dt/>
								<proc_stat_nm/>
								<slip_proc_mang_seq/>
								<slip_proc_mang_dt/>
								<actu_slip_no/>
								<slip_proc_seq/>
							</record>
							<sub/>
							<!-- datagrid2 -->
							<detail/>
							<!-- datagrid3 -->
						</gridData>
						<resForm>
							<emp_no/>
							<nm_korn/>
							<appmt_cd/>
							<appmt_dt_fm/>
							<appmt_dt_to/>
							<dept_cd/>
							<appmt_stat_clsf/>
							<appmt_sort/>
							<lvcmpy_dt/>
							<dept_nm/>
							<appmt_dt/>
							<temp/>
							<appmt_nm/>
						</resForm>
						<msg/>
						<resPhoto type="xsd:base64Binary"/>
						<slipData>
							<record>
								<cmpy_cd/>
								<emp_no/>
								<dept_cd/>
								<flnm/>
								<tmp_dr_amt/>
								<tmp_crdt_amt/>
								<titl/>
								<slip_seq/>
								<slip_occr_dt/>
								<slip_clsf_cd/>
								<incmg_pres/>
								<incmg_pers_ipadd/>
								<proc_stat/>
							</record>
						</slipData>
						<totcnt/>
						<search>
							<emp_no/>
							<nm_korn/>
							<gubun/>
						</search>
					</resData>
					<tempData/>
					<tempData2/>
				</root>
			</instance>
			<script type="javascript">
				<![CDATA[
				/*
					function loadData(emp, nm, gubun){
						model1.setValue("/root/resData/resForm/emp_no", emp);
						model1.setValue("/root/reqData/searchData/emp_no", emp);
						model1.setValue("/root/resData/resForm/nm_korn", nm);
						model1.setValue("/root/reqData/searchData/nm_korn", nm);
						model1.setValue("/root/reqData/searchData/flnm", nm);
						
						if(gubun == "N"){
							model1.setValue("/root/reqData/reqForm/emp_no", emp);
							model1.setValue("/root/reqData/reqForm/flnm", nm);
						}
						
						model1.send("hd_appmt_1001");
						model1.copyNode("/root/resData/gridData", "/root/tempData");
						
						//model1.send("hd_appmt_1002");
						//model1.copyNode("/root/resData/resForm", "/root/tempData");
						model1.refresh();
					}
					function setEmp_no_i(emp_no, nm_korn){
						model1.setValue("/root/reqData/reqForm/emp_no", emp_no);
						model1.setValue("/root/reqData/reqForm/flnm", nm_korn);
						model1.refresh();
					}
					*/
					function setDept_cd_i(iv_dept_cd, iv_dept_nm){
						model1.setValue("/root/reqData/searchData/dept_cd", iv_dept_cd);
						model1.setValue("/root/reqData/searchData/dept_nm", iv_dept_nm);
						model1.refresh();
					}
					/*
					function setDept_cd(iv_dept_cd, iv_dept_nm){
						//model1.reset();
						model1.setValue("/root/resData/resForm/dept_cd", iv_dept_cd);
						model1.setValue("/root/resData/resForm/dept_nm", iv_dept_nm);
						model1.setValue("/root/reqData/searchData/dept_cd", iv_dept_cd);
						//var clos_proc_yn = model1.getValue("/root/resData/resForm/clos_proc_yn");
						var lvcmpy_dt = model1.getValue("/root/resData/resForm/lvcmpy_dt");
						//model1.setValue("/root/reqData/searchData/clos_proc_yn", clos_proc_yn);
						model1.setValue("/root/reqData/searchData/lvcmpy_dt", lvcmpy_dt);
						
						model1.send("hd_appmt_1001");
						model1.copyNode("/root/resData/gridData", "/root/tempData");
						//input4.refresh();
						//input28.refresh();
						model1.refresh();
					}
					*/
						var searchFlag = false;
						
						function slipInsertList(){						
							model1.copyNode("/root/resData/slipData", "/root/dataSet/CURLIST1");				
							datagrid2.isReadOnly(1, 1, 1, 17)  = false;	
							model1.refresh();				
							//setTotal_amt_pep();
							setDeleteSlipValue();
							searchFlag = true;
						}
					     //총금액 총인원 구하기
					     function setTotal_amt_pep(){
					     	var row1 = datagrid1.rows;
					     	var total_amt = 0;
					     	var cnt = 0;
							var cnt2 = 0;
					     	if(row1 == 1 || row1 == -1){
					     		return;
					     	}
							if(row1 > 1 && datagrid1.valueMatrix(1, 1) != ""){					     	

								var s_flnm = model1.getValue("/root/resData/slipData/record[1]/flnm");
						     	for(var i=1;i < row1;i++){
						     		var alon_amt = model1.getValue("/root/resData/slipData/record["+i+"]/tmp_dr_amt");
						     		total_amt =  Number(total_amt) + Number(alon_amt);
						     		cnt++;
						     	}
								cnt2 = cnt;
						     	cnt = cnt - 1;
						     	if(cnt == 0){
						     		model1.setValue("/root/resData/slipData/record[1]/tmp_crdt_amt",total_amt);
									model1.setValue("/root/resData/slipData/record[1]/titl",s_flnm+" 야간당직비");								
						     		model1.setValue("/root/reqData/searchData/tmp_crdt_amt",total_amt);
									model1.setValue("/root/reqData/searchData/titl",s_flnm+" 야간당직비");								
						     	}else{
						     		model1.setValue("/root/resData/slipData/record[1]/tmp_crdt_amt",total_amt);
									//model1.setValue("/root/resData/slipData/record[1]/titl",s_flnm+" 외 "+cnt+"명 철야연근비");	
									model1.setValue("/root/resData/slipData/record[1]/titl"," 편집국 "+cnt2+"건 야간당직비");	
						     		model1.setValue("/root/reqData/searchData/tmp_crdt_amt",total_amt);
									//model1.setValue("/root/reqData/searchData/titl",s_flnm+" 외 "+cnt+"명 철야연근비");		
									model1.setValue("/root/reqData/searchData/titl"," 편집국 "+cnt2+"건 야간당직비");		
						     	}						     	

							}
							model1.refresh();
					     }			
					     //전표등록시 벨류
					     function setInsertSlipValue(){
					     	
					     	var row = datagrid1.rows;
					     	var total_amt = 0;
					     	var cnt = 0;
					     	
					     	if(row == 1){
					     		return;
					     	}
							else if(row > 1){					     	
								var tmp_crdt_amt = model1.getValue("/root/resData/slipData/record[1]/tmp_crdt_amt");
								var titl = model1.getValue("/root/resData/slipData/record[1]/titl");
					     		model1.setValue("/root/reqData/searchData/tmp_crdt_amt",tmp_crdt_amt);
					     		model1.setValue("/root/reqData/searchData/titl",titl);
							}
							model1.refresh();
					     }					     
					     
					     
					     //전표 삭제시 벨류
					     function setDeleteSlipValue(){
					     	
					     	var row = datagrid1.rows;
					     	var total_amt = 0;
					     	var cnt = 0;
					     	
					     	if(row == 1){
					     		return;
					     	}
							else if(row > 1){					     	
								var slip_seq = model1.getValue("/root/resData/slipData/record[1]/slip_seq");
								var slip_occr_dt = model1.getValue("/root/resData/slipData/record[1]/slip_occr_dt");
								var slip_clsf_cd = model1.getValue("/root/resData/slipData/record[1]/slip_clsf_cd");
								var incmg_pers = model1.getValue("/root/resData/slipData/record[1]/incmg_pers");
								var incmg_pers_ipadd = model1.getValue("/root/resData/slipData/record[1]/incmg_pers_ipadd");
					     		model1.setValue("/root/reqData/searchData/slip_seq",slip_seq);
					     		model1.setValue("/root/reqData/searchData/slip_occr_dt",slip_occr_dt);
					     		model1.setValue("/root/reqData/searchData/slip_clsf_cd",slip_clsf_cd);
					     		model1.setValue("/root/reqData/searchData/incmg_pers",incmg_pers);
					     		model1.setValue("/root/reqData/searchData/incmg_pers_ipadd",incmg_pers_ipadd);
							}
							model1.refresh();
					     }			
					var tmp_emp =  new Array();
					var emp_cnt = 0;
					//개별선택
				     function setTitl(val){
				     	var flnm = "";
				     	var cnt = 0;
				     	var tmp_cnt = 0;
				     	var all_cnt = 0;
				     	var flag = true;
				     	var pay = 0;
				     	var emp_no = model1.getValue("/root/resData/gridData/record["+datagrid2.row+"]/emp_no");
				     	var pay_cost = model1.getValue("/root/resData/gridData/record["+datagrid2.row+"]/pay_cost");//지금액
				     	//차변금액 등록
				     	if(val == 1){
				     		for(var i=1;i<datagrid1.rows;i++){
				     			var s_emp_no = model1.getValue("/root/resData/slipData/record["+i+"]/emp_no");
				     			var tmp_dr_amt = model1.getValue("/root/resData/slipData/record["+i+"]/tmp_dr_amt");//차변금액
				     			if(s_emp_no == emp_no ){
				     				pay = Number(tmp_dr_amt) + Number(pay_cost);
				     				model1.setValue("/root/resData/slipData/record["+i+"]/tmp_dr_amt",pay);
				     				if(pay > 1){
				     					datagrid1.rowStatus(i) = 1;
//				     					emp_cnt++;
				     				}
				     			}
				     		}
				     		datagrid1.refresh();
				     	}else{
				     		for(var i=1;i<datagrid1.rows;i++){
				     			var s_emp_no = model1.getValue("/root/resData/slipData/record["+i+"]/emp_no");
				     			var tmp_dr_amt = model1.getValue("/root/resData/slipData/record["+i+"]/tmp_dr_amt");//차변금액
				     			if(s_emp_no == emp_no ){
				     				pay = Number(tmp_dr_amt) - Number(pay_cost);
				     				model1.setValue("/root/resData/slipData/record["+i+"]/tmp_dr_amt",pay);
				     				if(pay > 1){
				     					datagrid1.rowStatus(i) = 1;
				     				}else if(pay == 0){
				     					datagrid1.rowStatus(i) = 0;
//				     					emp_cnt--;
				     				}

				     			}
				     		}
			     		datagrid1.refresh();				     					     		
				     	} 

     					for(var k=1;k<datagrid1.rows;k++){
     						if(datagrid1.rowStatus(k) == 1){
     							all_cnt++;
     						}
     					}
     					emp_cnt = all_cnt 				     	
				     	//등록자 이름
			     	     for(var i=1;i<datagrid1.rows;i++){
							if(datagrid1.rowStatus(i) == 1){
								if(flnm == ""){
									flnm = model1.getValue("/root/resData/slipData/record["+i+"]/flnm");
								}
							}
				     	}
						if(emp_cnt == 1){
							model1.setValue("/root/resData/slipData/record/titl",flnm+" 회의비");
							model1.setValue("/root/reqData/searchData/titl",flnm+" 회의비");							
						}else if(emp_cnt > 1) {
							cnt = emp_cnt - 1;
							model1.setValue("/root/resData/slipData/record/titl",flnm+" 외 "+cnt+"명 회의비");		
							model1.setValue("/root/reqData/searchData/titl",flnm+" 외 "+cnt+"명 회의비");						
						}
						datagrid1.refresh();
				     }		
    				     //전체선택
				     function setTitl_all(val){
				     	var flnm = "";
				     	var cnt = 0;
				     	var flag = true;
				     	var row = datagrid1.rows;
				     	emp_cnt = 0;
						if(val == 1){
				     		for(var i=1;i<datagrid2.rows;i++){
				     			var emp_no = model1.getValue("/root/resData/gridData/record["+i+"]/emp_no");
				     			var pay_cost = model1.getValue("/root/resData/gridData/record["+i+"]/pay_cost");//지급금액
								for(var k=1;k<datagrid1.rows;k++){					     			
					     			var s_emp_no = model1.getValue("/root/resData/slipData/record["+k+"]/emp_no");
					     			var tmp_dr_amt = model1.getValue("/root/resData/slipData/record["+k+"]/tmp_dr_amt");//차변금액
					     			if(emp_no == s_emp_no ){
					     				pay = Number(tmp_dr_amt) + Number(pay_cost);
					     				model1.setValue("/root/resData/slipData/record["+k+"]/tmp_dr_amt",pay);
					     			}
								}
				     		}
					     	//등록자 이름
				     	     for(var i=1;i<datagrid1.rows;i++){
								if(datagrid1.rowStatus(i) == 1){
									if(flnm == ""){
										flnm = model1.getValue("/root/resData/slipData/record["+i+"]/flnm");
									}
								}
					     	}				     		
				     		datagrid1.refresh();
				     		emp_cnt = datagrid1.rows - 1;
				     		cnt = emp_cnt;
							if(cnt == 1){
								model1.setValue("/root/resData/slipData/record/titl",flnm+" 회의비");
								model1.setValue("/root/reqData/searchData/titl",flnm+" 회의비");
							}else{
								cnt = cnt - 1
								model1.setValue("/root/resData/slipData/record/titl",flnm+" 외 "+cnt+"명 회의비");								
								model1.setValue("/root/reqData/searchData/titl",flnm+" 외 "+cnt+"명 회의비");
							}
						}else {
				     	     for(var i=1;i<datagrid1.rows;i++){
			     				model1.setValue("/root/resData/slipData/record["+i+"]/tmp_dr_amt",0);
				     			emp_cnt = 0;
					     	}							
							model1.setValue("/root/resData/slipData/record/titl","");								
							model1.setValue("/root/reqData/searchData/titl","");
						}
						datagrid1.refresh();
				     }	
				     //대변금액합계	
					function slip_submit_sum(){
						var row = datagrid1.row;	
						var sum_amt = 0;
						for(var i=1 ;i< datagrid1.rows;i++){
							if(datagrid1.rowStatus(i) == 1){
								var amt = model1.getValue("/root/resData/slipData/record["+i+"]/tmp_dr_amt");
								sum_amt = Number(sum_amt) + Number(amt);
							}
						}
						model1.setValue("/root/resData/slipData/record[1]/tmp_crdt_amt",sum_amt);
						model1.setValue("/root/reqData/searchData/tmp_crdt_amt",sum_amt);
						datagrid1.refresh();
					}  
					
					//적요
					function slip_remark(){
						var emp_cnt = 0;
						var flnm = "";
						var dept_nm = "";
						var fstSel = "1";
						
						for(var k=1;k<datagrid2.rows;k++){
	     						if(datagrid2.valueMatrix(k, datagrid2.colRef("chk")) == 1){
	     							emp_cnt++;
	     							
	     							if(fstSel == "1"){
	     								var remark_flnm = model1.getValue("/root/resData/gridData/record["+k+"]/flnm");
	     								var remark_dept_nm = model1.getValue("/root/resData/gridData/record["+k+"]/dept_nm");
	     								fstSel = "2";
	     							}
	     						}
	     					}
	     					
						if(emp_cnt == 1){
							model1.setValue("/root/resData/slipData/record/titl", remark_dept_nm + " " + remark_flnm +" 야간당직비");
							model1.setValue("/root/reqData/searchData/titl", remark_dept_nm + " " + remark_flnm +" 야간당직비");							
						}else if(emp_cnt > 1) {
							//emp_cnt = emp_cnt - 1;
							model1.setValue("/root/resData/slipData/record/titl", remark_dept_nm + " " + remark_flnm + " 외 "+ emp_cnt +"건 야간당직비");		
							model1.setValue("/root/reqData/searchData/titl", remark_dept_nm + " " + remark_flnm + " 외 "+ emp_cnt +"건 야간당직비");						
						}
						datagrid1.refresh();
					}
					function search(row, emp_no, nm_korn){
						model1.setValue("/root/resData/search/emp_no", emp_no); // 사번
						model1.setValue("/root/resData/search/nm_korn", nm_korn); // 성명
						model1.send("hd_dalon_1907");
						if(model1.getValue("/root/dataSet/CURLIST/record/cnt") == "0"){
							alert("편집국 사원만 조회가능합니다.");
							model1.removenode("/root/dataSet");
							model1.setValue("/root/resData/search/gubun", "1");
						    	for(var i = 1; i < datagrid2.cols - 1; i++){
						    		datagrid2.valueMatrix(row, i) = "";
						    	}
							return;
						}
						model1.removenode("/root/dataSet");
						model1.setValue("/root/resData/search/gubun", "2");
					}
					function setEmp_no_pop(emp_no, nm_korn){
						var row = datagrid2.row;
						search(row, emp_no, nm_korn);
						if(model1.getValue("/root/resData/search/gubun") == "2"){
							model1.setValue("/root/resData/gridData/record["+row+"]/emp_no", model1.getValue("/root/tempData/emp_no")); // 사번
							model1.setValue("/root/resData/gridData/record["+row+"]/flnm", model1.getValue("/root/tempData/nm_korn")); // 성명
							model1.setValue("/root/resData/gridData/record["+row+"]/dept_cd", model1.getValue("/root/tempData/dept_cd")); // 부서코드
							model1.setValue("/root/resData/gridData/record["+row+"]/dept_nm", model1.getValue("/root/tempData/dept_nm")); // 부서명
							model1.setValue("/root/resData/gridData/record["+row+"]/dty_cd", model1.getValue("/root/tempData/dty_cd")); // 직책코드
							model1.setValue("/root/resData/gridData/record["+row+"]/dty_nm", model1.getValue("/root/tempData/dty_nm")); // 직책명
							model1.setValue("/root/resData/gridData/record["+row+"]/posi_cd", model1.getValue("/root/tempData/posi_cd")); // 직급코드
							model1.setValue("/root/resData/gridData/record["+row+"]/posi_nm", model1.getValue("/root/tempData/posi_nm")); // 직급명
						}
						model1.removenode("/root/tempData");
						model1.refresh();
					}
					function setEmp_no_i(emp_no, nm_korn){
						model1.setValue("/root/resData/search/emp_no", emp_no); // 사번
						model1.setValue("/root/resData/search/nm_korn", nm_korn); // 성명
						model1.send("hd_dalon_1907");
						
						if(model1.getValue("/root/dataSet/CURLIST/record/cnt") == "0"){
							alert("편집국 사원만 조회가능합니다.");
							model1.removenode("/root/dataSet");
							model1.setValue("/root/reqData/searchData/emp_no", "");
							model1.setValue("/root/reqData/searchData/flnm", "");
							model1.refresh();
							return;
						}
						model1.setValue("/root/reqData/searchData/emp_no", emp_no); // 사번
						model1.setValue("/root/reqData/searchData/flnm", nm_korn); // 성명
						model1.removenode("/root/dataSet");
						model1.refresh();
					}
					
					function setEmp_no(emp_no, nm_korn){
						
						var row = datagrid2.row;
						setInfoSearchInput(emp_no, nm_korn, "", "setEmp_no_pop"); // 사번, 성명, 주민번호
						if(model1.getValue("/root/tempData/totalcnt") != 1){
							return;
						} // 카운트
						model1.setValue("/root/resData/gridData/record["+row+"]/emp_no", model1.getValue("/root/tempData/emp_no")); // 사번
						model1.setValue("/root/resData/gridData/record["+row+"]/flnm", model1.getValue("/root/tempData/nm_korn")); // 성명
						model1.setValue("/root/resData/gridData/record["+row+"]/dept_cd", model1.getValue("/root/tempData/dept_cd")); // 부서코드
						model1.setValue("/root/resData/gridData/record["+row+"]/dept_nm", model1.getValue("/root/tempData/dept_nm")); // 부서명
						model1.setValue("/root/resData/gridData/record["+row+"]/dty_cd", model1.getValue("/root/tempData/dty_cd")); // 직책코드
						model1.setValue("/root/resData/gridData/record["+row+"]/dty_nm", model1.getValue("/root/tempData/dty_nm")); // 직책명
						model1.setValue("/root/resData/gridData/record["+row+"]/posi_cd", model1.getValue("/root/tempData/posi_cd")); // 직급코드
						model1.setValue("/root/resData/gridData/record["+row+"]/posi_nm", model1.getValue("/root/tempData/posi_nm")); // 직급명
						model1.removenode("/root/tempData");
						/*model1.setValue("/root/reqData/reqForm/emp_no", emp_no);
						model1.setValue("/root/reqData/reqForm/flnm", nm_korn);
						model1.setValue("/root/reqData/reqForm/cmpy_cd", "100");
						model1.send("hd_dalon_1402");
						
						model1.copyNode("/root/initData/infoData", "/root/tempData");							
						model1.setValue("/root/resData/gridData/record["+ (selectedIdx) +"]/emp_no"	, model.getValue("/root/initData/infoData/emp_no"));
						model1.setValue("/root/resData/gridData/record["+ (selectedIdx) +"]/flnm"	, model.getValue("/root/initData/infoData/flnm"));
						model1.setValue("/root/resData/gridData/record["+ (selectedIdx) +"]/dept_cd"	, model.getValue("/root/initData/infoData/dept_cd"));
						model1.setValue("/root/resData/gridData/record["+ (selectedIdx) +"]/dept_nm"	, model.getValue("/root/initData/infoData/dept_nm"));
						model1.setValue("/root/resData/gridData/record["+ (selectedIdx) +"]/dty_cd"	, model.getValue("/root/initData/infoData/dty_cd"));
						model1.setValue("/root/resData/gridData/record["+ (selectedIdx) +"]/dty_nm"	, model.getValue("/root/initData/infoData/dty_nm"));
						model1.setValue("/root/resData/gridData/record["+ (selectedIdx) +"]/posi_cd"	, model.getValue("/root/initData/infoData/posi_cd"));
						model1.setValue("/root/resData/gridData/record["+ (selectedIdx) +"]/posi_nm"	, model.getValue("/root/initData/infoData/posi_nm"));*/
						model1.refresh();
					}


					function makeComboSet(gubun, source_ref, target_ref, ref_label, ref_value){
					    var desNode = target_ref + "/item";
					    var label, value;
					    
					    if ( gubun == "A" ) {
					        label = "전체";
					        value = "";
					    } else if ( gubun == "S" ){
					        label = "선택";
					        value = "";
					    } else if ( gubun == "N" ){
					    } else {
					        label = " ";
					        value = "";
					    }
					    
					    //원 노드를 삭제하고 전체, 선택, ""을 셋팅한다.
					    if (gubun != "N") {
							    model.removeNodeset(target_ref);
							    model.makeNode(target_ref); 
							    model.makeNode(desNode);
							    
							    model.makeNode(desNode + "/label");
							    model.makeNode(desNode + "/value");
							    
							    model.setValue(desNode + "/label", label);
							    model.setValue(desNode + "/value", value) ;
					    } else {
					        model.removeNodeset(target_ref);
					    }    
					    //전체, 선택 다음 노드에 원자료를 셋팅한다.
					    if ( instance1.selectSingleNode(source_ref) != null ) {
					        var arr = instance1.selectSingleNode(source_ref); 
					        var len = arr.length;
					
					        if ( len > 0 ) {
					            for ( var i = 1 ; i <= len ; i++ ) {
					                model.makeNode(desNode + "[" + (i+1) + "]");
					                model.makeNode(desNode + "[" + (i+1) + "]/label");
					                model.makeNode(desNode + "[" + (i+1) + "]/value");
					                model.setValue(desNode + "[" + (i+1) + "]/label", model.getValue(source_ref + "[" + i + "]/" + ref_label));
					                model.setValue(desNode + "[" + (i+1) + "]/value", model.getValue(source_ref + "[" + i + "]/" + ref_value));
					            }
					        } else {
					            model.makeNode(desNode + "[" + 2 + "]");
					            model.makeNode(desNode + "[" + 2 + "]/label");
					            model.makeNode(desNode + "[" + 2 + "]/value");
					            model.setValue(desNode + "[" + 2 + "]/label", model.getValue(source_ref + "/" + ref_label));
					            model.setValue(desNode + "[" + 2 + "]/value", model.getValue(source_ref + "/" + ref_value));
					        }
					    } 
					    model.refresh();
					}
					
					/**
					*  부서의 팝업 띄울때 콜백 함수
					**/
					function setDept_cd(iv_dept_cd, iv_dept_nm){
						//alert(iv_dept_cd + "\n" + iv_dept_nm);
						model1.setValue("/root/reqData/searchData/dept_cd", iv_dept_cd);
						model1.setValue("/root/reqData/searchData/dept_nm", iv_dept_nm);
						model1.refresh();
					}
				]]>
			</script>
			<script type="javascript" ev:event="xforms-ready">
				<![CDATA[			
					//model.send("hd_dalon_2040_m");	
					/*
					alert(model1.getValue("/root/initData/hd_dalon_2040_m/dataSet/xx_dept_cd"));
					alert(model1.getValue("/root/initData/hd_dalon_2040_m/dataSet/xx_proc_stat_010"));
					alert(model1.getValue("/root/initData/hd_dalon_2040_m/dataSet/xx_proc_stat_020"));
					alert(model1.getValue("/root/initData/hd_dalon_2040_m/dataSet/xx_proc_stat_030"));
					alert(model1.getValue("/root/initData/hd_dalon_2040_m/dataSet/xx_proc_stat_040"));
					alert(model1.getValue("/root/initData/hd_dalon_2040_m/dataSet/xx_proc_stat_050"));
					alert(model1.getValue("/root/initData/hd_dalon_2040_m/dataSet/xx_proc_stat_060"));
					*/
					
					//부서코드에 데이터 셋팅하려고 환경변수 작업을 했지만 일단 셋팅하지 않는것으로 함 120118 김정회 (임팀장님과 상의)
					//model1.setValue("/root/reqData/searchData/dept_cd", model1.getValue("/root/initData/hd_dalon_2040_m/dataSet/xx_dept_cd"));
					//alert(model1.getValue("/root/initData/hd_dalon_2040_m/dataSet/xx_proc_stat_010").indexOf(3));	
					
					//현재일자 구하기
					var now_date = new Date();
					var year = now_date.getYear();
					var month = now_date.getMonth() + 1;
					var day = now_date.getDate();    
					var month_tm = '0' + month;
					var day_tm = '0' + day;  
					if(month_tm.length == 3){
						month_tm = month_tm.substring(1, 3);
					}
					if(day_tm.length == 3){
						day_tm = day_tm.substring(1, 3);
					}
					var now_dt = year + month_tm + day_tm;
					
					//시작일자 구하기
					var afr_date = new Date();
					var afr_date1 = new Date(afr_date.getYear(), afr_date.getMonth(), afr_date.getDate()-14 );
					var year1 = afr_date1.getYear();
					var month1 = afr_date1.getMonth() + 1;
					var day1 = afr_date1.getDate();   
					var month_tm1 = '0' + month1;
					var day_tm1 = '0' + day1;  
					if(month_tm1.length == 3){
						month_tm1 = month_tm1.substring(1, 3);
					}
					if(day_tm1.length == 3){
						day_tm1 = day_tm1.substring(1, 3);
					}
					var afr_dt = year1 + month_tm1 + day_tm1;
					
					var annc_frdt = afr_dt
					var annc_todt = now_dt
					
					model1.setValue("/root/reqData/searchData/duty_dt_fm", annc_frdt);
					model1.setValue("/root/reqData/searchData/duty_dt_to", annc_todt);
					model1.refresh();
					
					/*
					//model1.copyNode("/root/resData/gridData", ""); 
					//datagrid2.visible = true;
					model1.copyNode("/root/initData/comboSet/dept_cd_1", "/root/tempData/dept_cd_1");
					model1.copyNode("/root/initData/comboSet/dept_cd_2", "/root/tempData/dept_cd_2");
					model1.copyNode("/root/initData/comboSet/dept_cd_3", "/root/tempData/dept_cd_3");
					//combo1.refresh();
					//combo2.refresh();
					datagrid2.isReadOnly(1, 1, 1, 9)  = true;
					datagrid2.refresh();
											
					model1.refresh();
					
					model1.setValue("/root/reqData/searchData/cmpy_cd", "100");
					model1.setValue("/root/reqData/searchData/not_cost_obj_clsf", "90");
					model1.send("hd_dalon_1800");
					model1.copyNode("/root/initData/comboSet/dept_cd_1", "/root/tempData/dept_cd_1");
					model1.copyNode("/root/initData/comboSet/dept_cd_2", "/root/tempData/dept_cd_2");
					*/
					
					model1.send("hd_dalon_2040");
					/*
					alert(model1.getValue("/root/tempData/dataSet/xx_dept_cd"));
					alert(model1.getValue("/root/tempData/dataSet/xx_proc_stat_010"));
					alert(model1.getValue("/root/tempData/dataSet/xx_proc_stat_020"));
					alert(model1.getValue("/root/tempData/dataSet/xx_proc_stat_030"));
					alert(model1.getValue("/root/tempData/dataSet/xx_proc_stat_040"));
					alert(model1.getValue("/root/tempData/dataSet/xx_proc_stat_050"));
					alert(model1.getValue("/root/tempData/dataSet/xx_proc_stat_060"));
					*/
										
					model1.setValue("/root/initData/hd_dalon_2040_m/dataSet/xx_dept_cd", model1.getValue("/root/tempData/dataSet/xx_dept_cd"));
					model1.setValue("/root/initData/hd_dalon_2040_m/dataSet/xx_proc_stat_010", model1.getValue("/root/tempData/dataSet/xx_proc_stat_010"));
					model1.setValue("/root/initData/hd_dalon_2040_m/dataSet/xx_proc_stat_020", model1.getValue("/root/tempData/dataSet/xx_proc_stat_020"));
					model1.setValue("/root/initData/hd_dalon_2040_m/dataSet/xx_proc_stat_030", model1.getValue("/root/tempData/dataSet/xx_proc_stat_030"));
					model1.setValue("/root/initData/hd_dalon_2040_m/dataSet/xx_proc_stat_040", model1.getValue("/root/tempData/dataSet/xx_proc_stat_040"));
					model1.setValue("/root/initData/hd_dalon_2040_m/dataSet/xx_proc_stat_050", model1.getValue("/root/tempData/dataSet/xx_proc_stat_050"));
					model1.setValue("/root/initData/hd_dalon_2040_m/dataSet/xx_proc_stat_060", model1.getValue("/root/tempData/dataSet/xx_proc_stat_060"));
					
					
					makeComboSet("N", "/root/tempData/dataSet/CURLIST/record", "/root/initData/comboSet/proc_clsf", "cdabrvnm_cd", "cd");
					model1.removenode("/root/tempData");

					datagrid2.addStatus(1, "insert");	
					datagrid2.fixedcellcheckbox(0, datagrid2.colRef("chk"), false) = true;
					//datagrid2.isReadOnly(1, 1, 1, 16)  = true;
					datagrid2.refresh();		
				]]>
			</script>
			<submission id="hd_dalon_2040" action="/hd/dalon/2040" mediatype="application/x-www-form-urlencoded" method="post" resultref="/root/tempData/dataSet"/>
			<!--사용안함<submission id="hd_dalon_1402" action="/hd/dalon/1402" mediatype="application/x-www-form-urlencoded" method="post" ref="/root/reqData/reqForm" resultref="/root/tempData"/>-->
			<!--사용안함<<submission id="hd_dalon_1702" action="/hd/dalon/1702" mediatype="application/x-www-form-urlencoded" method="post" ref="/root/reqData/searchData" resultref="/root/tempData"/>-->
			<submission id="hd_dalon_2041" action="/hd/dalon/2041" mediatype="application/x-www-form-urlencoded" method="post" ref="/root/reqData/searchData" resultref="/root/dataSet"/>
			<!--수당생성(구)<submission id="hd_dalon_1901" action="/hd/dalon/1901" mediatype="application/x-www-form-urlencoded" method="post" ref="/root/reqData/searchData" resultref="/root/tempData"/>-->
			<!--<submission id="hd_dalon_1911" action="/hd/dalon/1911" mediatype="application/x-www-form-urlencoded" method="post" ref="/root/reqData/searchData" resultref="/root/tempData"/>-->
			<submission id="hd_dalon_2047" action="/hd/dalon/2047" mediatype="application/x-www-form-urlencoded" method="post" ref="/root/reqData/searchData" resultref="/root/tempData"/>
			<!--사용안함<submission id="hd_dalon_1912" action="/hd/dalon/1912" mediatype="application/x-www-form-urlencoded" method="post" ref="/root/reqData/searchData" resultref="/root/tempData"/>-->
			<submission id="hd_dalon_2042" action="/hd/dalon/2042" mediatype="application/x-www-form-urlencoded" method="post" ref="/root/reqData/searchData" resultref="/root/tempDate"/>
			<submission id="hd_dalon_2043" action="/hd/dalon/2043" mediatype="application/x-www-form-urlencoded" method="post" ref="/root/reqData/multiUpData" resultref="/root/dataSet"/>
			<!--사용안함<submission id="hd_dalon_1904" action="/hd/dalon/1904" mediatype="application/x-www-form-urlencoded" method="post" ref="/root/reqData/searchData" resultref="/root/tempData"/>-->
			<submission id="hd_dalon_2045" action="/hd/dalon/2045" mediatype="application/x-www-form-urlencoded" method="post" ref="/root/reqData" resultref="/root/tempData"/>
			<submission id="hd_dalon_2046" action="/hd/dalon/2046" mediatype="application/x-www-form-urlencoded" method="post" ref="/root/reqData" resultref="/root/tempData"/>
			<submission id="hd_dalon_1907" action="/hd/dalon/1907" mediatype="application/x-www-form-urlencoded" method="post" ref="/root/resData/search" resultref="/root/tempData2"/>
			<submission id="hd_dalon_2049" action="/hd/dalon/2049" mediatype="application/x-www-form-urlencoded" method="post" ref="/root/reqData/searchData/slip_proc_seq" resultref="/root/tempData"/>
			<!--사용안함<submission id="hd_dalon_1913" action="/hd/dalon/1913" mediatype="application/x-www-form-urlencoded" method="post" ref="/root/reqData/searchData" resultref="/root/tempData"/>-->
			<!--사용안함<submission id="hd_dalon_1914" action="/hd/dalon/1914" mediatype="application/x-www-form-urlencoded" method="post" ref="/root/reqData/searchData" resultref="/root/tempData"/>-->
			<!--사용안함<submission id="hd_dalon_2040_m" action="/hd/dalon/2048" mediatype="application/x-www-form-urlencoded" method="post" resultref="/root/initData/hd_dalon_2040_m/dataSet"/>-->
		</model>
		<script type="javascript" src="/js/CIISComm.js"/>
	</xhtml:head>
	<!--<xhtml:body class="main" pagewidth="946" pageheight="765">-->
	<xhtml:body class="main" pagewidth="946" pageheight="728" guideline="1,934;1,10;1,934;" style="font-family:굴림; ">
		<import id="iv_Title" src="../../../common/xrw/iv_TitleBar.xrw" style="left:10px; top:5px; width:926px; height:29px; "/>
		<!--
		<output id="output2" ref="/root/reqData/reqForm/flnm" style="left:167px; top:103px; width:75px; height:18px; "/>
		<output id="output3" ref="/root/reqData/reqForm/dept_cd" style="left:349px; top:102px; width:50px; height:18px; "/>
		<output id="output4" ref="/root/reqData/reqForm/dept_nm" style="left:402px; top:102px; width:75px; height:18px; "/>
		<output id="output5" ref="/root/reqData/reqForm/appmt_cd" style="left:583px; top:103px; width:50px; height:18px; "/>
		<output id="output6" ref="/root/reqData/reqForm/appmt_nm" style="left:636px; top:103px; width:65px; height:18px; "/>
		<output id="output7" ref="/root/reqData/reqForm/posi_cd" style="left:806px; top:103px; width:50px; height:18px; "/>
		<output id="output8" ref="/root/reqData/reqForm/posi_nm" style="left:860px; top:103px; width:69px; height:18px; "/>
		
		-->
		<!--
		
		-->
		<datagrid id="datagrid2" nodeset="/root/resData/gridData/record" caption="선택^부서^사번^성명^직책^직급^근무일^출근시간^퇴근시간^지급일^지급경비^진행상태^관리번호^전표번호^값^값^값^값^값" colsep="#" colwidth="50, 120, 70, 70, 60, 60, 90, 80, 80, 80, 80, 100, 100, 100, 0, 0, 0, 0, 0" explorerbar="sortshowmove" extendlastcol="scroll" frozencols="4" mergecellsfixedrows="bycolrec" rowsep="|" selectionmode="free" rowheade2r="update" style="left:10px; top:165px; width:926px; height:500px; ">
			<col checkvalue="1,0" ref="chk" type="checkbox">
				<script type="javascript" ev:event="xforms-select">
					<![CDATA[
						var row = datagrid2.row;
						var slip_proc_seq = model1.getValue("/root/resData/gridData/record["+row+"]/slip_proc_seq");
						
						for(var i=1 ;i<datagrid2.rows;i++){
							var slip_proc_seq1 = model1.getValue("/root/resData/gridData/record["+i+"]/slip_proc_seq");
							
							if(slip_proc_seq == slip_proc_seq1 && slip_proc_seq != ""){
								datagrid2.rowStatus(i) = 2;
								datagrid2.valueMatrix(i, datagrid2.colRef("chk")) = 1;
							}
						}
						
						for(var i=1 ;i<datagrid1.rows;i++){
							var tmp_seq = model1.getValue("/root/resData/slipData/record["+i+"]/actu_slip_no");
							
							if(slip_proc_seq == tmp_seq){
								datagrid1.rowStatus(i) = 1;
							}
						}
						
						if (datagrid1.rows > 1){
							slip_submit_sum();	
							slip_remark();						
						}
					]]>
				</script>
				<script type="javascript" ev:event="xforms-deselect">
					<![CDATA[
						var row = datagrid2.row;
						var slip_proc_seq = model1.getValue("/root/resData/gridData/record["+row+"]/slip_proc_seq");
						
						for(var i=1 ;i<datagrid2.rows;i++){
							var slip_proc_seq1 = model1.getValue("/root/resData/gridData/record["+i+"]/slip_proc_seq");
							
							if(slip_proc_seq == slip_proc_seq1 && slip_proc_seq != ""){
								datagrid2.rowStatus(i) = 0;
								datagrid2.valueMatrix(i, datagrid2.colRef("chk")) = 0;
							}
						}
						
						for(var i=1 ;i<datagrid1.rows;i++){
							var tmp_seq = model1.getValue("/root/resData/slipData/record["+i+"]/actu_slip_no");
							
							if(slip_proc_seq == tmp_seq){
								datagrid1.rowStatus(i) = 0;
								datagrid2.rowStatus(row) = 0;
							}
						}
	
						if (datagrid1.rows > 1){
							slip_submit_sum();	
							slip_remark();						
						}
					]]>
				</script>
			</col>
			<col ref="dept_nm" style="text-align:left; "/>
			<col ref="emp_no" type="inputbutton" maxlength="6">
				<script type="javascript" ev:event="onbuttonclick">
					<![CDATA[
						//model1.setValue("/root/reqData/fwdData/func_nm", "setEmp_no");
						//window.load("/xrw/hd/com/HD_COM_1000.xrw","mdichild", "hd_com_1000", "align:center; caption:hidden;", "/root/reqData/fwdData", "/root/reqData/fwdData");		
					
						
						model.removeNodeset("/root/reqData/fwdData");  
						model.makeNode("/root/reqData/fwdData/func_nm");
						model.setValue("/root/reqData/fwdData/func_nm", "setEmp_no");
						window.load("/xrw/hd/com/HD_COM_1000.xrw","mdichild", "", "align:center; caption:hidden;", "/root/reqData/fwdData", "/root/reqData/fwdData");
						
						
						
						
																						
						]]>
				</script>
			</col>
			<col imemode="hangul" ref="flnm" type="input"/>
			<col ref="dty_nm"/>
			<col ref="posi_nm"/>
			<col ref="duty_dt" type="inputdate"/>
			<col ref="prvdd_prsnt_tm" format="hh:nn"/>
			<col ref="prvdd_finish_tm" format="hh:nn"/>
			<col ref="pay_dt" visibility="hidden" format="yyyy-mm-dd"/>
			<col ref="pay_cost" type="input" format="#,###" maxlength="10" style="text-align:right; "/>
			<col ref="proc_stat_nm"/>
			<col ref="slip_proc_seq" format="99999999-99999">
				<script type="javascript" ev:event="onclick">
					<![CDATA[
						input1.value =  datagrid2.valueMatrix(datagrid2.row,datagrid2.col);
						input1.refresh();
					]]>
				</script>
			</col>
			<col ref="actu_slip_no" format="99999999-99-999">
				<script type="javascript" ev:event="onclick">
					<![CDATA[
						actu_slip_no_in.value =   datagrid2.valueMatrix(datagrid2.row,datagrid2.col);
						actu_slip_no_in.refresh();
					]]>
				</script>
			</col>
			<col ref="dept_cd" visibility="hidden"/>
			<col ref="dty_cd" visibility="hidden"/>
			<col ref="posi_cd" visibility="hidden"/>
			<col ref="cmpy_cd" visibility="hidden"/>
			<col ref="connect_ip" visibility="hidden"/>
			<col ref="connect_userid" visibility="hidden"/>
			<col ref="proc_stat" visibility="hidden"/>
			<col ref="slip_proc_mang_dt" visibility="hidden"/>
			<col ref="slip_proc_mang_seq" visibility="hidden"/>
			<script type="javascript" ev:event="xforms-value-changed">
				<![CDATA[
				var col = datagrid2.col;
				var row = datagrid2.row;
				
				if(col == 1){
					if (datagrid2.valueMatrix(row, datagrid2.colRef("chk")) == 0 ){
						datagrid2.rowstatus(row) = 0;	
					}
					
				}else if(col == 3){
					var emp_no = model1.getValue("/root/resData/gridData/record["+row+"]/emp_no");
					setInfoSearchInput(emp_no, "", "", "setEmp_no_pop"); // 사번, 성명, 주민번호
					if(model1.getValue("/root/tempData/totalcnt") != 1){
						return;
					} // 카운트
					search(row, model1.getValue("/root/tempData/emp_no"), model1.getValue("/root/tempData/nm_korn")); // 편집국 사원 검색
					if(model1.getValue("/root/resData/search/gubun") == "2"){
						model1.setValue("/root/resData/gridData/record["+row+"]/emp_no", model1.getValue("/root/tempData/emp_no")); // 사번
						model1.setValue("/root/resData/gridData/record["+row+"]/flnm", model1.getValue("/root/tempData/nm_korn")); // 성명
						model1.setValue("/root/resData/gridData/record["+row+"]/dept_cd", model1.getValue("/root/tempData/dept_cd")); // 부서코드
						model1.setValue("/root/resData/gridData/record["+row+"]/dept_nm", model1.getValue("/root/tempData/dept_nm")); // 부서명
						model1.setValue("/root/resData/gridData/record["+row+"]/dty_cd", model1.getValue("/root/tempData/dty_cd")); // 직책코드
						model1.setValue("/root/resData/gridData/record["+row+"]/dty_nm", model1.getValue("/root/tempData/dty_nm")); // 직책명
						model1.setValue("/root/resData/gridData/record["+row+"]/posi_cd", model1.getValue("/root/tempData/posi_cd")); // 직급코드
						model1.setValue("/root/resData/gridData/record["+row+"]/posi_nm", model1.getValue("/root/tempData/posi_nm")); // 직급명
					}
					model1.removenode("/root/tempData");
				}else if(col == 4){
					search();
					var nm_korn = model1.getValue("/root/resData/gridData/record["+row+"]/flnm");
					setInfoSearchInput("", nm_korn, "", "setEmp_no_pop"); // 사번, 성명, 주민번호
					if(model1.getValue("/root/tempData/totalcnt") != 1){
						return;
					} // 카운트
					search(row, model1.getValue("/root/tempData/emp_no"), model1.getValue("/root/tempData/nm_korn")); // 편집국 사원 검색
					if(model1.getValue("/root/resData/search/gubun") == "2"){
						model1.setValue("/root/resData/gridData/record["+row+"]/emp_no", model1.getValue("/root/tempData/emp_no")); // 사번
						model1.setValue("/root/resData/gridData/record["+row+"]/flnm", model1.getValue("/root/tempData/nm_korn")); // 성명
						model1.setValue("/root/resData/gridData/record["+row+"]/dept_cd", model1.getValue("/root/tempData/dept_cd")); // 부서코드
						model1.setValue("/root/resData/gridData/record["+row+"]/dept_nm", model1.getValue("/root/tempData/dept_nm")); // 부서명
						model1.setValue("/root/resData/gridData/record["+row+"]/dty_cd", model1.getValue("/root/tempData/dty_cd")); // 직책코드
						model1.setValue("/root/resData/gridData/record["+row+"]/dty_nm", model1.getValue("/root/tempData/dty_nm")); // 직책명
						model1.setValue("/root/resData/gridData/record["+row+"]/posi_cd", model1.getValue("/root/tempData/posi_cd")); // 직급코드
						model1.setValue("/root/resData/gridData/record["+row+"]/posi_nm", model1.getValue("/root/tempData/posi_nm")); // 직급명
					}
					model1.removenode("/root/tempData");
				}else if (col == '7'){
					var selectedIdx = datagrid2.row;
					var emp_no = model1.getValue("/root/resData/gridData/record["+ selectedIdx +"]/emp_no");	
										
					if(emp_no=="") {
						alert("사원을 먼저 검색하세요.");
						return;
					}else{				
						model1.setValue("/root/reqData/searchData/search_emp_no", emp_no);
						var selectedIdx2 = datagrid2.row;
						var search_duty_dt = model1.getValue("/root/resData/gridData/record["+ selectedIdx2 +"]/duty_dt");	
						var search_dept_cd = model1.getValue("/root/resData/gridData/record["+ selectedIdx2 +"]/dept_cd");	
						model1.setValue("/root/reqData/searchData/search_duty_dt", search_duty_dt);
						model1.setValue("/root/reqData/searchData/search_dept_cd", search_dept_cd);
						
						//model1.setValue("/root/reqData/searchData/cmpy_cd", "100");
						model1.send("hd_dalon_2042");
						
						//model1.copyNode("/root/resData/gridData", "/root/tempData");
						var duty_dt = model1.getValue("/root/tempData/record/duty_dt");
						var prvdd_prsnt_tm = model1.getValue("/root/tempData/record/prvdd_prsnt_tm");
						var prvdd_finish_tm = model1.getValue("/root/tempData/record/prvdd_finish_tm");
						var thdd_prsnt_tm = model1.getValue("/root/tempData/record/thdd_prsnt_tm");
						var thdd_finish_tm = model1.getValue("/root/tempData/record/thdd_finish_tm");
						var thdd_duty_tm = model1.getValue("/root/tempData/record/thdd_duty_tm");
						var pay_dt = model1.getValue("/root/tempData/record/pay_dt");
						var proc_stat = model1.getValue("/root/tempData/record/proc_stat");
						var vgl_duty_dt = model1.getValue("/root/tempData/record/vgl_duty_dt");
						
						model1.setValue("/root/resData/gridData/record["+ selectedIdx2 +"]/duty_dt",duty_dt);	
						model1.setValue("/root/resData/gridData/record["+ selectedIdx2 +"]/prvdd_prsnt_tm",prvdd_prsnt_tm);	
						model1.setValue("/root/resData/gridData/record["+ selectedIdx2 +"]/prvdd_finish_tm",prvdd_finish_tm);	
						model1.setValue("/root/resData/gridData/record["+ selectedIdx2 +"]/thdd_prsnt_tm",thdd_prsnt_tm);	
						model1.setValue("/root/resData/gridData/record["+ selectedIdx2 +"]/thdd_finish_tm",thdd_finish_tm);	
						model1.setValue("/root/resData/gridData/record["+ selectedIdx2 +"]/thdd_duty_tm",thdd_duty_tm);	
						model1.setValue("/root/resData/gridData/record["+ selectedIdx2 +"]/pay_dt",pay_dt);	
						model1.setValue("/root/resData/gridData/record["+ selectedIdx2 +"]/proc_stat",proc_stat);	
						model1.setValue("/root/resData/gridData/record["+ selectedIdx2 +"]/vgl_duty_dt",vgl_duty_dt);	
						
						model1.refresh();	
						
						datagrid2.isReadOnly(1, 1, 1, 16)  =false;		
						model1.refresh();	
					}	
				}
				]]>
			</script>
			<script type="javascript" ev:event="onclick">
				<![CDATA[
					if(datagrid2.isReadOnly(1,1) == 1 && datagrid2.valueMatrix(1,2) == "" ) {return;}
					var selectedIdx = datagrid2.row;
					var proc_stat = model1.getValue("/root/resData/gridData/record["+ selectedIdx +"]/proc_stat");
					//if(proc_stat == '29' || proc_stat == '30' || proc_stat == '33' || proc_stat == '36'){ //전표등록일경우		
					if(proc_stat == model1.getValue("/root/initData/hd_dalon_2040_m/dataSet/xx_proc_stat_030") || proc_stat == model1.getValue("/root/initData/hd_dalon_2040_m/dataSet/xx_proc_stat_040") || proc_stat == model1.getValue("/root/initData/hd_dalon_2040_m/dataSet/xx_proc_stat_050") || proc_stat == model1.getValue("/root/initData/hd_dalon_2040_m/dataSet/xx_proc_stat_060")){ //전표등록일경우		
						return;
					}
					else{
						//rowStatus(datagrid2);
					}	
				]]>
			</script>
			<script type="javascript" ev:event="xforms-select">
				<![CDATA[
					if (event.target == "datagrid2") {
						var row = datagrid2.row;	
						var slip_cnt = datagrid1.rows;
						
						if(datagrid2.rows == 2 && datagrid2.valueMatrix(1,2) == "" )
							return;
							
						for (var i=1; i<datagrid2.rows; i++) {
							var proc_stat = model1.getValue("/root/resData/gridData/record["+ i +"]/proc_stat");
							var status = datagrid2.rowstatus(i);
							//if(status == 0  &&  (proc_stat != '29' || proc_stat == '36') && proc_stat != "" ){
							if (slip_cnt	 > 1){
								//if(status == 0  &&  (proc_stat != "29" || proc_stat == "36") ){
								if(status == 0  &&  (proc_stat != model1.getValue("/root/initData/hd_dalon_2040_m/dataSet/xx_proc_stat_030") || proc_stat == model1.getValue("/root/initData/hd_dalon_2040_m/dataSet/xx_proc_stat_060")) ){      //수정 2012.03.19  xx_proc_stat_050  --> xx_proc_stat_060
									datagrid2.addStatus(i, "update");	
								}
							}else{
								//if(status == 0  &&  (proc_stat != "29" || proc_stat == "36" ) && proc_stat == "" ){
								if(status == 0  &&  (proc_stat != model1.getValue("/root/initData/hd_dalon_2040_m/dataSet/xx_proc_stat_030") || proc_stat == model1.getValue("/root/initData/hd_dalon_2040_m/dataSet/xx_proc_stat_060") ) && proc_stat == "" ){    //수정 2012.03.19  xx_proc_stat_050  --> xx_proc_stat_060
									datagrid2.addStatus(i, "update");
								}
							}
						}
						
						for (var i=1; i<datagrid2.rows; i++) {
							var status1 = datagrid2.rowstatus(i);
							
							if(status1 == 0){
								datagrid2.valueMatrix(i, datagrid2.colRef("chk")) = 0;
							}
						}
						
						for(var i=1 ;i<datagrid1.rows;i++){
							datagrid1.rowStatus(i) = 1;
						}
						if(datagrid1.rows > 1 ){
							slip_submit_sum();
							slip_remark();
						}
						//model1.refresh();
					}
				]]>
			</script>
			<script type="javascript" ev:event="xforms-deselect">
				<![CDATA[
					if (event.target == "datagrid2") {
						var row = datagrid2.row;
							
						for(var i=1;i<datagrid2.rows;i++)	{
							  datagrid2.rowstatus(i) = 0;
						}					
						for(var i=1 ;i<datagrid1.rows;i++){
							datagrid1.rowStatus(i) = 0;
						}
						if(datagrid1.rows > 1 ){
							slip_submit_sum();
							slip_remark();
						}
					}
				]]>
			</script>
		</datagrid>
		<import id="import1" src="../../../common/xrw/iv_TitleBar.xrw" style="left:10px; top:5px; width:926px; height:29px; "/>
		<button id="btnA2" class="btn02" style="left:483px; top:40px; width:50px; height:21px; ">
			<caption>저장</caption>
			<script type="javascript" ev:event="onclick">
				<![CDATA[
					var emp_no = model1.getValue("/root/resData/gridData/record/emp_no");
					if(emp_no == ""){
						alert("등록 및 삭제 하실 데이터를 입력 또는 선택하신 후 저장 해주세요.");
						return;
					}else {
						if (window.alert("저장하시겠습니까?", "확인", 1) != 1) {
							return;
						}
						if (!rowInSubmit(datagrid2)) {
							return;
						}
												
						model1.setValue("/root/reqData/multiUpData", datagrid2.getUpdateData());
						model1.send("hd_dalon_2043");

						if(submit_completed()) {							
							//model1.reset();
							model1.resetInstanceNode("/root/resData/gridData/record");
							model1.resetInstanceNode("/root/resData/slipData/record");
							model1.refresh();

							model1.send("hd_dalon_2041");
							model1.copyNode("/root/resData/gridData", "/root/dataSet/CURLIST");
							slipInsertList();						
							model1.removenode("/root/tempData");
							model1.refresh();					
							//전표생성을 위한  리스트 생성
							for(var i=1 ;i< datagrid2.rows;i++){
								var proc_stat = model1.getValue("/root/resData/gridData/record["+i+"]/proc_stat");							
								//if(proc_stat == '29' || proc_stat == '30' || proc_stat == '33' || proc_stat == '36'){
								if(proc_stat == model1.getValue("/root/initData/hd_dalon_2040_m/dataSet/xx_proc_stat_030") || proc_stat == model1.getValue("/root/initData/hd_dalon_2040_m/dataSet/xx_proc_stat_040") || proc_stat == model1.getValue("/root/initData/hd_dalon_2040_m/dataSet/xx_proc_stat_050") || proc_stat == model1.getValue("/root/initData/hd_dalon_2040_m/dataSet/xx_proc_stat_060")){
									datagrid2.isReadOnly(i, 1, i, 17) = true;
								}else{
									datagrid2.isReadOnly(i, 1, i, 17) = false;
								}	
								
								datagrid2.valueMatrix(i, datagrid2.colRef("chk")) = 0;				
							}							
							datagrid2.clearStatus();																	
							model1.refresh();	
							var totcnt = datagrid2.rows;
							model1.setValue("/root/resData/totcnt", "총 " + Number(totcnt - 1) + " 건");
							model1.refresh();
						}
					}
				]]>
			</script>
		</button>
		<button id="button3" class="btn04" style="left:796px; top:40px; width:88px; height:21px; ">
			<caption>엑셀다운로드</caption>
			<script type="javascript" ev:event="DOMActivate">
				<![CDATA[
				//excel 파일로 저장한다
				var filePath = window.fileDialog("save", "", false, "", "xls", "Excel Files(*.xls)|*.xls");
				if(filePath != "") {
					datagrid2.saveExcel(filePath);
					window.exec(filePath);
				}
				]]>
			</script>
		</button>
		<button id="button1" class="btn02" style="left:379px; top:40px; width:50px; height:21px; ">
			<caption>조회</caption>
			<script type="javascript" ev:event="onclick">
				<![CDATA[
					if (!commReqCheck(group1))
						return;
						
					var frdt = model1.getValue("/root/reqData/searchData/duty_dt_fm");
					var todt = model1.getValue("/root/reqData/searchData/duty_dt_to");
					
					if (frdt > todt){
						alert("근무 기간 입력 오류 입니다.");
						return;
					}
					model1.send("hd_dalon_2041");
					model1.copyNode("/root/resData/gridData", "/root/dataSet/CURLIST");
					slipInsertList();						
					model1.removenode("/root/dataSet");
					//전표생성을 위한  리스트 생성
					for(var i=1 ;i< datagrid2.rows;i++){
						var proc_stat = model1.getValue("/root/resData/gridData/record["+i+"]/proc_stat");							
						//if(proc_stat == '29' || proc_stat == '30' || proc_stat == '33' || proc_stat == '36'){
						if(proc_stat == model1.getValue("/root/initData/hd_dalon_2040_m/dataSet/xx_proc_stat_030") || proc_stat == model1.getValue("/root/initData/hd_dalon_2040_m/dataSet/xx_proc_stat_040") || proc_stat == model1.getValue("/root/initData/hd_dalon_2040_m/dataSet/xx_proc_stat_050") || proc_stat == model1.getValue("/root/initData/hd_dalon_2040_m/dataSet/xx_proc_stat_060")){
							datagrid2.isReadOnly(i, 1, i, 17) = true;
						}else{
							datagrid2.isReadOnly(i, 1, i, 17) = false;
						}
						datagrid2.isReadOnly(i, 3, i, 4) = true;
						datagrid2.valueMatrix(i, datagrid2.colRef("chk")) = 0;				
					}
					datagrid2.clearStatus();																	
					model1.refresh();	
					var totcnt = datagrid2.rows;
					model1.setValue("/root/resData/totcnt", "총 " + Number(totcnt - 1) + " 건");
					model1.refresh();
					
				]]>
			</script>
		</button>
		<button id="button5" class="btn03" style="left:731px; top:40px; width:63px; height:21px; ">
			<caption>장표출력</caption>
			<script type="javascript" ev:event="DOMActivate">
				<![CDATA[
				var obj = htmldocument.SessionInfo;
				setProperty("ss_cmpycd"   , obj.cmpycd.value);
		    	setProperty("ss_emp_no"   , obj.emp_no.value);
		    	setProperty("ss_deptcd"   , obj.deptcd.value);
				if(getProperty("ss_cmpycd") !="344"){
					var actu_slip_no = model1.getValue("/root/reqData/searchData/actu_slip_no");
					
					if(actu_slip_no == "") {
						alert("전표번호는 필수 입력 항목입니다.");
						return;
					}
							
					resetOznode();											//오즈node 초기화
					
					makeNodeValue("/root/oz_data/ozrName","hd/HD_DALON_2047");	//odi 파일경로('/' root경로 제외)
					makeNodeValue("/root/oz_data/preview","preview"); 			//preview : 미리보기, print : 인쇄
					//makeNodeValue("/root/oz_data/printsize",""); 				       //페이지용지설정(기본 A4)
					makeNodeValue("/root/oz_data/printsize","B5 (JIS)");   //페이지용지설정(기본 A5)
					
						
		    	 			
					
					//Parameter setting
					makeNodeValue("/root/oz_data/odiParam/iv_cmpy_cd",obj.cmpycd.value);
					makeNodeValue("/root/oz_data/odiParam/iv_actu_slip_no",actu_slip_no);
				 	makeNodeValue("/root/oz_data/odiParam/iv_emp_no",obj.emp_no.value);
				 	makeNodeValue("/root/oz_data/odiParam/iv_dept_cd",obj.deptcd.value);
					
					makeNodeValue("/root/oz_data/childCount","1");
					
					makeNodeValue("/root/oz_data/child1/ozrName","hd/HD_DALON_2048");
					makeNodeValue("/root/oz_data/child1/odiParam/iv_cmpy_cd"     ,getProperty("ss_cmpycd") );	
					makeNodeValue("/root/oz_data/child1/odiParam/iv_actu_slip_no",actu_slip_no);
					makeNodeValue("/root/oz_data/child1/printsize","B5 (JIS)");   //페이지용지설정(기본 A5)
					
					openOzwin("/root/oz_data");
				}else{ // 영상비전 일경우 
					var actu_slip_no = model1.getValue("/root/reqData/searchData/actu_slip_no");
					
					if(actu_slip_no == "") {
						alert("전표번호는 필수 입력 항목입니다.");
						return;
					}
							
					resetOznode();											//오즈node 초기화
					
					makeNodeValue("/root/oz_data/ozrName","hd/HD_DALON_2047_344");	//odi 파일경로('/' root경로 제외)
					makeNodeValue("/root/oz_data/preview","preview"); 			//preview : 미리보기, print : 인쇄
					//makeNodeValue("/root/oz_data/printsize",""); 				       //페이지용지설정(기본 A4)
					makeNodeValue("/root/oz_data/printsize","");   //페이지용지설정(기본 A5)
					
						
		    	 			
					
					//Parameter setting
					makeNodeValue("/root/oz_data/odiParam/iv_cmpy_cd",obj.cmpycd.value);
					makeNodeValue("/root/oz_data/odiParam/iv_actu_slip_no",actu_slip_no);
				 	makeNodeValue("/root/oz_data/odiParam/iv_emp_no",obj.emp_no.value);
				 	makeNodeValue("/root/oz_data/odiParam/iv_dept_cd",obj.deptcd.value);
					
					//makeNodeValue("/root/oz_data/childCount","1");
					
					//makeNodeValue("/root/oz_data/child1/ozrName","hd/HD_DALON_2048");
					//makeNodeValue("/root/oz_data/child1/odiParam/iv_cmpy_cd"     ,getProperty("ss_cmpycd") );	
					//makeNodeValue("/root/oz_data/child1/odiParam/iv_actu_slip_no",actu_slip_no);
					//makeNodeValue("/root/oz_data/child1/printsize","B5 (JIS)");   //페이지용지설정(기본 A5)
					
					openOzwin("/root/oz_data");
				}
				]]>
			</script>
		</button>
		<button id="button6" class="btn03" style="left:666px; top:40px; width:63px; height:21px; ">
			<caption>전표취소</caption>
			<script type="javascript" ev:event="DOMActivate">
				<![CDATA[
						if(searchFlag == false && actu_slip_no_in.value == ""){
							alert("취소할 전표번호를 조회해 주세요.");	
							return;
						}								
						if(datagrid1.rows == -1){
							alert("취소할 전표가 없습니다.");
							return;
						}					
						if(datagrid1.rows == 1){
							alert("취소할 전표번호를 조회해 주세요.");	
							return;
						}					
						for(var i=1; i<datagrid1.rows;i++){
							var proc_stat = model1.getValue("/root/resData/slipData/record["+i+"]/proc_stat");
							var actu_slip_no = model1.getValue("/root/resData/slipData/record["+i+"]/actu_slip_no");
							//전표 등록 체크
							//if(proc_stat == 29 || proc_stat == 36){
							if(proc_stat == model1.getValue("/root/initData/hd_dalon_2040_m/dataSet/xx_proc_stat_030") || proc_stat == model1.getValue("/root/initData/hd_dalon_2040_m/dataSet/xx_proc_stat_060")){
							}else{
								alert("취소할 전표번호를 조회해 주세요.");
								return;								
							}
						}
						if (window.alert("전표취소 하시겠습니까?", "확인", 1) != 1) {
							return;
						}							
						for(var i=0;i<datagrid2.rows;i++){ 
							datagrid2.addStatus(i, "update");							
						}
						model1.setValue("/root/reqData/multiUpData", datagrid2.getUpdateData());
						model1.send("hd_dalon_2046");
						datagrid1.clearStatus();
						datagrid2.clearStatus();
						if(submit_completed()) {
							//model1.reset();
							model1.resetInstanceNode("/root/resData/gridData/record");
							model1.resetInstanceNode("/root/resData/slipData/record");
							model1.refresh();

							model1.send("hd_dalon_2041");//조회
							model1.copyNode("/root/resData/gridData", "/root/dataSet/CURLIST");
							slipInsertList();						
							model1.removenode("/root/tempData");
							model1.refresh();					
							//전표생성을 위한  리스트 생성
							for(var i=1 ;i< datagrid2.rows;i++){
								var proc_stat = model1.getValue("/root/resData/gridData/record["+i+"]/proc_stat");							
								//if(proc_stat == '29' || proc_stat == '30' || proc_stat == '33' || proc_stat == '36'){
								if(proc_stat == model1.getValue("/root/initData/hd_dalon_2040_m/dataSet/xx_proc_stat_030") || proc_stat == model1.getValue("/root/initData/hd_dalon_2040_m/dataSet/xx_proc_stat_040") || proc_stat == model1.getValue("/root/initData/hd_dalon_2040_m/dataSet/xx_proc_stat_050") || proc_stat == model1.getValue("/root/initData/hd_dalon_2040_m/dataSet/xx_proc_stat_060")){	
									datagrid2.isReadOnly(i, 1, i, 17) = true;
								}else{
									datagrid2.isReadOnly(i, 1, i, 17) = false;
								}	
								datagrid2.isReadOnly(i, 3, i, 4) = true;
								datagrid2.valueMatrix(i, datagrid2.colRef("chk")) = 0;				
							}							
							datagrid2.clearStatus();																	
							model1.refresh();	
							var totcnt = datagrid2.rows;
							model1.setValue("/root/resData/totcnt", "총 " + Number(totcnt - 1) + " 건");
							model1.refresh();
						}		 
				]]>
			</script>
		</button>
		<button id="button7" class="btn03" style="left:602px; top:40px; width:63px; height:21px; ">
			<caption>전표생성</caption>
			<script type="javascript" ev:event="DOMActivate">
				<![CDATA[
						var flag = true;
						if(datagrid1.rows == -1){
							alert("생성할전표가 없습니다.");
							return;
						}	
						if(datagrid1.valueMatrix(1,2) == ""){
							alert("생성할전표가 없습니다.");	
							return;
						}			
						var flag1 = false;
						for(var i=1;i<datagrid2.rows;i++){
							var chk = datagrid2.valueMatrix(i,datagrid2.colRef("chk"));
							if(chk == "1"){
								flag1 = true;
							}
						}
						if(!flag1){
							alert("생성할전표가 없습니다.");	
							return;
						}								
						for(var i=1; i<datagrid2.rows;i++){
							var proc_stat = model1.getValue("/root/resData/gridData/record["+i+"]/proc_stat");
							//전표 등록 체크
							var chk = datagrid2.valueMatrix(i,datagrid2.colRef("chk"));
							if(chk == "1"){
								//if(proc_stat == 25 || proc_stat == 28){
								if(proc_stat == model1.getValue("/root/initData/hd_dalon_2040_m/dataSet/xx_proc_stat_010") || proc_stat == model1.getValue("/root/initData/hd_dalon_2040_m/dataSet/xx_proc_stat_020")){
									flag = false;
								}
							}
						}
						if(flag){
							alert("생성할전표가 없습니다.");
							return;								
						}
						if (window.alert("전표생성 하시겠습니까?", "확인", 1) != 1) {
							return;
						}			
//						setInsertSlipValue();
						for(var i=1;i<datagrid2.rows;i++){ 
							var proc_stat = model1.getValue("/root/resData/gridData/record["+i+"]/proc_stat");						
							var chk = datagrid2.valueMatrix(i,1);
							//if((proc_stat == 25  || proc_stat == 28 ) && chk == 1){
							if((proc_stat == model1.getValue("/root/initData/hd_dalon_2040_m/dataSet/xx_proc_stat_010")  || proc_stat == model1.getValue("/root/initData/hd_dalon_2040_m/dataSet/xx_proc_stat_020") ) && chk == 1){
								datagrid2.addStatus(i, "insert");							
							}
						}
						model1.setValue("/root/reqData/multiUpData1", datagrid1.getUpdateData());
						model1.setValue("/root/reqData/multiUpData", datagrid2.getUpdateData());
						datagrid1.clearStatus();
						datagrid2.clearStatus();							
						model1.send("hd_dalon_2045");
						//전표번호
						var actu_slip_no = model1.getValue("/root/dataSet/CURLIST/record/actu_slip_no");
						model1.removenode("/root/slipNoData/slip_no");
						model1.makeValue("/root/slipNoData/slip_no",actu_slip_no);
						model1.removenode("/root/dataSet");
						
						if(submit_completed()) {			
							//model1.reset();
							model1.resetInstanceNode("/root/resData/gridData/record");
							model1.resetInstanceNode("/root/resData/slipData/record");
							model1.refresh();

							model1.send("hd_dalon_2041"); //조회
							model1.copyNode("/root/resData/gridData", "/root/dataSet/CURLIST");
							slipInsertList();						
							model1.removenode("/root/tempData");
							model1.refresh();					
							//전표생성을 위한  리스트 생성
							for(var i=1 ;i< datagrid2.rows;i++){
								var proc_stat = model1.getValue("/root/resData/gridData/record["+i+"]/proc_stat");							
								//if(proc_stat == '29' || proc_stat == '30' || proc_stat == '33' || proc_stat == '36'){
								if(proc_stat == model1.getValue("/root/initData/hd_dalon_2040_m/dataSet/xx_proc_stat_030") || proc_stat == model1.getValue("/root/initData/hd_dalon_2040_m/dataSet/xx_proc_stat_040") || proc_stat == model1.getValue("/root/initData/hd_dalon_2040_m/dataSet/xx_proc_stat_050") || proc_stat == model1.getValue("/root/initData/hd_dalon_2040_m/dataSet/xx_proc_stat_060")){
									datagrid2.isReadOnly(i, 1, i, 17) = true;
								}else{
									datagrid2.isReadOnly(i, 1, i, 17) = false;
								}
								datagrid2.isReadOnly(i, 3, i, 4) = true;
								datagrid2.valueMatrix(i, datagrid2.colRef("chk")) = 0;				
							}							
							datagrid2.clearStatus();																	
							model1.refresh();	
							var totcnt = datagrid2.rows;
							model1.setValue("/root/resData/totcnt", "총 " + Number(totcnt - 1) + " 건");
							model1.refresh();
							
							resetOznode();											//오즈node 초기화
							
							makeNodeValue("/root/oz_data/ozrName","hd/HD_DALON_1910");	//odi 파일경로('/' root경로 제외)
							makeNodeValue("/root/oz_data/preview","preview"); 			//preview : 미리보기, print : 인쇄
							//makeNodeValue("/root/oz_data/printsize",""); 				       //페이지용지설정(기본 A4)
							makeNodeValue("/root/oz_data/printsize","B5 (JIS)");   //페이지용지설정(기본 A4)
							
								var obj = htmldocument.SessionInfo;
				    	 			setProperty("ss_cmpycd"   , obj.cmpycd.value);
				    	 			setProperty("ss_emp_no"   , obj.emp_no.value);
				    	 			setProperty("ss_deptcd"   , obj.deptcd.value);
							
							//Parameter setting
							makeNodeValue("/root/oz_data/odiParam/iv_cmpy_cd",obj.cmpycd.value);
							makeNodeValue("/root/oz_data/odiParam/iv_actu_slip_no",actu_slip_no);
						 	makeNodeValue("/root/oz_data/odiParam/iv_emp_no",obj.emp_no.value);
						 	makeNodeValue("/root/oz_data/odiParam/iv_dept_cd",obj.deptcd.value);
							
							makeNodeValue("/root/oz_data/childCount","1");
							
							makeNodeValue("/root/oz_data/child1/ozrName","hd/HD_DALON_1920");
							makeNodeValue("/root/oz_data/child1/odiParam/iv_cmpy_cd"     ,getProperty("ss_cmpycd") );	
							makeNodeValue("/root/oz_data/child1/odiParam/iv_actu_slip_no",actu_slip_no);
							makeNodeValue("/root/oz_data/child1/printsize","B5 (JIS)");   //페이지용지설정(기본 A4)
							
							openOzwin("/root/oz_data");
						}
				]]>
			</script>
		</button>
		<caption id="caption18" class="tit02" style="left:10px; top:145px; width:220px; height:20px; font-weight:bold; ">심야교통비관리</caption>
		<datagrid id="datagrid1" nodeset="/root/resData/slipData/record" visibility="hidden" caption="회사코드^사번^부서^이름^차변금액(개인)^대변금액(총합계)^적요1^전표관리번호^전표일련번호^전표발생일자^전표구분코드^입력자^입력자IP^진행상태" colsep="#" colwidth="63, 79, 100, 100, 100, 114, 191, 100, 100, 100, 100, 100, 100, 100" extendlastcol="scroll" mergecellsfixedrows="bycolrec" rowheader="update" rowsep="|" style="left:14px; top:500px; width:920px; height:135px; ">
			<col ref="cmpy_cd"/>
			<col ref="emp_no"/>
			<col ref="dept_cd"/>
			<col ref="flnm"/>
			<col ref="tmp_dr_amt"/>
			<col ref="tmp_crdt_amt"/>
			<col ref="titl"/>
			<col ref="actu_slip_no"/>
			<col ref="slip_seq"/>
			<col ref="slip_occr_dt"/>
			<col ref="slip_clsf_cd"/>
			<col ref="incmg_pers"/>
			<col ref="incmg_pers_ipadd"/>
			<col ref="proc_stat"/>
		</datagrid>
		<button id="button9" class="btn_grid02" visibility="hidden" style="left:882px; top:146px; width:54px; height:17px; background-image:../../../images/btn_s_3.gif; ">
			<caption>행추가</caption>
			<script type="javascript" ev:event="onclick">
				<![CDATA[
						datagrid2.addRow(true, true);
						/*var selectedIdx = 1;
						var emp_no = model1.getValue("/root/resData/gridData/record["+ selectedIdx +"]/emp_no");			
						var rows = datagrid2.rows;
						if(rows == 1){
							datagrid2.addRow(true, true);
						}else if(rows > 1){
							if(emp_no=="") {
								datagrid2.isReadOnly(1, 1, 1, 17)  =false;
								datagrid2.addStatus(selectedIdx, "insert");
							}else{				
								datagrid2.addRow(true, true);
							}	
						}	*/	
					]]>
			</script>
		</button>
		<button id="button2" class="btn02" style="left:327px; top:40px; width:52px; height:21px; ">
			<caption>초기화</caption>
			<script type="javascript" ev:event="onclick">
				<![CDATA[
					model1.reset();
					datagrid2.clearStatus();
					datagrid2.addStatus(1, "insert");	
					for(var i=1 ;i< datagrid2.rows;i++){
						datagrid2.isReadOnly(i, 3, i, 4) = false;			
					}
					//frm_row_add();
					//datagrid2Chk.clearStatus();
				]]>
			</script>
		</button>
		<button id="button10" class="btn02" style="left:885px; top:40px; width:50px; height:21px; ">
			<caption>종료</caption>
			<script type="javascript" ev:event="onclick">
				<![CDATA[
					if(model.getValue("/root/initData/pageInfo/pageID") != ""){
					 	viewer("mainFrame").window.javaScript.closeMDIWindow(model.getValue("/root/initData/pageInfo/pageID"));
					}else{
						window.close();
					}
					]]>
			</script>
		</button>
		<button id="button8" class="btn02" style="left:431px; top:40px; width:50px; height:21px; ">
			<caption>삭제</caption>
			<script type="javascript" ev:event="onclick">
				<![CDATA[
					var tmp = input1.value;
					if(tmp == ""){
						alert("삭제하실 관리번호를 입력 해주세요.");
						return;
					}
					if (window.alert("삭제하시겠습니까?", "확인", 1) != 1) {
						return;
					}
					model1.send("hd_dalon_2049");
					model1.removenode("/root/tempData");
					if(submit_completed()) {							
						//model1.reset();
						model1.resetInstanceNode("/root/resData/gridData/record");
						model1.resetInstanceNode("/root/resData/slipData/record");
						model1.refresh();

						model1.send("hd_dalon_2041");
						model1.copyNode("/root/resData/gridData", "/root/dataSet/CURLIST");
						slipInsertList();						
						model1.removenode("/root/tempData");
						model1.refresh();					
						//전표생성을 위한  리스트 생성
						for(var i=1 ;i< datagrid2.rows;i++){
							var proc_stat = model1.getValue("/root/resData/gridData/record["+i+"]/proc_stat");							
							//if(proc_stat == '29' || proc_stat == '30' || proc_stat == '33' || proc_stat == '36'){
							if(proc_stat == model1.getValue("/root/initData/hd_dalon_2040_m/dataSet/xx_proc_stat_030") || proc_stat == model1.getValue("/root/initData/hd_dalon_2040_m/dataSet/xx_proc_stat_040") || proc_stat == model1.getValue("/root/initData/hd_dalon_2040_m/dataSet/xx_proc_stat_050") || proc_stat == model1.getValue("/root/initData/hd_dalon_2040_m/dataSet/xx_proc_stat_060")){
								datagrid2.isReadOnly(i, 1, i, 17) = true;
							}else{
								datagrid2.isReadOnly(i, 1, i, 17) = false;
							}	
							
							datagrid2.valueMatrix(i, datagrid2.colRef("chk")) = 0;				
						}							
						datagrid2.clearStatus();																	
						model1.refresh();	
						var totcnt = datagrid2.rows;
						model1.setValue("/root/resData/totcnt", "총 " + Number(totcnt - 1) + " 건");
						model1.refresh();
					}

//					var emp_no = model1.getValue("/root/resData/gridData/record/emp_no");
//					if(emp_no == ""){
//						alert("등록 및 삭제 하실 데이터를 입력 또는 선택하신 후 저장 해주세요.");
//						return;
//					}else {
//						if (window.alert("삭제하시겠습니까?", "확인", 1) != 1) {
//							return;
//						}
//						if (!rowDelSubmit(datagrid2)) {
//							return;
//						}
//												
//						model1.setValue("/root/reqData/multiUpData", datagrid2.getUpdateData());
//						model1.send("hd_dalon_1903");
//
//						if(submit_completed()) {							
//							//model1.reset();
//							model1.resetInstanceNode("/root/resData/gridData/record");
//							model1.resetInstanceNode("/root/resData/slipData/record");
//							model1.refresh();
//
//							model1.send("hd_dalon_1900");
//							model1.copyNode("/root/resData/gridData", "/root/tempData/CURLIST");
//							slipInsertList();						
//							model1.removenode("/root/tempData");
//							model1.refresh();					
//							//전표생성을 위한  리스트 생성
//							for(var i=1 ;i< datagrid2.rows;i++){
//								var proc_stat = model1.getValue("/root/resData/gridData/record["+i+"]/proc_stat");							
//								if(proc_stat == '29' || proc_stat == '30' || proc_stat == '33' || proc_stat == '36'){
//									datagrid2.isReadOnly(i, 1, i, 17) = true;
//								}else{
//									datagrid2.isReadOnly(i, 1, i, 17) = false;
//								}	
//								
//								datagrid2.valueMatrix(i, datagrid2.colRef("chk")) = 0;				
//							}							
//							datagrid2.clearStatus();																	
//							model1.refresh();	
//							var totcnt = datagrid2.rows;
//							model1.setValue("/root/resData/totcnt", "총 " + Number(totcnt - 1) + " 건");
//							model1.refresh();
//						}
//					}
				]]>
			</script>
		</button>
		<caption id="caption14" ref="/root/resData/totcnt" style="left:847px; top:675px; width:87px; height:20px; font-weight:bold; text-align:right; "/>
		<group id="group1" style="left:10px; top:70px; width:924px; height:70px; ">
			<caption id="caption7" class="list_cap02" style="left:93px; top:0px; width:831px; height:26px; text-align:center; "/>
			<caption id="caption13" class="list_cap02" style="left:93px; top:25px; width:831px; height:26px; text-align:center; "/>
			<input id="actu_slip_no_in" ref="/root/reqData/searchData/actu_slip_no" format="99999999-99-999" appearance="output" style="left:407px; top:29px; width:105px; height:18px; "/>
			<caption id="caption1" class="list_cap01" style="left:307px; top:0px; width:95px; height:26px; text-align:center; ">부서</caption>
			<caption id="caption10" style="left:188px; top:6px; width:11px; height:15px; ">~</caption>
			<caption id="caption12" style="left:0px; top:50px; width:445px; height:20px; font-weight:bold; color:#0000ff; "/>
			<caption id="caption3" class="list_cap01" style="left:0px; top:0px; width:95px; height:26px; text-align:center; ">근무기간</caption>
			<caption id="caption4" class="list_cap01" style="left:573px; top:0px; width:95px; height:26px; text-align:center; ">사원</caption>
			<caption id="caption6" class="list_cap01" style="left:307px; top:25px; width:95px; height:26px; text-align:center; ">전표번호</caption>
			<input id="input3" ref="/root/reqData/searchData/duty_dt_fm" class="req" inputtype="date" caption="근무기간(From)" style="left:99px; top:4px; width:85px; height:18px; "/>
			<caption id="caption9" class="list_cap01" style="left:780px; top:25px; width:50px; height:26px; text-align:center; ">지급일</caption>
			<input id="output1" ref="/root/reqData/searchData/flnm" imemode="hangul" appearance="output" style="left:756px; top:4px; width:85px; height:18px; ">
				<script type="javascript" ev:event="onkeypress">
					<![CDATA[
					if (event.keyCode ==13){
						var nm_korn = output1.currentText;
						model1.setValue("/root/reqData/searchData/emp_no", "");
						model1.setValue("/root/reqData/searchData/flnm", nm_korn);
							
						setInfoSearchInput("", nm_korn, "", "setEmp_no_i"); // 사번, 성명, 주민번호
						if(model1.getValue("/root/tempData/totalcnt") != 1){
							return;
						} // 카운트
						model1.setValue("/root/resData/search/emp_no", model1.getValue("/root/tempData/emp_no")); // 사번
						model1.setValue("/root/resData/search/nm_korn", model1.getValue("/root/tempData/nm_korn")); // 성명
						model1.send("hd_dalon_1907");
						
						if(model1.getValue("/root/dataSet/CURLIST/record/cnt") == "0"){
							alert("편집국 사원만 조회가능합니다.");
							model1.removenode("/root/dataSet");
							model1.setValue("/root/reqData/searchData/emp_no", ""); // 사번
							model1.setValue("/root/reqData/searchData/flnm", ""); // 성명
							input5.refresh();
							output1.refresh();
							return;
						}
						model1.removenode("/root/dataSet");
						model1.setValue("/root/reqData/searchData/emp_no", model1.getValue("/root/tempData/emp_no")); // 사번
						model1.setValue("/root/reqData/searchData/flnm", model1.getValue("/root/tempData/nm_korn")); // 성명
						model1.removenode("/root/tempData");
						input5.refresh();
						output1.refresh();
					}
				]]>
				</script>
			</input>
			<input id="input4" ref="/root/reqData/searchData/duty_dt_to" class="req" inputtype="date" caption="근무기간(To)" style="left:201px; top:4px; width:85px; height:18px; "/>
			<input id="input5" ref="/root/reqData/searchData/emp_no" inputtype="button" maxlength="6" style="left:675px; top:4px; width:75px; height:18px; ">
				<script type="javascript" ev:event="onbuttonclick">
					<![CDATA[
						model.removeNodeset("/root/reqData/fwdData");  
						model.makeNode("/root/reqData/fwdData/func_nm");
						model.setValue("/root/reqData/fwdData/func_nm", "setEmp_no_i");
						window.load("/xrw/hd/com/HD_COM_1000.xrw","mdichild", "hd_com_1000", "align:center; caption:hidden;", "/root/reqData/fwdData", "/root/reqData/fwdData");
					]]>
				</script>
				<script type="javascript" ev:event="onkeypress">
					<![CDATA[
					if (event.keyCode ==13){
						var emp_no = input5.currentText;
						model1.setValue("/root/reqData/searchData/emp_no", emp_no);
						model1.setValue("/root/reqData/searchData/flnm", "");
							
						setInfoSearchInput(emp_no, "", "", "setEmp_no_i"); // 사번, 성명, 주민번호
						if(model1.getValue("/root/tempData/totalcnt") != 1){
							return;
						} // 카운트
						model1.setValue("/root/resData/search/emp_no", model1.getValue("/root/tempData/emp_no")); // 사번
						model1.setValue("/root/resData/search/nm_korn", model1.getValue("/root/tempData/nm_korn")); // 성명
						model1.send("hd_dalon_1907");
						if(model1.getValue("/root/dataSet/CURLIST/record/cnt") == "0"){
							alert("편집국 사원만 조회가능합니다.");
							model1.removenode("/root/dataSet");
							model1.setValue("/root/reqData/searchData/emp_no", ""); // 사번
							model1.setValue("/root/reqData/searchData/flnm", ""); // 성명
							input5.refresh();
							output1.refresh();
							return;
						}
						model1.removenode("/root/dataSet");
						model1.setValue("/root/reqData/searchData/emp_no", model1.getValue("/root/tempData/emp_no")); // 사번
						model1.setValue("/root/reqData/searchData/flnm", model1.getValue("/root/tempData/nm_korn")); // 성명
						model1.removenode("/root/tempData");
						input5.refresh();
						output1.refresh();
					}
				]]>
				</script>
				<script type="javascript" ev:event="onmaxlength">
					<![CDATA[
						var emp_no = input5.currentText;
						model1.setValue("/root/reqData/searchData/emp_no", emp_no);
						model1.setValue("/root/reqData/searchData/flnm", "");
							
						setInfoSearchInput(emp_no, "", "", "setEmp_no_i"); // 사번, 성명, 주민번호
						if(model1.getValue("/root/tempData/totalcnt") != 1){
							return;
						} // 카운트
						model1.setValue("/root/resData/search/emp_no", model1.getValue("/root/tempData/emp_no")); // 사번
						model1.setValue("/root/resData/search/nm_korn", model1.getValue("/root/tempData/nm_korn")); // 성명
						model1.send("hd_dalon_1907");
						if(model1.getValue("/root/dataSet/CURLIST/record/cnt") == "0"){
							alert("편집국 사원만 조회가능합니다.");
							model1.removenode("/root/dataSet");
							model1.setValue("/root/reqData/searchData/emp_no", ""); // 사번
							model1.setValue("/root/reqData/searchData/flnm", ""); // 성명
							input5.refresh();
							output1.refresh();
							return;
						}
						model1.removenode("/root/dataSet");
						model1.setValue("/root/reqData/searchData/emp_no", model1.getValue("/root/tempData/emp_no")); // 사번
						model1.setValue("/root/reqData/searchData/flnm", model1.getValue("/root/tempData/nm_korn")); // 성명
						model1.removenode("/root/tempData");
						input5.refresh();
						output1.refresh();
					]]>
				</script>
			</input>
			<input id="input6" ref="/root/reqData/searchData/pay_dt" inputtype="date" style="left:835px; top:30px; width:85px; height:18px; background-color:#ffffcc; "/>
			<select1 id="combo1" ref="/root/reqData/searchData/proc_clsf" appearance="minimal" style="left:99px; top:29px; width:187px; height:18px; ">
				<choices>
					<itemset nodeset="/root/initData/comboSet/proc_clsf/item">
						<label ref="label"/>
						<value ref="value"/>
					</itemset>
				</choices>
				<script type="javascript" ev:event="onkeypress">
					<![CDATA[
						if (event.keyCode == 27){
							model1.setValue("/root/reqData/searchData/proc_clsf","");
							combo1.refresh();
						}
					]]>
				</script>
			</select1>
			<caption id="caption2" class="list_cap01" style="left:0px; top:25px; width:95px; height:26px; text-align:center; ">결재상태</caption>
			<!--
			<select1 id="combo2" ref="/root/reqData/searchData/dept_cd" disabled="false" appearance="minimal" style="left:407px; top:4px; width:105px; height:18px; ">
				<choices>
					<item>
						<label>편집국</label>
						<value>25</value>
					</item>
					<item>
						<label>AD본부</label>
						<value>54</value>
					</item>
					<item>
						<label>문화사업단</label>
						<value>46</value>
					</item>
				</choices>
			</select1>
			-->
			<input id="combo2" ref="/root/reqData/searchData/dept_cd" maxlength="6" appearance="input" style="left:407px; top:5px; width:54px; height:18px; text-align:center; ">
				<script type="javascript" ev:event="onkeypress">
					<![CDATA[
					if (event.keyCode ==13){
						model1.setValue("/root/reqData/searchData/dept_cd", combo2.currentText);
						model1.send("hd_com_1102");
						
						model1.setValue("/root/reqData/searchData/dept_cd", model1.getValue("/root/tempData/dept/dept_cd"));
						model1.setValue("/root/reqData/searchData/dept_nm", model1.getValue("/root/tempData/dept/dept_nm"));
						//model1.copyNode("/root/resData/resForm/now_duty_dept_cd", "/root/tempData/dept/dept_cd");
						//model1.copyNode("/root/resData/resForm/now_duty_dept_nm", "/root/tempData/dept/dept_nm");
					}
					]]>
				</script>
				<script type="javascript" ev:event="onmaxlength">
					<![CDATA[
						model1.setValue("/root/reqData/searchData/dept_cd", combo2.currentText);
						model1.send("hd_com_1101");
						if(model1.getValue("/root/totalcnt") == "0"){
							alert("없는 부서이거나 사용중이 아닌 부서 입니다.");
							model1.setValue("/root/reqData/searchData/dept_cd", "");
							model1.setValue("/root/reqData/searchData/dept_nm", "");
							model1.removenode("/root/tempData");
							model1.removenode("/root/totalcnt");
							model1.refresh();
							return;
						}
						model1.setValue("/root/reqData/searchData/dept_cd", model1.getValue("/root/tempData/record/dept_cd"));
						model1.setValue("/root/reqData/searchData/dept_nm", model1.getValue("/root/tempData/record/abrv_nm"));
						model1.removenode("/root/tempData");
						model1.removenode("/root/totalcnt");
						model1.refresh();		
					]]>
				</script>
			</input>
			<input id="input2" ref="/root/reqData/searchData/dept_nm" inputtype="button" appearance="input" style="left:465px; top:5px; width:100px; height:18px; ">
				<script type="javascript" ev:event="onbuttonclick">
					<![CDATA[
						model1.setValue("/root/reqData/fwdData/func_nm", "setDept_cd");
						//window.load("/xrw/hd/com/hd_com_1100.xrw","mdichild", "hd_com_1100", "", "/root/reqData/fwdData", "/root/reqData/fwdData");
						window.load("/xrw/hd/com/HD_COM_1100.xrw","mdichild", "hd_com_1100", "align:center; caption:hidden;", "/root/reqData/fwdData", "/root/reqData/fwdData");
					
					]]>
				</script>
			</input>
			<caption id="caption5" class="list_cap01" style="left:573px; top:25px; width:95px; height:26px; font-size:8pt; text-align:center; ">관리번호(삭제시)</caption>
			<input id="input1" ref="/root/reqData/searchData/slip_proc_seq" format="99999999-99999" style="left:675px; top:29px; width:99px; height:18px; "/>
		</group>
		<button id="button11" class="btn04" visibility="hidden" style="left:12px; top:40px; width:88px; height:21px; ">
			<caption>수당생성(구)</caption>
			<script type="javascript" ev:event="DOMActivate">
				<![CDATA[
					var st_dt = model1.getValue("/root/reqData/searchData/duty_dt_fm");
					var ed_dt = model1.getValue("/root/reqData/searchData/duty_dt_to");
					var pay_dt = model1.getValue("/root/reqData/searchData/pay_dt");
					
					if(st_dt == ""){
						alert("근무기간 시작일을 입력해 주세요.");
						model1.setFocus("input3");
						return;	
					}
					if(ed_dt == ""){
						alert("근무기간 종료일을 입력해 주세요.");
						model1.setFocus("input4");
						return;	
					}
					if(pay_dt == ""){
						alert("지급일을 입력해 주세요.");
						model1.setFocus("input6");
						return;	
					}
					
					model1.send("hd_dalon_1901");
					model1.copyNode("/root/resData/gridData", "/root/dataSet/CURLIST");
					model1.refresh();	
					model1.removenode("/root/dataSet");
					model1.copyNode("/root/resData/slipData", "");
					
					for(var i=1 ;i< datagrid2.rows;i++){
						var proc_stat = model1.getValue("/root/resData/gridData/record["+i+"]/proc_stat");							
						if(proc_stat != ""){
							datagrid2.isReadOnly(i, 1, i, 17) = true;
						}else{
							datagrid2.isReadOnly(i, 1, i, 17) = false;
						}
						datagrid2.isReadOnly(i, 3, i, 4) = true;
						datagrid2.valueMatrix(i, datagrid2.colRef("chk")) = 0;
					}													
					datagrid2.clearStatus();											
					model1.refresh();		
						
					var totcnt = datagrid2.rows;
					model1.setValue("/root/resData/totcnt", "총 " + Number(totcnt - 1) + " 건");
					model1.refresh();		
				]]>
			</script>
		</button>
		<button id="button12" class="btn03" style="left:536px; top:40px; width:63px; height:21px; ">
			<caption>수당생성</caption>
			<script type="javascript" ev:event="DOMActivate">
				<![CDATA[
					var st_dt = model1.getValue("/root/reqData/searchData/duty_dt_fm");
					var ed_dt = model1.getValue("/root/reqData/searchData/duty_dt_to");
					var pay_dt = model1.getValue("/root/reqData/searchData/pay_dt");
					
					if(st_dt == ""){
						alert("근무기간 시작일을 입력해 주세요.");
						model1.setFocus("input3");
						return;	
					}
					if(ed_dt == ""){
						alert("근무기간 종료일을 입력해 주세요.");
						model1.setFocus("input4");
						return;	
					}
					if(pay_dt == ""){
						alert("지급일을 입력해 주세요.");
						model1.setFocus("input6");
						return;	
					}
					
					//model1.send("hd_dalon_1911");
					model1.send("hd_dalon_2047");
					model1.copyNode("/root/resData/gridData", "/root/dataSet/CURLIST");
					model1.refresh();	
					model1.removenode("/root/dataSet");
					model1.copyNode("/root/resData/slipData", "");
					
					for(var i=1 ;i< datagrid2.rows;i++){
						var proc_stat = model1.getValue("/root/resData/gridData/record["+i+"]/proc_stat");							
						if(proc_stat != ""){
							datagrid2.isReadOnly(i, 1, i, 17) = true;
						}else{
							datagrid2.isReadOnly(i, 1, i, 17) = false;
						}
						datagrid2.isReadOnly(i, 3, i, 4) = true;
						datagrid2.valueMatrix(i, datagrid2.colRef("chk")) = 0;
					}													
					datagrid2.clearStatus();											
					model1.refresh();		
						
					var totcnt = datagrid2.rows;
					model1.setValue("/root/resData/totcnt", "총 " + Number(totcnt - 1) + " 건");
					model1.refresh();		
				]]>
			</script>
		</button>
	</xhtml:body>
</xhtml:html>

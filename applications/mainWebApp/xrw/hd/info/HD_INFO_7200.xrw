<?xml version="1.0" encoding="EUC-KR"?>
<?xml-stylesheet href="../../../css/style_sheet.css" type="text/css" ?>
<xhtml:html xmlns:ex="http://www.comsquare.co.kr/xforms/excel" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:ms="urn:schemas-microsoft-com:xslt" xmlns:my="http://www.comsquare.co.kr/example" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/2002/01/xforms" xmlns:ev="http://www.w3.org/2001/xml-events" xmlns:cs="http://www.comsquare.co.kr/xforms">
	<xhtml:head>
		<xhtml:title>Untitle</xhtml:title>
		<model id="model1">
			<instance id="instance1">
				<root xmlns="">
					<initData>
						<hd_info_7208_m>
							<dataSet>
								<xx_proc_clsf_010/>
								<xx_proc_clsf_020/>
								<xx_proc_clsf_030/>
								<xx_proc_clsf_040/>
								<xx_proc_clsf_050/>
								<xx_proc_clsf_060/>
								<xx_proc_clsf_070/>
								<xx_proc_clsf_080/>
								<mang_cd_9003_5/>
								<mang_cd_9004_5/>
								<mang_cd_9004_6/>
								<mang_cd_9004_8/>
								<mang_cd_9005_5/>
							</dataSet>
						</hd_info_7208_m>
						<!-- 화면 로딩시의 초기 데이터를 담당 -->
						<session/>
						<!-- 서버의 세션 정보를 담당한다 -->
						<comboSet>
							<!-- 선택계열의 정보를 담당 -->
							<proc_stat>
								<item/>
							</proc_stat>
						</comboSet>
						<!-- 콤보리스트와 같은 선택게열의 데이터는 <item>을 반복함으로써 list를 구성한다. -->
						<pageInfo>
							<!-- 해당 화면의 필요한 기타 정보들을 추가운영 할 수 있다 -->
						</pageInfo>
						<!-- 해당 화면의 필요한 기타 정보들을 추가운영 할 수 있다 -->
					</initData>
					<reqData>
						<!-- 전달하고자 하는 데이터를 담당 ( submit 함수에서 처리) -->
						<searchData>
							<pay_mm/>
							<proc_stat/>
							<actu_slip_no/>
							<dept_cd/>
							<flnm/>
							<slip_seq/>
							<slip_occr_dt/>
							<slip_clsf_cd/>
							<medi_cd/>
							<dtl_medi_cd/>
							<tmp_crdt_amt/>
							<incmg_pers/>
							<incmg_pers_ipadd/>
							<clos_yn/>
							<titl/>
							<dept_nm/>
						</searchData>
						<!-- 검색조건 처리 -->
						<reqForm>
							<send_ch/>
							<medi_cd/>
						</reqForm>
						<!-- formData 팝업,화면전환시 data이동시 -->
						<multiUpData/>
						<!-- MultiUpDate유형 사용시 처리 -->
						<fwdData>
							<func_nm/>
						</fwdData>
						<selectedIdx/>
						<multiUpData1/>
					</reqData>
					<resData>
						<!-- 전달 받은 데이터를 담당 ( submit의 결과가 담김) -->
						<!-- 전달 받은 formData를 담당 ( submit의 결과가 담김) -->
						<!-- 전달 받은 데이터를 가공할 임시저장소 ( submit의 결과가 담김) -->
						<msg/>
						<!-- 전달 받은 errorCode를 담당 ( submit의 결과가 담김) -->
						<!-- 전달 받은 errorMsg를 담당 ( submit의 결과가 담김) -->
						<gridData>
							<!-- 전달 받은 grid데이터를 담당 ( submit의 결과가 담김) -->
							<record>
								<!-- datagrid1 -->
								<cmpy_cd/>
								<frlc_no/>
								<occr_dt/>
								<seq/>
								<mang_no/>
								<flnm/>
								<budg_nm/>
								<budg_cd/>
								<chrg_posk_cd/>
								<chrg_posk_nm/>
								<medi_cd/>
								<thrw_pgm/>
								<thrw_pgm_nm/>
								<cntr_dt/>
								<cntr_expr_dt/>
								<dept_nm/>
								<lvcmpy_dt/>
								<pay_cycl/>
								<save/>
								<slip_proc_mang_dt/>
								<slip_proc_mang_seq/>
								<slip_proc_seq/>
								<actu_slip_no/>
								<servcost/>
								<draft_no/>
								<duty_dds/>
								<duty_tms/>
								<etc_amt/>
								<tot_amt/>
								<remk/>
								<pay_amt/>
								<pay_cycl_nm/>
								<pay_mm/>
								<incm_clsf_nm/>
								<incm_clsf_cd/>
								<base_amt/>
								<incm_tax/>
								<res_tax/>
								<draft_dept_cd/>
								<setl_bank/>
								<acct_no/>
							</record>
							<!-- datagrid2 -->
							<!-- datagrid3 -->
						</gridData>
						<slipData>
							<record>
								<cmpy_cd/>
								<mang_no/>
								<dept_cd/>
								<flnm/>
								<tot_amt/>
								<tmp_crdt_amt/>
								<titl/>
								<slip_seq/>
								<slip_occr_dt/>
								<slip_clsf_cd/>
								<incmg_pres/>
								<incmg_pers_ipadd/>
								<proc_stat/>
								<dept_nm/>
							</record>
						</slipData>
						<totcnt/>
					</resData>
					<tempData/>
				</root>
			</instance>
			<script type="javascript">
				<![CDATA[
						var searchFlag = false;
						
						function fnWithTaxSetting() {
							var var_with_tax,  var_incm_tax, var_res_tax, var_suply_amt, var_amt, var_pay_amt;
							
							for(var i=1 ;i< datagrid1.rows;i++){
								var tot_amt  = datagrid1.valueMatrix(i, datagrid1.colRef("tot_amt"));
								var incm_clsf_cd = datagrid1.valueMatrix(i, datagrid1.colRef("incm_clsf_cd"));

							
							/*	if (Number(tot_amt.value) == 0) { // 과표*/
								if (Number(tot_amt) == 0) { // 과표
									var_suply_amt = 0;
								}
								else {
									var_suply_amt = tot_amt;
								}
								
								var mang_cd_9003_5 = model1.getValue("/root/initData/hd_info_7208_m/dataSet/mang_cd_9003_5");
								var mang_cd_9004_5 = model1.getValue("/root/initData/hd_info_7208_m/dataSet/mang_cd_9004_5");
								var mang_cd_9004_6 = model1.getValue("/root/initData/hd_info_7208_m/dataSet/mang_cd_9004_6");
								var mang_cd_9004_8 = model1.getValue("/root/initData/hd_info_7208_m/dataSet/mang_cd_9004_8");
								var mang_cd_9005_5 = model1.getValue("/root/initData/hd_info_7208_m/dataSet/mang_cd_9005_5");

							
								switch (incm_clsf_cd.substring(0, 5)) {	// 소득구분
									
								
									case "9003" :
										// 9003은 원천징수액 입력하지 않으며, 과표로 계산
			//							var_incm_tax = var_suply_amt * 0.03 / 10;
 										var_incm_tax = var_suply_amt * mang_cd_9003_5 / 10;

										var_incm_tax = var_incm_tax.GetRound(-1, -1) * 10; 	// 소득세=과표*0.03, 원단위 버림 
										var_res_tax = var_incm_tax * 0.1 / 10;
										var_res_tax = var_res_tax.GetRound(-1, -1) * 10;	// 주민세=소득세*0.1, 원단위 버림
										break;
									case "9004" :
																	
										var ch_num = (1*10 - (mang_cd_9004_6 *10))/10; 
										
			//							if (var_suply_amt * 0.2 <= 50000) { var_suply_amt = 0; }
										if (var_suply_amt * ch_num <= mang_cd_9004_8)
										{ var_suply_amt = 0; }
										// 9004는 원천징수액 입력하지 않으며, 과표로 계산
			//							var_incm_tax = var_suply_amt * 0.2 * 0.2 / 10;
										
									    var_incm_tax = var_suply_amt * ch_num * mang_cd_9004_5 / 10;
										
			//					var_incm_tax = var_suply_amt * ch_num * 0.2 / 10;
										var_incm_tax = var_incm_tax.GetRound(-1, -1) * 10; 	// 소득세=과표*0.25*0.2, 원단위 버림

										var_res_tax = var_incm_tax * 0.1 / 10;
										var_res_tax = var_res_tax.GetRound(-1, -1) * 10;	// 주민세=소득세*0.1, 원단위 버림
								
										break;
									case "9005" :
//										 alert(var_with_tax);
//										alert(var_incm_tax); 
//											if (var_with_tax != 0) {	// 원천징수액 입력시
//												//var req_result = model.alert("원천징수세액을 기준으로 소득세,주민세를 다시 계산하시겠습니까?","원천징수세액계산",4);
//												//if(req_result == 6) {
//													var_incm_tax = var_with_tax / 1.1 / 10;
//													var_incm_tax = var_incm_tax.GetRound(-1, -1) * 10; 	// 소득세=원천징수/1.1, 원단위 버림
//													var_res_tax = var_with_tax - var_incm_tax;
//												//}
//											}
//											else {
//				//								var_incm_tax = var_suply_amt * 0.2 / 10;
//												var req_result = model.alert("원천징수세액이 0입니다. 다시 계산하시겠습니까?","원천징수세액계산",4);
//												//alert(req_result);
//												if(req_result == 6) {
													var_incm_tax = var_suply_amt * mang_cd_9005_5  / 10;
													var_incm_tax = var_incm_tax.GetRound(-1, -1) * 10; 	// 소득세=과표*0.2, 원단위 버림
													var_res_tax = var_incm_tax * 0.1 / 10;
													var_res_tax = var_res_tax.GetRound(-1, -1) * 10;	// 주민세=소득세*0.1, 원단위 버림
/*													var_with_tax = var_incm_tax + var_res_tax;			// 원천징수=소득세+주민세
*///												}else{
//													var_incm_tax = 0;
//													var_res_tax = 0;
//													var_with_tax = 0;
//												}
										//	}
										break;
									default :
										var_pay_amt = 0;
										var_incm_tax = 0;
										var_res_tax = 0;
								}
								
								// 소득세가 1000원미만이면 비과세
								if (var_incm_tax > 0 && var_incm_tax < 1000 && incm_clsf_cd.substring(0, 5) != "9010") {
									var_incm_tax = 0;
									var_res_tax = 0;
								}
								
								datagrid1.valueMatrix(i, datagrid1.colRef("pay_amt")) =  tot_amt - (var_incm_tax + var_res_tax);	
								datagrid1.valueMatrix(i, datagrid1.colRef("incm_tax")) = var_incm_tax;	

//								model1.setValue("/root/resData/gridData/record["+i+"]/incm_tax", var_incm_tax);
//								res_tax.value = var_res_tax;		// 주민세
								datagrid1.valueMatrix(i, datagrid1.colRef("res_tax")) = var_res_tax;	

//								model1.setValue("/root/resData/gridData/record["+i+"]/res_tax", var_res_tax);

							}
						
						}
						
						
						function fnWithTaxSettingChk() {
							var var_with_tax,  var_incm_tax, var_res_tax, var_suply_amt, var_amt, var_pay_amt ;
							var rtn_value = false;
							
							for(var i=1 ;i< datagrid1.rows;i++){

								if(datagrid1.rowStatus(i) == "1" || datagrid1.rowStatus(i) == "2" ){
								
									var tot_amt  = datagrid1.valueMatrix(i, datagrid1.colRef("tot_amt"));
									var incm_clsf_cd = datagrid1.valueMatrix(i, datagrid1.colRef("incm_clsf_cd"));  //소득코드 
						           // tot_amt = 200000 ;
									if (Number(tot_amt) == 0) { // 과표
										var_suply_amt = 0;
									}
									else {
										var_suply_amt = tot_amt;
									}
									
									var mang_cd_9003_5 = model1.getValue("/root/initData/hd_info_7208_m/dataSet/mang_cd_9003_5");
									var mang_cd_9004_5 = model1.getValue("/root/initData/hd_info_7208_m/dataSet/mang_cd_9004_5");
									var mang_cd_9004_6 = model1.getValue("/root/initData/hd_info_7208_m/dataSet/mang_cd_9004_6");
									var mang_cd_9004_8 = model1.getValue("/root/initData/hd_info_7208_m/dataSet/mang_cd_9004_8");
									var mang_cd_9005_5 = model1.getValue("/root/initData/hd_info_7208_m/dataSet/mang_cd_9005_5");

									switch (incm_clsf_cd.substring(0, 5)) {	// 소득구분										
									
										case "9003" :
											// 9003은 원천징수액 입력하지 않으며, 과표로 계산
											var_incm_tax = var_suply_amt * mang_cd_9003_5 / 10;  //	var_incm_tax = var_suply_amt * 0.03 / 10;

											var_incm_tax = var_incm_tax.GetRound(-1, -1) * 10; 	// 소득세=과표*0.03, 원단위 버림 
											var_res_tax = var_incm_tax * 0.1 / 10;
											var_res_tax = var_res_tax.GetRound(-1, -1) * 10;	// 주민세=소득세*0.1, 원단위 버림
											break;
										case "9004" :
																		
											var ch_num = (1*10 - (mang_cd_9004_6 *10))/10; 
											
											if (var_suply_amt * ch_num <= mang_cd_9004_8)     //if (var_suply_amt * 0.2 <= 50000) { var_suply_amt = 0; }
											{ var_suply_amt = 0; }
											
											// 9004는 원천징수액 입력하지 않으며, 과표로 계산
											var_incm_tax = var_suply_amt * ch_num * mang_cd_9004_5 / 10;   // var_incm_tax = var_suply_amt * ch_num * 0.2 / 10;
				
											var_incm_tax = var_incm_tax.GetRound(-1, -1) * 10; 	// 소득세=과표*0.25*0.2, 원단위 버림

											var_res_tax = var_incm_tax * 0.1 / 10;
											var_res_tax = var_res_tax.GetRound(-1, -1) * 10;	// 주민세=소득세*0.1, 원단위 버림
									
											break;
										case "9005" :
											var_incm_tax = var_suply_amt * mang_cd_9005_5  / 10;
											var_incm_tax = var_incm_tax.GetRound(-1, -1) * 10; 	// 소득세=과표*0.2, 원단위 버림
											var_res_tax = var_incm_tax * 0.1 / 10;
											var_res_tax = var_res_tax.GetRound(-1, -1) * 10;	// 주민세=소득세*0.1, 원단위 버림
											break;
										default :
											var_pay_amt = 0;
											var_incm_tax = 0;
											var_res_tax = 0;
									}
									
									// 소득세가 1000원미만이면 비과세
									if (var_incm_tax > 0 && var_incm_tax < 1000 && incm_clsf_cd.substring(0, 5) != "9010") {
										var_incm_tax = 0;
										var_res_tax = 0;
									}
									var tatchk = tot_amt - (var_incm_tax + var_res_tax);
									
									
									var pay_amt = datagrid1.valueMatrix(i, datagrid1.colRef("pay_amt")) ;
									
									if(pay_amt !=  tot_amt - (var_incm_tax + var_res_tax) )  // 계산한 지급액과 기존 지급액이 맞지 않을 경우 에러발생 
									{
										alert("지급액이 계산한 지급액과 맞지 않습니다. ");
										rtn_value = true ;
										return rtn_value ;
									}
								}
							}
						
						}
						
						
						function setDept_cd(iv_dept_cd, iv_dept_nm){
							model1.setValue("/root/reqData/searchData/dept_cd", iv_dept_cd);
							model1.setValue("/root/reqData/searchData/dept_nm", iv_dept_nm);
							model1.refresh();
						}
					
				
					     //총금액 총인원 구하기
					     function setTotal_amt_pep(){
					     	
					     	var row2 = datagrid2.rows;
					     	var total_amt = 0;
					     	var cnt = 0;
							
					     	if(row2 == 1 || row2 == -1){
					     		return;
					     	}
							if(row2 > 1 && datagrid2.valueMatrix(1, 2) != ""){					     	

								var s_flnm = model1.getValue("/root/resData/slipData/record[1]/flnm");
								var s_dept_nm = model1.getValue("/root/resData/slipData/record[1]/dept_nm");
						     	for(var i=1;i < row2;i++){

						     		var alon_amt = model1.getValue("/root/resData/slipData/record["+i+"]/tot_amt");
						     		total_amt =  Number(total_amt) + Number(alon_amt);
						     		cnt++;
						     	}
						     	cnt = cnt - 1;
						     	if(cnt == 0){
						     		model1.setValue("/root/resData/slipData/record[1]/tmp_crdt_amt",total_amt);
									model1.setValue("/root/resData/slipData/record[1]/titl",s_dept_nm+"의 프리랜서 용역비");
						     		model1.setValue("/root/reqData/searchData/tmp_crdt_amt",total_amt);
									model1.setValue("/root/reqData/searchData/titl",s_dept_nm+" "+s_flnm+"의 프리랜서 용역비");
						     	}else{
						     		model1.setValue("/root/resData/slipData/record[1]/tmp_crdt_amt",total_amt);
									model1.setValue("/root/resData/slipData/record[1]/titl",s_dept_nm+" "+s_flnm+" 외 "+cnt+"의 프리랜서 용역비");
						     		model1.setValue("/root/reqData/searchData/tmp_crdt_amt",total_amt);
									model1.setValue("/root/reqData/searchData/titl",s_dept_nm+"의 프리랜서 용역비");
						     	}

							}
							model1.refresh();
					     }			
					     //전표등록시 벨류
					     function setInsertSlipValue(){
					     	
					     	var row = datagrid2.rows;
					     	var total_amt = 0;
					     	var cnt = 0;
					     	
					     	if(row == 1){
					     		return;
					     	}
							else if(row > 1){					     	
								var tmp_crdt_amt = model1.getValue("/root/resData/slipData/record[1]/tmp_crdt_amt");
								var titl = model1.getValue("/root/resData/slipData/record[1]/titl");
					     		model1.setValue("/root/reqData/searchData/tmp_crdt_amt",tmp_crdt_amt);
					     		model1.setValue("/root/reqData/searchData/titl",titl);
							}
							model1.refresh();
					     }					     
					     
					     
					     //전표 삭제시 벨류
					     function setDeleteSlipValue(){
					     	
					     	var row = datagrid2.rows;
					     	var total_amt = 0;
					     	var cnt = 0;
					     	
					     	if(row == 1){
					     		return;
					     	}
							else if(row > 1){					     	
								var slip_seq = model1.getValue("/root/resData/slipData/record[1]/slip_seq");
								var slip_occr_dt = model1.getValue("/root/resData/slipData/record[1]/slip_occr_dt");
								var slip_clsf_cd = model1.getValue("/root/resData/slipData/record[1]/slip_clsf_cd");
								var incmg_pers = model1.getValue("/root/resData/slipData/record[1]/incmg_pers");
								var incmg_pers_ipadd = model1.getValue("/root/resData/slipData/record[1]/incmg_pers_ipadd");
					     		model1.setValue("/root/reqData/searchData/slip_seq",slip_seq);
					     		model1.setValue("/root/reqData/searchData/slip_occr_dt",slip_occr_dt);
					     		model1.setValue("/root/reqData/searchData/slip_clsf_cd",slip_clsf_cd);
					     		model1.setValue("/root/reqData/searchData/incmg_pers",incmg_pers);
					     		model1.setValue("/root/reqData/searchData/incmg_pers_ipadd",incmg_pers_ipadd);
							}
							model1.refresh();
					     }						
				
						function gridSearchList(){
							
							datagrid1.fixedcellischeck(0, 1) = false;

							model1.removenode("/root/dataSet");
							model1.send("hd_info_7200");
							model1.copyNode("/root/resData/gridData", "/root/dataSet/CURLIST");
							model1.copyNode("/root/resData/slipData", "/root/dataSet/CURLIST1");	
							
							model1.refresh();				
							setTotal_amt_pep();
							setDeleteSlipValue();
							searchFlag = true;				
							
							for(var i=1 ;i< datagrid1.rows;i++){
								 datagrid1.isReadOnly(i, 1, i, 2) = false;

								var proc_stat = model1.getValue("/root/resData/gridData/record["+i+"]/proc_stat");	
								var pay_cycl = model1.getValue("/root/resData/gridData/record["+i+"]/pay_cycl");	
								
								//if(proc_stat == '29' || proc_stat == '36' || proc_stat == '33'){ 120209
								var dtl_medi_cd = model.getValue("/root/resData/gridData/record["+i+"]/dtl_medi_cd")  ;	

								if(proc_stat == model.getValue("/root/initData/hd_info_7208_m/dataSet/xx_proc_clsf_010")  //29
								|| proc_stat == model.getValue("/root/initData/hd_info_7208_m/dataSet/xx_proc_clsf_030")  //36
								|| proc_stat == model.getValue("/root/initData/hd_info_7208_m/dataSet/xx_proc_clsf_020")){ //33
									datagrid1.isReadOnly(i, 1, i, 14) = true;
									datagrid1.addStatus(1, "insert");
								}else{
									if(proc_stat == model.getValue("/root/initData/hd_info_7208_m/dataSet/xx_proc_clsf_050")  //10
									|| proc_stat == model.getValue("/root/initData/hd_info_7208_m/dataSet/xx_proc_clsf_080"))  //27
									{
										datagrid1.isReadOnly(i, 2, i, 10) = true;
										datagrid1.addStatus(1, "insert");
									}else{
										datagrid1.isReadOnly(i, 1, i, 14) = false;
										datagrid1.addStatus(1, "insert");
									}
								}
								
								if(pay_cycl == "10" || pay_cycl == "20" )
								{
									
									datagrid1.isReadOnly(i, 2, i, 10) =  true;
									datagrid1.addStatus(1, "insert");
								}
								
								datagrid1.valueMatrix(i, datagrid1.colRef("save")) = 0;			
								datagrid1.valueMatrix(i, datagrid1.colRef("dtl_medi_cd")) = dtl_medi_cd;	
							}	
							datagrid1.clearStatus();
							model1.refresh();	
							var totcnt = datagrid1.rows;
							model1.setValue("/root/resData/totcnt", "총 " + Number(totcnt - 1) + " 건");                           

							fnWithTaxSetting();
							model1.refresh();	
						}
						
					
					 //대변금액합계	
					function slip_submit_sum(){
						var row = datagrid2.row;	
						var sum_amt = 0;

						for(var i=1 ;i< datagrid2.rows;i++){
							if(datagrid2.rowStatus(i) == 1){
								var amt = model1.getValue("/root/resData/slipData/record["+i+"]/tot_amt");
								sum_amt = Number(sum_amt) + Number(amt);
							}
						}
						
						model1.setValue("/root/resData/slipData/record[1]/tmp_crdt_amt",sum_amt);
						model1.setValue("/root/reqData/searchData/tmp_crdt_amt",sum_amt);
						datagrid2.refresh();
					}
					//적요
					function slip_remark(){
						var emp_cnt = 0;
						var flnm = "";
						var dept_nm = "";
						var fstSel = "1";
						
						for(var k=1;k<datagrid1.rows;k++){
	     						if(datagrid1.valueMatrix(k, datagrid1.colRef("save")) == 1){
	     							emp_cnt++;
	     							
	     							if(fstSel == "1"){
	     								var remark_flnm = model1.getValue("/root/resData/gridData/record["+k+"]/flnm");
	     								var remark_dept_nm = model1.getValue("/root/resData/gridData/record["+k+"]/dept_nm");
	     								fstSel = "2";
	     							}
	     						}
	     					}
	     					
						if(emp_cnt == 1){
							model1.setValue("/root/resData/slipData/record/titl", remark_dept_nm + " " + remark_flnm +" 프리랜서 용역비");
							model1.setValue("/root/reqData/searchData/titl", remark_dept_nm + " " + remark_flnm +" 프리랜서 용역비");							
						}else if(emp_cnt > 1) {
							emp_cnt = emp_cnt - 1;
							model1.setValue("/root/resData/slipData/record/titl", remark_dept_nm + " " + remark_flnm + " 외 "+ emp_cnt +"명 프리랜서 용역비");		
							model1.setValue("/root/reqData/searchData/titl", remark_dept_nm + " " + remark_flnm + " 외 "+ emp_cnt +"명 프리랜서 용역비");						
						}
						datagrid2.refresh();
					}  
					
					//적요
					function slip_remark111(){
						var all_cnt = 0;
						var flnm = "";
						
						for(var k=1;k<datagrid2.rows;k++){
	     						if(datagrid2.rowStatus(k) == 1){
	     							all_cnt++;
	     						}
	     					}
	     					emp_cnt = all_cnt 
	     					
						for(var i=1;i<datagrid2.rows;i++){
							if(datagrid2.rowStatus(i) == 1){
								if(flnm == ""){
									flnm = model1.getValue("/root/resData/slipData/record["+i+"]/flnm");
								}
							}
				   	  	}
				   	  	
						if(emp_cnt == 1){
							model1.setValue("/root/resData/slipData/record/titl",flnm+" 프리랜서 용역비");
							model1.setValue("/root/reqData/searchData/titl",flnm+" 프리랜서 용역비");							
						}else if(emp_cnt > 1) {
							cnt = emp_cnt - 1;
							model1.setValue("/root/resData/slipData/record/titl",flnm+" 외 "+cnt+"명 프리랜서 용역비");		
							model1.setValue("/root/reqData/searchData/titl",flnm+" 외 "+cnt+"명 프리랜서 용역비");						
						}
						datagrid2.refresh();
					}  	
				]]>
			</script>
			<script type="javascript" ev:event="xforms-ready">
				<![CDATA[
					model.send("hd_info_7208_m");
					model.refresh();
					
					var now_date = new Date();
					var year = now_date.getYear();
					var month = now_date.getMonth() + 1;
					var day = now_date.getDate();    
					var month_tm = '0' + month;
					var day_tm = '0' + day;  
					if(month_tm.length == 3){
						month_tm = month_tm.substring(1, 3);
					}
					if(day_tm.length == 3){
						day_tm = day_tm.substring(1, 3);
					}
					var now_dt = year + month_tm + day_tm;
					var now_dt_sub = year + month_tm ;
				
					model1.setValue("/root/reqData/searchData/pay_mm", now_dt_sub);
					
					//model1.setValue("/root/reqData/searchData/proc_stat", "00"); 120209
					model1.setValue("/root/reqData/searchData/proc_stat", model.getValue("/root/initData/hd_info_7208_m/dataSet/xx_proc_clsf_040"));
					model1.send("hd_info_7203");
					model1.copyNode("/root/initData/comboSet/proc_stat", "/root/dataSet/CURLIST1");
					model1.copyNode("/root/initData/comboSet/real_cd", "/root/dataSet/CURLIST2");
					model1.removenode("/root/dataSet");
					//datagrid1.isReadOnly(1, 1, 1, 11) = true;
					datagrid1.fixedcellcheckbox(0, datagrid1.colRef("save"), false) = true;
					datagrid1.addStatus(1, "insert");
					
				
					model1.refresh();
				]]>
			</script>
			<submission id="hd_cost_1102" action="/hd/cost/1102" mediatype="application/x-www-form-urlencoded" method="post" ref="/root/reqData/searchData" resultref="/root/tempData"/>
			<submission id="hd_cost_1104" action="/hd/cost/1104" mediatype="application/x-www-form-urlencoded" method="post" ref="/root/reqData" resultref="/root/tempData"/>
			<submission id="hd_cost_1105" action="/hd/cost/1105" mediatype="application/x-www-form-urlencoded" method="post" ref="/root/reqData/multiUpData" resultref="/root/tempData"/>
			<submission id="hd_cost_1106" action="/hd/cost/1106" mediatype="application/x-www-form-urlencoded" method="post" ref="/root/reqData/multiUpData" resultref="/root/tempData"/>
			<submission id="hd_cost_1108" action="/hd/cost/1108" mediatype="application/x-www-form-urlencoded" method="post" ref="/root/reqData/multiUpData" resultref="/root/tempData"/>
			<submission id="hd_info_7200" action="/hd/info/7200" mediatype="application/x-www-form-urlencoded" method="post" ref="/root/reqData/searchData" resultref="/root/tempData"/>
			<submission id="hd_info_7202" action="/hd/info/7202" mediatype="application/x-www-form-urlencoded" method="post" ref="/root/reqData/searchData" resultref="/root/tempData"/>
			<submission id="hd_info_7201" action="/hd/info/7201" mediatype="application/x-www-form-urlencoded" method="post" ref="/root/reqData/multiUpData" resultref="/root/tempData"/>
			<submission id="hd_info_7203" action="/hd/info/7203" mediatype="application/x-www-form-urlencoded" method="post" ref="/root/reqData/searchData" resultref="/root/tempData"/>
			<submission id="hd_info_7204" action="/hd/info/7204" mediatype="application/x-www-form-urlencoded" method="post" ref="/root/reqData" resultref="/root/tempData"/>
			<submission id="hd_info_7206" action="/hd/info/7206" mediatype="application/x-www-form-urlencoded" method="post" ref="/root/reqData" resultref="/root/tempData"/>
			<submission id="hd_info_7207" action="/hd/info/7207" mediatype="application/x-www-form-urlencoded" method="post" ref="/root/reqData" resultref="/root/tempData"/>
			<submission id="hd_info_7208_m" action="/hd/info/7208" mediatype="application/x-www-form-urlencoded" method="post" resultref="/root/initData/hd_info_7208_m/dataSet"/>
		</model>
		<script type="javascript" src="/js/CIISComm.js"/>
		<script type="javascript" src="/js/fcmc_common.js"/>
	</xhtml:head>
	<xhtml:body class="main" pagewidth="946" pageheight="728" guideline="1,936;" style="font-family:굴림; background-image:../../images/bg_946.gif; ">
		<import id="iv_Title" src="../../../common/xrw/iv_TitleBar.xrw" style="left:10px; top:5px; width:926px; height:29px; "/>
		<group id="group_btnA" class="gro_btn" style="left:10px; top:45px; width:926px; height:21px; ">
			<button id="button4" class="btn02" style="left:874px; top:0px; width:52px; height:21px; ">
				<caption>종료</caption>
				<script type="javascript" ev:event="onclick">
					<![CDATA[
				 	viewer("mainFrame").window.javaScript.closeMDIWindow(model.getValue("/root/initData/pageInfo/pageID"));
					]]>
				</script>
			</button>
			<button id="button30" class="btn04" crud="C" style="left:786px; top:0px; width:86px; height:21px; ">
				<caption>엑셀다운로드</caption>
				<script type="javascript" ev:event="onclick">
					<![CDATA[
					//excel 파일로 저장한다
					var filePath = window.fileDialog("save", "", false, "", "xls", "Excel Files(*.xls)|*.xls");
					if(filePath != "") {
						datagrid1.saveExcel(filePath);
						window.exec(filePath);
						
					}
					]]>
				</script>
			</button>
			<button id="button3" class="btn02" style="left:407px; top:0px; width:52px; height:21px; ">
				<caption>저장</caption>
				<script type="javascript" ev:event="onclick">
					<![CDATA[
						var flag1 = false;
					    var msg  = ""; 

						for (var i=1;i<datagrid1.rows;i++) {
							var chk = datagrid1.valueMatrix(i, datagrid1.colRef("save"));
                                
								
							if(chk == "1"){
								
								var chk = datagrid1.valueMatrix(i, datagrid1.colRef("save"));
								var proc_stat = model1.getValue("/root/resData/gridData/record["+i+"]/proc_stat");
								
								var budg_cd = datagrid1.valueMatrix(i, datagrid1.colRef("budg_cd"));
								var chrg_posk_cd = datagrid1.valueMatrix(i, datagrid1.colRef("chrg_posk_cd"));
								var medi_cd = datagrid1.valueMatrix(i, datagrid1.colRef("medi_cd"));
								var pay_cycl = datagrid1.valueMatrix(i, datagrid1.colRef("pay_cycl"));
								var draft_no = datagrid1.valueMatrix(i, datagrid1.colRef("draft_no"));
								var draft_dept_cd = datagrid1.valueMatrix(i, datagrid1.colRef("draft_dept_cd"));
								var pay_cycl = datagrid1.valueMatrix(i, datagrid1.colRef("pay_cycl"));
								var servcost = datagrid1.valueMatrix(i, datagrid1.colRef("servcost"));
								var setl_bank = datagrid1.valueMatrix(i, datagrid1.colRef("setl_bank"));
								var acct_no = datagrid1.valueMatrix(i, datagrid1.colRef("acct_no"));
								var incm_clsf_cd = datagrid1.valueMatrix(i, datagrid1.colRef("incm_clsf_cd"));
								var incm_tax = datagrid1.valueMatrix(i, datagrid1.colRef("incm_tax"));
								
								var flnm = datagrid1.valueMatrix(i, datagrid1.colRef("flnm"));
								var rmk  = "";
								
								if(budg_cd == null || budg_cd == "")
								{
									rmk =" 예산구분"
								}
								if(incm_clsf_cd == null || incm_clsf_cd == "")
								{
									rmk =" 소득구분"
								}
								if(chrg_posk_cd == null || chrg_posk_cd =="")
								{
									if(rmk == "")
									{
										rmk = " 직무구분"
									}
									else
									{
										rmk =rmk +", 직무구분"
									}
								}
								if(medi_cd == null ||medi_cd == "")
								{
									if(rmk == "")
									{
										rmk = " 매체구분"
									}
									else
									{
										rmk =rmk +", 매체구분"
									}
								}
	//							if(draft_no == null ||draft_no == "" || draft_dept_cd == null ||draft_dept_cd == "")
	//							{
	//								if(rmk == "")
	//								{
	//									rmk = " 기안번호 또는 기안 부서"
	//								}
	//								else
	//								{
	//									rmk =rmk +", 기안번호 또는 기안 부서"
	//								}
	//							}
								if(setl_bank == null ||setl_bank == ""||acct_no == null ||acct_no == "")
								{
									if(rmk == "")
									{
										rmk = " 은행계좌번호"
									}
									else
									{
										rmk =rmk +", 은행계좌번호"
									}
								}
								if(pay_cycl == null ||pay_cycl == "")
								{
									if(rmk == "")
									{
										rmk = " 주기구분"
									}
									else
									{
										rmk =rmk +", 주기구분"
									}
								}

							
								if(rmk != "")
								{
									//alert(rmk);
									msg = msg + flnm+"님의"+rmk+"가 없습니다. \n"   ;
									//return;
								}
							}
							if(msg != "")
							{
								alert(msg);
								return;
							}
							
						}
						 
					    		  //소득세 주민세 금액 체크
							if (fnWithTaxSettingChk())
							return;
							
							//if(proc_stat >= 25 ){ 120209
							if(proc_stat >= Number(model.getValue("/root/initData/hd_info_7208_m/dataSet/xx_proc_clsf_050")) 
							   && proc_stat != Number(model.getValue("/root/initData/hd_info_7208_m/dataSet/xx_proc_clsf_080")) ){
								alert("등록이 아닌 상태의 데이터가 있습니다.\n\n등록 상태의 데이터만 처리 하십시오. ");
								return;
							}
						
					
						
						
						if (!rowInSubmit(datagrid1))
							return;
							
						if (window.alert("저장하시겠습니까?", "확인", 1) != 1) {
							return;
						};
						model1.setValue("/root/reqData/multiUpData", datagrid1.getUpdateData());
						model1.send("hd_info_7201");
						if(submit_completed()) {
							model1.reset();
							datagrid1.clearStatus();
							//datagrid1.isReadOnly(1, 1, 1, 11) = true;
							datagrid1.addStatus(1, "insert");
							gridSearchList();
						}
					]]>
				</script>
			</button>
			<button id="button8" class="btn02" style="left:192px; top:0px; width:52px; height:21px; ">
				<caption>초기화</caption>
				<script type="javascript" ev:event="onclick">
					<![CDATA[
						model1.reset();
						datagrid1.clearStatus();
						//datagrid1.isReadOnly(1, 1, 1, 11) = true;
						datagrid1.fixedcellischeck(0, 1) = false;
						datagrid1.addStatus(1, "insert");
					]]>
				</script>
			</button>
			<button id="button9" class="btn02" style="left:246px; top:0px; width:52px; height:21px; ">
				<caption>조회</caption>
				<script type="javascript" ev:event="onclick">
					<![CDATA[
						gridSearchList();
					]]>
				</script>
			</button>
			<button id="button12" class="btn02" style="left:353px; top:0px; width:52px; height:21px; ">
				<caption>삭제</caption>
				<script type="javascript" ev:event="onclick">
					<![CDATA[
						var flag1 = false;
						for (var i=1;i<datagrid1.rows;i++) {
							var chk = datagrid1.valueMatrix(i, datagrid1.colRef("save"));
							var proc_stat = model1.getValue("/root/resData/gridData/record["+i+"]/proc_stat");
							
							
							if(chk == "1"){	
								
								//if(proc_stat >= 25 ){ 120209
								if(proc_stat >= Number(model.getValue("/root/initData/hd_info_7208_m/dataSet/xx_proc_clsf_050")) ){
									if(proc_stat != Number(model.getValue("/root/initData/hd_info_7208_m/dataSet/xx_proc_clsf_080")) ){
										alert("등록이 아닌 상태의 데이터가 있습니다.\n\n등록 상태의 데이터만 처리 하십시오. ");
										return;
									}
								
								}
								//if(proc_stat == 10 || proc_stat == 27){ 120209
								if(proc_stat == model.getValue("/root/initData/hd_info_7208_m/dataSet/xx_proc_clsf_060") 
							    || proc_stat == model.getValue("/root/initData/hd_info_7208_m/dataSet/xx_proc_clsf_080")){
										//datagrid1.addStatus(1, "delete");		
									datagrid1.rowstatus(i) = 4;
								}
								else 
								{
									alert("진행상태가 등록 및 마감 취소 상태일 경우만 삭제 가능합니다.");
									 return;
								}
							}
						}
						
						if (!rowDelSubmit(datagrid1)) {
							return;
						}
							
							
						if (window.alert("삭제 하시겠습니까?", "확인", 1) != 1) {
							return;
						};
						model1.setValue("/root/reqData/multiUpData", datagrid1.getUpdateData());
						model1.send("hd_info_7201");
						
						if(submit_completed()) {
							model1.reset();
							datagrid1.clearStatus();
							//datagrid1.isReadOnly(1, 1, 1, 11) = true;
							datagrid1.addStatus(1, "insert");
							gridSearchList();
						}
					]]>
				</script>
			</button>
			<button id="button13" class="btn03" crud="C" style="left:582px; top:0px; width:65px; height:21px; ">
				<caption>전표생성</caption>
				<script type="javascript" ev:event="onclick">
					<![CDATA[
						var flag = true;

						if(datagrid2.rows == -1){
							alert("생성할전표가 없습니다.");
							return;
						}					
						if(datagrid2.valueMatrix(1,1) == ""){
							alert("생성할전표가 없습니다.");	
							return;
						}					
						for(var i=1; i<datagrid1.rows;i++){
							var chk = datagrid1.valueMatrix(i, datagrid1.colRef("save"));
							var proc_stat = model1.getValue("/root/resData/gridData/record["+i+"]/proc_stat");
							var actu_slip_no = model1.getValue("/root/resData/gridData/record["+i+"]/actu_slip_no");
							var pay_dt = model1.getValue("/root/resData/gridData/record["+i+"]/pay_dt");
							var pay_amt = model1.getValue("/root/resData/gridData/record["+i+"]/pay_amt");

							
							if(chk == "1"){
								//전표 등록 체크
								//if(proc_stat == 25 || proc_stat == 28){ 120209
								if(Number(pay_amt) == 0 ) 
								{
									alert("지급액이 0일 경우 전표등록이 불가능 합니다.");
									return;
								}
								if(proc_stat == model.getValue("/root/initData/hd_info_7208_m/dataSet/xx_proc_clsf_050") 
								|| proc_stat == model.getValue("/root/initData/hd_info_7208_m/dataSet/xx_proc_clsf_070")){
									flag = false;
								}
								else
								{
									alert("진행상태가 마감 및 전표취소 상태일 경우만 전표생성이 가능합니다. ");
									return;	
								}
							}
						}
						if(flag){
							alert("생성할전표가 없습니다.");
							return;								
						}
						if (window.alert("전표생성 하시겠습니까?", "확인", 1) != 1) {
							return;
						}					
						setInsertSlipValue();
	 					//for(var i=0;i<datagrid2.rows;i++){
						//	datagrid2.addStatus(i, "insert");							
						//}
						
						for(var i=0;i<datagrid1.rows;i++){ 
							var chk = datagrid1.valueMatrix(i, datagrid1.colRef("save"));
							var proc_stat = model1.getValue("/root/resData/gridData/record["+i+"]/proc_stat");
							
							if(chk == "1"){						
								//if(proc_stat == 25 || proc_stat == 28){ 120209
								if(proc_stat == model.getValue("/root/initData/hd_info_7208_m/dataSet/xx_proc_clsf_050") 
								|| proc_stat == model.getValue("/root/initData/hd_info_7208_m/dataSet/xx_proc_clsf_070")){
									datagrid1.addStatus(i, "insert");							
								}
							}
						}
						
						model1.setValue("/root/reqData/multiUpData", datagrid1.getUpdateData());
						model1.setValue("/root/reqData/multiUpData1", datagrid2.getUpdateData());
						datagrid1.clearStatus();
						datagrid2.clearStatus();							
						model1.send("hd_info_7206");
						//전표번호
						var actu_slip_no = model1.getValue("/root/dataSet/record/actu_slip_no");
					//	alert(actu_slip_no);
						model1.removenode("/root/slipNoData/slip_no");
						model1.makeValue("/root/slipNoData/slip_no",actu_slip_no);
						model1.removenode("/root/dataSet");
						
						if(submit_completed()) {			
							gridSearchList();
							var ss_emp_no = getProperty("ss_emp_no");

							// 오즈관련 노드 초기화..
						 	resetOznode();					
						 	// ozr경로 및 odi 파일명으로 사용될 노드 및 value셋팅 ( OZR파일경로 .ozr 제거)					
					 	    makeNodeValue("/root/oz_data/ozrName","hd/HD_INFO_7205");
							makeNodeValue("/root/oz_data/preview","preview"); 	//preview : 미리보기, print : 인쇄
							//makeNodeValue("/root/oz_data/printsize"); 			//페이지용지설정(기본 A4)	
							makeNodeValue("/root/oz_data/printsize","A4 (JIS)");   //페이지용지설정(기본 A4)
						 	
						 	// odi 파라미터 설정.					
						 	makeNodeValue("/root/oz_data/odiParam/iv_cmpy_cd",getProperty("ss_cmpycd"));		
						 	makeNodeValue("/root/oz_data/odiParam/iv_actu_slip_no",actu_slip_no);		
							makeNodeValue("/root/oz_data/odiParam/iv_incmg_pers",ss_emp_no);						

							makeNodeValue("/root/oz_data/childCount","3");
					
							makeNodeValue("/root/oz_data/child1/ozrName","hd/HD_INFO_7209");
							makeNodeValue("/root/oz_data/child1/odiParam/iv_cmpy_cd"     ,getProperty("ss_cmpycd") );	
							makeNodeValue("/root/oz_data/child1/odiParam/iv_incmg_pers",ss_emp_no);					
							makeNodeValue("/root/oz_data/child1/odiParam/iv_actu_slip_no",actu_slip_no);

							//makeNodeValue("/root/oz_data/child1/odiParam/iv_cmpy_cd"     ,"332" );	
							makeNodeValue("/root/oz_data/child1/printsize","A4 (JIS)"); 		//페이지용지설정(기본 A4)
							
							//은행송금 확인서 
							makeNodeValue("/root/oz_data/child2/ozrName","hd/HD_COM_3000_P");								
							makeNodeValue("/root/oz_data/child2/odiParam/iv_cmpy_cd"     ,getProperty("ss_cmpycd") );
							makeNodeValue("/root/oz_data/child2/odiParam/iv_actu_slip_no",actu_slip_no);
							makeNodeValue("/root/oz_data/child2/printsize","B5 (JIS)"); 		//페이지용지설정(기본 A4)
							
							//은행송금 의뢰서
							makeNodeValue("/root/oz_data/child3/ozrName","hd/HD_COM_3001_P");
							makeNodeValue("/root/oz_data/child3/odiParam/iv_cmpy_cd"     ,getProperty("ss_cmpycd") );
							makeNodeValue("/root/oz_data/child3/odiParam/iv_actu_slip_no",actu_slip_no);
							makeNodeValue("/root/oz_data/child3/printsize","B5 (JIS)"); 
							
						 					
						 	// 레포트뷰어 호출.					
						 	openOzwin("/root/oz_data");
						}	
					]]>
				</script>
			</button>
			<button id="button14" class="btn03" crud="C" style="left:650px; top:0px; width:65px; height:21px; ">
				<caption>전표취소</caption>
				<script type="javascript" ev:event="onclick">
					<![CDATA[
						if(searchFlag == false && actu_slip_no_in.value == ""){
							alert("취소할 전표번호를 조회해 주세요.");	
							return;
						}								
						if(datagrid2.rows == -1){
							alert("취소할 전표가 없습니다.");
							return;
						}					
						if(datagrid2.rows == 1){
							//alert("취소할 전표가 없습니다.");
							alert("취소할 전표번호를 조회해 주세요.");	
							return;
						}					
						for(var i=1; i<datagrid2.rows;i++){
							var proc_stat = model1.getValue("/root/resData/slipData/record["+i+"]/proc_stat");
							var actu_slip_no = model1.getValue("/root/resData/slipData/record["+i+"]/actu_slip_no");
							//전표 등록 체크
							//if(proc_stat == 29 || proc_stat == 36){ 120209
							if(proc_stat == model.getValue("/root/initData/hd_info_7208_m/dataSet/xx_proc_clsf_010") 
							|| proc_stat == model.getValue("/root/initData/hd_info_7208_m/dataSet/xx_proc_clsf_030")){
							}else{
								alert("취소할 전표번호를 조회해 주세요.");
								return;								
							}
						}
						if (window.alert("전표취소 하시겠습니까?", "확인", 1) != 1) {
							return;
						}							
						for(var i=0;i<datagrid1.rows;i++){ 
							datagrid1.addStatus(i, "update");							
						}
						model1.setValue("/root/reqData/multiUpData", datagrid1.getUpdateData());
						model1.send("hd_info_7207");
						datagrid1.clearStatus();
						datagrid2.clearStatus();
						if(submit_completed()) {
							//alert('전표취소 되었습니다.');
							model1.reset();
							gridSearchList();
						}	
					]]>
				</script>
			</button>
			<button id="button1" class="btn03" crud="C" style="left:718px; top:0px; width:65px; height:21px; ">
				<caption>장표출력</caption>
				<script type="javascript" ev:event="onclick">
					<![CDATA[
						var actu_slip_no = model1.getValue("/root/reqData/searchData/actu_slip_no");
						var ss_emp_no = getProperty("ss_emp_no");

						if(actu_slip_no == ""){
							alert("전표번호를 입력해주세요.");
							return;
						}

						// 오즈관련 노드 초기화..
					 	resetOznode();					
					 	// ozr경로 및 odi 파일명으로 사용될 노드 및 value셋팅 ( OZR파일경로 .ozr 제거)					
					 	makeNodeValue("/root/oz_data/ozrName","hd/HD_INFO_7205");
						makeNodeValue("/root/oz_data/preview","preview"); 	//preview : 미리보기, print : 인쇄
						//makeNodeValue("/root/oz_data/printsize"); 			//페이지용지설정(기본 A4)	
						makeNodeValue("/root/oz_data/printsize","B5 (JIS)");   //페이지용지설정(기본 A4)
					 	
					 	// odi 파라미터 설정.					
					 	makeNodeValue("/root/oz_data/odiParam/iv_cmpy_cd",getProperty("ss_cmpycd"));					
					 	makeNodeValue("/root/oz_data/odiParam/iv_actu_slip_no",actu_slip_no);	
						makeNodeValue("/root/oz_data/odiParam/iv_incmg_pers",ss_emp_no);						
					 	
						makeNodeValue("/root/oz_data/childCount","3");
					
						makeNodeValue("/root/oz_data/child1/ozrName","hd/HD_INFO_7209");
						makeNodeValue("/root/oz_data/child1/odiParam/iv_cmpy_cd"     ,getProperty("ss_cmpycd") );	
						makeNodeValue("/root/oz_data/child1/odiParam/iv_actu_slip_no",actu_slip_no);
						makeNodeValue("/root/oz_data/child1/odiParam/iv_incmg_pers",ss_emp_no);						


							//makeNodeValue("/root/oz_data/child1/odiParam/iv_cmpy_cd"     ,"332" );	
						makeNodeValue("/root/oz_data/child1/printsize","A4 (JIS)"); 		//페이지용지설정(기본 A4)
							
							//은행송금 확인서 
						makeNodeValue("/root/oz_data/child2/ozrName","hd/HD_COM_3000_P");								
						makeNodeValue("/root/oz_data/child2/odiParam/iv_cmpy_cd"     ,getProperty("ss_cmpycd") );
						makeNodeValue("/root/oz_data/child2/odiParam/iv_actu_slip_no",actu_slip_no);
						makeNodeValue("/root/oz_data/child2/printsize","B5 (JIS)"); 		//페이지용지설정(기본 A4)
							
							//은행송금 의뢰서
						makeNodeValue("/root/oz_data/child3/ozrName","hd/HD_COM_3001_P");
					    makeNodeValue("/root/oz_data/child3/odiParam/iv_cmpy_cd"     ,getProperty("ss_cmpycd") );
						makeNodeValue("/root/oz_data/child3/odiParam/iv_actu_slip_no",actu_slip_no);
						makeNodeValue("/root/oz_data/child3/printsize","B5 (JIS)"); 	
							
							
					 	// 레포트뷰어 호출.					
					 	openOzwin("/root/oz_data");
					]]>
				</script>
			</button>
			<button id="button2" class="btn02" style="left:300px; top:0px; width:52px; height:21px; ">
				<caption>생성</caption>
				<script type="javascript" ev:event="onclick">
					<![CDATA[
						datagrid1.fixedcellischeck(0, 1) = false;
						
						model1.removenode("/root/dataSet");
						model1.send("hd_info_7202");
						model1.copyNode("/root/resData/gridData", "/root/dataSet/CURLIST");
						model1.refresh();
						
						var msg  = ""; 

						for(var i=1 ;i< datagrid1.rows;i++){
						    datagrid1.isReadOnly(i, 1, i, 2) = false;

						    var budg_cd = model1.getValue("/root/resData/gridData/record["+i+"]/budg_cd");
							var chrg_posk_cd = model1.getValue("/root/resData/gridData/record["+i+"]/chrg_posk_cd");
							var medi_cd = model1.getValue("/root/resData/gridData/record["+i+"]/medi_cd");
							var pay_cycl = model1.getValue("/root/resData/gridData/record["+i+"]/pay_cycl");
							var draft_no = model1.getValue("/root/resData/gridData/record["+i+"]/draft_no");
							var draft_dept_cd = model1.getValue("/root/resData/gridData/record["+i+"]/draft_dept_cd");
                          	var pay_cycl = model1.getValue("/root/resData/gridData/record["+i+"]/pay_cycl"); 
						    var servcost = model1.getValue("/root/resData/gridData/record["+i+"]/servcost");
							var setl_bank = model1.getValue("/root/resData/gridData/record["+i+"]/setl_bank");
							var acct_no = model1.getValue("/root/resData/gridData/record["+i+"]/acct_no");
							var incm_clsf_cd = model1.getValue("/root/resData/gridData/record["+i+"]/incm_clsf_cd");

							var flnm = model1.getValue("/root/resData/gridData/record["+i+"]/flnm");
							var rmk  = "";
							
							if(budg_cd == null || budg_cd == "")
							{
								rmk =" 예산구분"
							}
							if(incm_clsf_cd == null || incm_clsf_cd == "")
							{
								rmk =" 소득구분"
							}
							if(chrg_posk_cd == null || chrg_posk_cd =="")
							{
								if(rmk == "")
								{
									rmk = " 직무구분"
								}
								else
								{
									rmk =rmk +", 직무구분"
								}
							}
							if(medi_cd == null ||medi_cd == "")
							{
								if(rmk == "")
								{
									rmk = " 매체구분"
								}
								else
								{
									rmk =rmk +", 매체구분"
								}
							}
//							if(draft_no == null ||draft_no == "" || draft_dept_cd == null ||draft_dept_cd == "")
//							{
//								if(rmk == "")
//								{
//									rmk = " 기안번호 또는 기안 부서"
//								}
//								else
//								{
//									rmk =rmk +", 기안번호 또는 기안 부서"
//								}
//							}
							if(setl_bank == null ||setl_bank == ""||acct_no == null ||acct_no == "")
							{
								if(rmk == "")
								{
									rmk = " 은행계좌번호"
								}
								else
								{
									rmk =rmk +", 은행계좌번호"
								}
							}
							if(pay_cycl == null ||pay_cycl == "")
							{
								if(rmk == "")
								{
									rmk = " 주기구분"
								}
								else
								{
									rmk =rmk +", 주기구분"
								}
							}

                            if(rmk != "")
							{
								//alert(rmk);
								msg = msg + flnm+"님의"+rmk+"가 없습니다. \n"   ;
								//return;
							}
								
							if(pay_cycl == "10" || pay_cycl == "20" )
							{
								datagrid1.isReadOnly(i,2, i, 10) =  true;
							}
							else 
							{
								datagrid1.isReadOnly(i, 1, i, 14) =  false;
							}
						}
						if(msg != "")
						{
							alert(msg);
						}
						
						datagrid1.clearStatus();	
						model1.refresh();	
						
				     	var totcnt = datagrid1.rows;
						model1.setValue("/root/resData/totcnt", "총 " + Number(totcnt - 1) + " 건");

						 fnWithTaxSetting();
							model1.refresh(); 
					]]>
				</script>
			</button>
			<button id="button7" class="btn02" style="left:461px; top:0px; width:52px; height:21px; ">
				<caption>마감</caption>
				<script type="javascript" ev:event="onclick">
					<![CDATA[
						var flag1 = false;
						for (var i=1;i<datagrid1.rows;i++) {
							var chk = datagrid1.valueMatrix(i, datagrid1.colRef("save"));
							var proc_stat = model1.getValue("/root/resData/gridData/record["+i+"]/proc_stat");
							
							if(chk == "1"){
								flag1 = true;
								//if(proc_stat >= 25 ){ 
								if(proc_stat >= Number(model.getValue("/root/initData/hd_info_7208_m/dataSet/xx_proc_clsf_050")) ){
									if(proc_stat != Number(model.getValue("/root/initData/hd_info_7208_m/dataSet/xx_proc_clsf_080")) ){
										alert("등록이 아닌 상태의 데이터가 있습니다.\n\n등록 상태의 데이터만 처리 하십시오. ");
										return;
									}
								}
							}
						}
					
						if(flag1 == false){
							alert("선택된 행이 없습니다.");
							return;
						}
						
						if (!rowInSubmit(datagrid1))
							return;
							
						if (window.alert("마감 하시겠습니까?", "확인", 1) != 1) {
							return;
						};
						
						model1.setValue("/root/reqData/searchData/clos_yn","Y");
						model1.setValue("/root/reqData/multiUpData", datagrid1.getUpdateData());
						
						model1.send("hd_info_7204");
						if(submit_completed()) {
							model1.reset();
							datagrid1.clearStatus();
							//datagrid1.isReadOnly(1, 1, 1, 11) = true;
							datagrid1.addStatus(1, "insert");
							gridSearchList();
						}
					]]>
				</script>
			</button>
			<button id="button10" class="btn03" style="left:515px; top:0px; width:65px; height:21px; ">
				<caption>마감취소</caption>
				<script type="javascript" ev:event="onclick">
					<![CDATA[
						var flag1 = false;
						for (var i=1;i<datagrid1.rows;i++) {
							var chk = datagrid1.valueMatrix(i, datagrid1.colRef("save"));
							var proc_stat = model1.getValue("/root/resData/gridData/record["+i+"]/proc_stat");
							
							if(chk == "1"){
								flag1 = true;
								//if(proc_stat != 27 ){ 
									//alert(proc_stat);
								if(proc_stat != Number(model.getValue("/root/initData/hd_info_7208_m/dataSet/xx_proc_clsf_050"))
								   && proc_stat != Number(model.getValue("/root/initData/hd_info_7208_m/dataSet/xx_proc_clsf_070")) ){
									alert("마감상태가 아닌 상태의 데이터가 있습니다.\n\n마감상태의 데이터만 처리 하십시오. ");
									return;
								}
							}
						}
					
						if(flag1 == false){
							alert("선택된 행이 없습니다.");
							return;
						}
						
						if (!rowInSubmit(datagrid1))
							return;
							
						if (window.alert("마감취소 하시겠습니까?", "확인", 1) != 1) {
							return;
						};
						
						model1.setValue("/root/reqData/searchData/clos_yn","N");
						model1.setValue("/root/reqData/multiUpData", datagrid1.getUpdateData());
						
						model1.send("hd_info_7204");
						if(submit_completed()) {
							model1.reset();
							datagrid1.clearStatus();
							//datagrid1.isReadOnly(1, 1, 1, 11) = true;
							datagrid1.addStatus(1, "insert");
							gridSearchList();
						}
					]]>
				</script>
			</button>
		</group>
		<group id="group1" style="left:10px; top:70px; width:926px; height:30px; ">
			<caption id="caption2" class="list_cap01" style="left:0px; top:0px; width:65px; height:26px; text-align:center; ">본부/실</caption>
			<caption id="caption10" class="list_cap02" style="left:63px; top:0px; width:862px; height:26px; text-align:center; "/>
			<input id="input13" ref="/root/reqData/searchData/dept_cd" inputtype="button" appearance="input" style="left:68px; top:4px; width:70px; height:18px; ">
				<script type="javascript" ev:event="onbuttonclick">
					<![CDATA[
						model1.setValue("/root/reqData/fwdData/func_nm", "setDept_cd");
						//window.load("/xrw/hd/com/hd_com_1100.xrw","mdichild", "hd_com_1100", "", "/root/reqData/fwdData", "/root/reqData/fwdData");
						window.load("/xrw/hd/com/HD_COM_1100.xrw","mdichild", "hd_com_1100", "align:center; caption:hidden;", "/root/reqData/fwdData", "/root/reqData/fwdData");
					]]>
				</script>
			</input>
			<caption id="caption5" class="list_cap01" style="left:576px; top:0px; width:65px; height:26px; text-align:center; ">상태</caption>
			<select1 id="combo1" ref="/root/reqData/searchData/proc_stat" navindex="2" appearance="minimal" style="left:646px; top:4px; width:100px; height:18px; ">
				<choices>
					<itemset nodeset="/root/initData/comboSet/proc_stat/item">
						<label ref="cd_abrv_nm"/>
						<value ref="cd"/>
					</itemset>
				</choices>
				<script type="javascript" ev:event="onkeydown">
					<![CDATA[
						if (event.keyCode == 46)
							combo1.deselect();
					]]>
				</script>
			</select1>
			<caption id="caption1" class="list_cap01" style="left:751px; top:0px; width:65px; height:26px; text-align:center; ">전표번호</caption>
			<input id="actu_slip_no_in" ref="/root/reqData/searchData/actu_slip_no" format="99999999-99-999" style="left:820px; top:4px; width:100px; height:18px; "/>
			<input id="input2" ref="/root/reqData/searchData/pay_mm" navindex="1" inputtype="date" format="yyyy-mm" style="left:312px; top:4px; width:75px; height:18px; text-align:center; "/>
			<caption id="caption6" class="list_cap01" style="left:244px; top:0px; width:65px; height:26px; text-align:center; ">지급월</caption>
			<caption id="caption7" class="list_cap01" style="left:392px; top:0px; width:65px; height:26px; text-align:center; ">성명</caption>
			<input id="input1" ref="/root/reqData/searchData/flnm" style="left:461px; top:4px; width:110px; height:18px; "/>
			<output id="output3" ref="/root/reqData/searchData/dept_nm" style="left:142px; top:4px; width:99px; height:18px; "/>
		</group>
		<group id="group2" style="left:10px; top:105px; width:926px; height:595px; ">
			<caption id="caption9" class="tit02" style="left:0px; top:0px; width:205px; height:20px; font-weight:bold; ">프리랜서 용역비 지급</caption>
			<datagrid id="datagrid1" nodeset="/root/resData/gridData/record" caption="^성명^직무^상세매체^계약일^일수^주기코드^주기^계약금액^횟수^기본급^기타수당^총액^소득구분코드^소득구분^지급액^소득세^주민세^예산명^퇴사일^기안번호^기안부서^비고^진행상태^관리번호^전표번호^caption1^caption2^caption3" colsep="#" colwidth="25, 60, 75, 140, 75, 40, 70, 40, 70, 38, 70, 70, 70, 100, 100, 10, 70, 70, 95, 75, 120, 80, 150, 80, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100" frozencols="5" mergecellsfixedrows="bycolrec" rowheader="update" rowsep="|" selectionmode="free" style="left:0px; top:21px; width:926px; height:570px; ">
				<col class="req" checkvalue="1,0" ref="save" type="checkbox">
					<script type="javascript" ev:event="xforms-select">
						<![CDATA[
							var row = datagrid1.row;
							var slip_proc_seq = model1.getValue("/root/resData/gridData/record["+row+"]/slip_proc_seq");
										
							for(var i=1 ;i<datagrid1.rows;i++){
								var slip_proc_seq1 = model1.getValue("/root/resData/gridData/record["+i+"]/slip_proc_seq");
								
								if(slip_proc_seq == slip_proc_seq1 && slip_proc_seq != ""){
									datagrid1.rowStatus(i) = 2;
									datagrid1.valueMatrix(i, datagrid1.colRef("save")) = 1;
								}
							}
							
							for(var i=1 ;i<datagrid2.rows;i++){
								var tmp_seq = model1.getValue("/root/resData/slipData/record["+i+"]/actu_slip_no");
								
								if(slip_proc_seq == tmp_seq){
									datagrid2.rowStatus(i) = 1;
								}
							}
							
							if (datagrid2.rows > 1){
								slip_submit_sum();	
								slip_remark();						
							}						
						]]>
					</script>
					<script type="javascript" ev:event="xforms-deselect">
						<![CDATA[
							var row = datagrid1.row;
							var slip_proc_seq = model1.getValue("/root/resData/gridData/record["+row+"]/slip_proc_seq");
							
							for(var i=1 ;i<datagrid1.rows;i++){
								var slip_proc_seq1 = model1.getValue("/root/resData/gridData/record["+i+"]/slip_proc_seq");
								
								if(slip_proc_seq == slip_proc_seq1 && slip_proc_seq != ""){
									datagrid1.rowStatus(i) = 0;
									datagrid1.valueMatrix(i, datagrid1.colRef("save")) = 0;
								}
							}
							
							for(var i=1 ;i<datagrid2.rows;i++){
								var tmp_seq = model1.getValue("/root/resData/slipData/record["+i+"]/actu_slip_no");
								
								if(slip_proc_seq == tmp_seq){
									datagrid2.rowStatus(i) = 0;
									datagrid1.rowStatus(row) = 0;
								}
							}
	
							if (datagrid2.rows > 1){
								slip_submit_sum();	
								slip_remark();						
							}						
						]]>
					</script>
				</col>
				<col class="req" ref="flnm" caption="성명"/>
				<col class="req" ref="chrg_posk_nm"/>
				<col class="req" ref="thrw_pgm_nm"/>
				<col class="req" ref="cntr_dt" format="yyyy-mm-dd"/>
				<col class="req" ref="duty_dds"/>
				<col class="req" ref="pay_cycl" visibility="hidden"/>
				<col class="req" ref="pay_cycl_nm"/>
				<col class="req" ref="servcost" format="#,###" style="text-align:right; "/>
				<col class="req" ref="duty_tms" type="input" format="#,###" style="left:855px; top:20px; width:150px; height:20px; text-align:right; "/>
				<col class="req" ref="base_amt" format="#,###" style="text-align:right; "/>
				<col class="req" ref="etc_amt" type="input" format="(-)#,###" style="text-align:right; "/>
				<col class="req" ref="tot_amt" format="#,###" style="text-align:right; "/>
				<col class="req" ref="incm_clsf_cd" visibility="hidden"/>
				<col class="req" ref="incm_clsf_nm"/>
				<col class="req" ref="pay_amt" visibility="hidden" format="#,###" style="text-align:right; "/>
				<col class="req" ref="incm_tax" format="#,###" style="text-align:right; "/>
				<col class="req" ref="res_tax" format="#,###" style="text-align:right; "/>
				<col class="req" ref="budg_nm" caption="예산"/>
				<col class="req" ref="lvcmpy_dt" format="yyyy-mm-dd"/>
				<col class="req" ref="draft_no" style="text-align:left; ">
					<script type="javascript" ev:event="onclick">
						<![CDATA[
						var draft_no = '';
						var draft_dept_cd = '';
						var row = datagrid1.row;
						var col = datagrid1.col;
						
						draft_no = datagrid1.valueMatrix(row, datagrid1.colRef("draft_no")) ;
						draft_dept_cd = datagrid1.valueMatrix(row, datagrid1.colRef("draft_dept_cd")) ;

						if (draft_no.Trim() != "") {
							
								htmlwindow.open(XFORMS_EP_WEB_ADDRESS + "/nanum/flow/ihtml/sanc/xfopendoc_chosun.jsp?dept_id=" + draft_dept_cd+ "&doc_num="+draft_no ,"draft_doc","height=768,width=1024,scrollbars=no,resizable=no");
						}
						else {
							model.alert("기안문서번호는 필수입력사항입니다.");				
							return;
						}
						]]>
					</script>
				</col>
				<col class="req" ref="draft_dept_cd" visibility="hidden" style="text-align:left; "/>
				<col ref="remk" type="input" style="text-align:left; "/>
				<col ref="proc_stat_nm"/>
				<col ref="slip_proc_seq" format="99999999-99999"/>
				<col ref="actu_slip_no" format="99999999-99-999">
					<script type="javascript" ev:event="onclick">
						<![CDATA[
						  
							actu_slip_no_in.value =   datagrid1.valueMatrix(datagrid1.row,datagrid1.col);
						]]>
					</script>
				</col>
				<col class="req" ref="cmpy_cd" visibility="hidden"/>
				<col class="req" ref="frlc_no" visibility="hidden"/>
				<col class="req" ref="occr_dt" visibility="hidden"/>
				<col class="req" ref="seq" visibility="hidden"/>
				<col class="req" ref="mang_no" visibility="hidden"/>
				<col class="req" ref="budg_cd" visibility="hidden"/>
				<col class="req" ref="dept_cd" visibility="hidden"/>
				<col class="req" ref="chrg_posk_cd" visibility="hidden"/>
				<col class="req" ref="medi_cd" visibility="hidden"/>
				<col class="req" ref="thrw_pgm" visibility="hidden"/>
				<col class="req" ref="pay_mm" visibility="hidden"/>
				<col class="req" ref="setl_bank" visibility="hidden"/>
				<col class="req" ref="acct_no" visibility="hidden"/>
				<col ref="proc_stat" visibility="hidden"/>
				<col ref="slip_proc_mang_dt" visibility="hidden"/>
				<col ref="slip_proc_mang_seq" visibility="hidden"/>
				<script type="javascript" ev:event="onclick">
					<![CDATA[
					
						if(datagrid1.isReadOnly(1,1) == 1 && datagrid1.valueMatrix(1,2) == "" ) {return;}
						var selectedIdx = datagrid1.row;
						var proc_stat = model1.getValue("/root/resData/gridData/record["+ selectedIdx +"]/proc_stat");
						//if(proc_stat == '29' || proc_stat == '36' || proc_stat == '33'){ //전표등록일경우		
	
						//if(proc_stat  >= 25){ 120209
						if(proc_stat  >=  Number(model.getValue("/root/initData/hd_info_7208_m/dataSet/xx_proc_clsf_050")) && proc_stat  !=  Number(model.getValue("/root/initData/hd_info_7208_m/dataSet/xx_proc_clsf_080")  ) ){
							return;
						}
						else{
							rowStatus(datagrid1);
						}
					]]>
				</script>
				<script type="javascript" ev:event="xforms-value-changed">
					<![CDATA[
					
						var row = datagrid1.row;
						var col = datagrid1.col;
						
						if(col == 1){
							if (datagrid1.valueMatrix(row, datagrid1.colRef("save")) == 0 ){
								datagrid1.rowstatus(row) = 0;	
							}
						}else if (col == 10){
							var pay_cycl = model1.getValue("/root/resData/gridData/record["+row+"]/pay_cycl");
							var servcost = model1.getValue("/root/resData/gridData/record["+row+"]/servcost");
							var etc_amt = model1.getValue("/root/resData/gridData/record["+row+"]/etc_amt");
							
							var duty_tms = datagrid1.valueMatrix(row, datagrid1.colRef("duty_tms"));
							
					        var tot_amt = 0; 
							var base_amt = 0
							
						    if( pay_cycl != 30)
							{
								duty_tms = "";
								alert("근무 주기가 회당일 경우만 입력 가능합니다.");
							//	model1.setValue("/root/resData/gridData/record["+row+"]/duty_tms", duty_tms);
								return;
							}
							
							base_amt = Number(servcost) * Number(duty_tms)  ;
							tot_amt = Number(servcost) * Number(duty_tms) + Number(etc_amt) ;
							
//							model1.setValue("/root/resData/gridData/record["+row+"]/base_amt", base_amt);
							datagrid1.valueMatrix(row, datagrid1.colRef("base_amt")) = base_amt;
							datagrid1.valueMatrix(row, datagrid1.colRef("tot_amt")) = tot_amt;
						     
							fnWithTaxSetting();
							
						}else if (col == 12){
							
							var base_amt = datagrid1.valueMatrix(row, datagrid1.colRef("base_amt")); //기본급
							var etc_amt = datagrid1.valueMatrix(row, datagrid1.colRef("etc_amt")); //기타수당
					        var tot_amt = 0; 
							
						//	pay_amt = servcost * duty_tms  ;
							tot_amt = Number(base_amt) + Number(etc_amt);
							
						//	model1.setValue("/root/resData/gridData/record["+row+"]/pay_amt", pay_amt);
							model1.setValue("/root/resData/gridData/record["+row+"]/tot_amt", tot_amt);
							fnWithTaxSetting();
						}
					]]>
				</script>
				<script type="javascript" ev:event="xforms-select">
					<![CDATA[
						if (event.target == "datagrid1") {
							var row = datagrid1.row;	
							var slip_cnt = datagrid2.rows;
							
							if(datagrid1.rows == 2 && datagrid1.valueMatrix(1,2) == "" )
								return;
								
							for (var i=1; i<datagrid1.rows; i++) {
								var proc_stat = model1.getValue("/root/resData/gridData/record["+ i +"]/proc_stat");
								var status = datagrid1.rowstatus(i);
								//if(status == 0  &&  (proc_stat != '29' || proc_stat == '36') && proc_stat != "" ){
								if (slip_cnt> 1){
									//if(status == 0  &&  (proc_stat != "29" || proc_stat == "36") ){ 120209
									if(status == 0  && ( proc_stat != model.getValue("/root/initData/hd_info_7208_m/dataSet/xx_proc_clsf_010") 
									                   && proc_stat  != model.getValue("/root/initData/hd_info_7208_m/dataSet/xx_proc_clsf_020") 
													   && proc_stat  != model.getValue("/root/initData/hd_info_7208_m/dataSet/xx_proc_clsf_030"))){
										datagrid1.addStatus(i, "update");	
									}
								}else{
									//if(status == 0  &&  (proc_stat != "29" || proc_stat == "36" ) && proc_stat == "" ){ 120209
									if(status == 0  &&  ( proc_stat != model.getValue("/root/initData/hd_info_7208_m/dataSet/xx_proc_clsf_010") 
									                   && proc_stat  != model.getValue("/root/initData/hd_info_7208_m/dataSet/xx_proc_clsf_020") 
													   && proc_stat  != model.getValue("/root/initData/hd_info_7208_m/dataSet/xx_proc_clsf_030") )
												    && proc_stat == "" ){
										datagrid1.addStatus(i, "update");
									}
								}
							}
							
							for (var i=1; i<datagrid1.rows; i++) {
								var status1 = datagrid1.rowstatus(i);
								
								if(status1 == 0){
									datagrid1.valueMatrix(i, datagrid1.colRef("save")) = 0;
								}
							}
		
							for(var i=1 ;i<datagrid2.rows;i++){
								datagrid2.rowStatus(i) = 1;
							}
							if(datagrid2.rows > 1 ){
								slip_submit_sum();
								slip_remark();
							}
							//model1.refresh();
						}
						
					]]>
				</script>
				<script type="javascript" ev:event="xforms-deselect">
					<![CDATA[
						if (event.target == "datagrid1") {
							var row = datagrid1.row;	
							
							for(var i=1;i<datagrid1.rows;i++)	{
								  datagrid1.rowstatus(i) = 0;
							}					
							for(var i=1 ;i<datagrid2.rows;i++){
								datagrid2.rowStatus(i) = 0;
							}
							if(datagrid2.rows > 1 ){
								slip_submit_sum();
								slip_remark();
							}
						}
					]]>
				</script>
			</datagrid>
			<button id="button5" class="btn_grid02" visibility="hidden" style="left:748px; top:0px; width:53px; height:17px; background-image:../../../images/btn_s_3.gif; ">
				<caption>행삭제</caption>
				<script type="javascript" ev:event="onclick">
					<![CDATA[
					if(datagrid1.isReadOnly(1,1) == 1 && datagrid1.valueMatrix(1,2) == "" ) {return;}
					var selectedIdx = datagrid1.row;
					var proc_stat = model1.getValue("/root/resData/gridData/record["+ selectedIdx +"]/proc_stat");
					//if(proc_stat == '29' || proc_stat == '36' || proc_stat == '33'){ //전표등록일경우		120209
					if(proc_stat == model.getValue("/root/initData/hd_info_7208_m/dataSet/xx_proc_clsf_010") 
					|| proc_stat == model.getValue("/root/initData/hd_info_7208_m/dataSet/xx_proc_clsf_030")
					|| proc_stat == model.getValue("/root/initData/hd_info_7208_m/dataSet/xx_proc_clsf_020")){ //전표등록일경우		
						return;
					}
					else{
						datagrid1.addStatus(selectedIdx, "delete");								
					}	
					]]>
				</script>
			</button>
			<button id="button6" class="btn_grid02" visibility="hidden" style="left:873px; top:0px; width:53px; height:17px; background-image:../../../images/btn_s_3.gif; ">
				<caption>행추가</caption>
				<script type="javascript" ev:event="onclick">
					<![CDATA[
					var emp_no = model1.getValue("/root/resData/gridData/record[1]/emp_no");
					var nodeList = root.selectNodes("/root/resData/gridData/record");
					var rowIdx = nodeList.length;
					
					if (datagrid1.rows == 2 && datagrid1.rowStatus(1) == 0 ) {
						if(emp_no == ""){
							datagrid1.addStatus(1, "insert");
							datagrid1.isReadOnly(1, 1, 1, 11) = false;
						}else{
							datagrid1.addRow(true, true);
						}
					}else{
						datagrid1.addRow(true, true);
					}
					]]>
				</script>
			</button>
			<button id="button11" class="btn_grid02" visibility="hidden" style="left:805px; top:0px; width:54px; height:17px; background-image:../../../images/btn_s_3.gif; ">
				<caption>행취소</caption>
				<script type="javascript" ev:event="onclick">
					<![CDATA[
					//cancelRow(datagrid2);
					var firstRow = datagrid1.selectedRow(0);
					var lastRow  = datagrid1.selectedRow(datagrid1.selectedRows-1);				
					
					for(var i=firstRow;i<=lastRow;i++){
						if(datagrid1.rowStatus(i) == "1" || datagrid1.rowStatus(i) == "3"){
							datagrid1.removeRow(i);
							i--;
						}else if(datagrid1.rowStatus(i) == "4"){
							datagrid1.rowStatus(i) = "0";
						}else{
							datagrid1.rowStatus(i) = "0";
						}
					}
					]]>
				</script>
			</button>
		</group>
		<datagrid id="datagrid2" nodeset="/root/resData/slipData/record" visibility="hidden" caption="회사코드^관리^부서^이름^대변금액(개인별합계)^(총합계)^적요1^전표관리번호^전표일련번호^전표발생일자^전표구분코드^입력자^입력자IP^진행상태^부서명" colsep="#" colwidth="63, 79, 100, 100, 138, 114, 191, 100, 100, 100, 100, 100, 100, 100, 100" extendlastcol="scroll" mergecellsfixedrows="bycolrec" rowheader="update" rowsep="|" style="left:25px; top:485px; width:900px; height:195px; ">
			<col ref="cmpy_cd"/>
			<col ref="mang_no"/>
			<col ref="dept_cd"/>
			<col ref="flnm"/>
			<col ref="tot_amt"/>
			<col ref="tmp_crdt_amt"/>
			<col ref="titl"/>
			<col ref="actu_slip_no"/>
			<col ref="slip_seq"/>
			<col ref="slip_occr_dt"/>
			<col ref="slip_clsf_cd"/>
			<col ref="incmg_pers"/>
			<col ref="incmg_pers_ipadd"/>
			<col ref="proc_stat"/>
			<col ref="dept_nm"/>
		</datagrid>
		<caption id="caption3" ref="/root/resData/totcnt" style="left:849px; top:700px; width:87px; height:20px; font-weight:bold; text-align:right; "/>
	</xhtml:body>
</xhtml:html>

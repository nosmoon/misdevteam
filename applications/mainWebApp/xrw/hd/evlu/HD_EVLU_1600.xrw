<?xml version="1.0" encoding="EUC-KR"?>
<?xml-stylesheet href="../../../css/style_sheet.css" type="text/css" ?>
<xhtml:html xmlns:ex="http://www.comsquare.co.kr/xforms/excel" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:my="http://www.comsquare.co.kr/example" xmlns:ms="urn:schemas-microsoft-com:xslt" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/2002/01/xforms" xmlns:ev="http://www.w3.org/2001/xml-events" xmlns:cs="http://www.comsquare.co.kr/xforms">
	<xhtml:head>
		<xhtml:title>정규직(MIS) - 그룹별 사원매핑 관리화면</xhtml:title>
		<model id="model1">
			<instance id="instance1">
				<root xmlns="">
					<initData>
						<session/>
						<comboSet>
							<evlu_cd>
								<item>
								</item>
							</evlu_cd>
							<evlu_lcls_grp_cd>
								<item>
								</item>
							</evlu_lcls_grp_cd>
							<evlu_grp_cd>
								<item>
								</item>
							</evlu_grp_cd>
						</comboSet>
						<pageInfo>
						</pageInfo>
					</initData>
					<reqData>
						<searchData>
							<evlu_cd/>
							<evlu_lcls_grp_cd/>
							<evlu_grp_cd/>
						</searchData>
						<reqForm>
							<evlu_yy/>
							<tms_clsf/>
							<evlu_lcls_grp_cd/>
							<evlu_grp_cd/>
							<dept_nos/>
							<tmp_chk1/>
						</reqForm>
						<multiUpDate/>
						<fwdData/>
					</reqData>
					<resData>
						<msg/>
						<resForm>
							<valid_evlu_cd/>
							<notice_rate/>
						</resForm>
						<gridData1>
							<record>
								<sel_chk/>
								<dept_cd/>
								<dept_nm/>
							</record>
						</gridData1>
						<gridData2>
							<record>
								<sel_chk/>
								<dept_nm/>
								<nm_korn/>
								<dty_nm/>
								<posi_nm/>
								<dept_cd/>
								<emp_no/>
							</record>
						</gridData2>
						<gridData3>
							<record>
								<sel_chk/>
								<dept_nm/>
								<nm_korn/>
								<dty_nm/>
								<posi_nm/>
								<dept_cd/>
								<emp_no/>
							</record>
						</gridData3>
						<gridData4>
							<record>
								<sel_chk/>
								<dept_cd/>
								<dept_nm/>
							</record>
						</gridData4>
						<gridData5>
							<record>
								<sel_chk/>
								<dept_nm/>
								<nm_korn/>
								<dty_nm/>
								<posi_nm/>
								<dept_cd/>
								<emp_no/>
							</record>
						</gridData5>
					</resData>
					<tempData>
						<!-- 현재작업중인 부서코드 버퍼링용 -->
					</tempData>
				</root>
			</instance>
			<script type="javascript" ev:event="xforms-ready">
				<![CDATA[
					//평가구분 콤보박스 생성
					model1.send("hd_evlu_9000_l");
					model1.setValue("/root/resData/resForm/valid_evlu_cd",model1.getValue("/root/dataSet/valid_evlu_cd"));
					model1.copyNode("/root/initData/comboSet/evlu_cd", "/root/dataSet/CURLIST");
					model1.removeNode("/root/dataSet");
					//평가구분 코드 설정
					var op_evlu_cd = window.opener.model1.getValue("/root/resData/resForm/evlu_cd");
					model1.setValue("/root/reqData/searchData/evlu_cd",op_evlu_cd);
					combo1.refresh();
					combo1.disabled = true;
					//현재 선택한 평가구분에 대한 정보설정
					model1.setValue("/root/reqData/reqForm/evlu_yy",model1.getValue("/root/reqData/searchData/evlu_cd").substring(0,4));
					model1.setValue("/root/reqData/reqForm/tms_clsf",model1.getValue("/root/reqData/searchData/evlu_cd").substring(4,6));
					//평가대분류 콤보박스 생성
					model1.send("hd_evlu_1600_m");
					model1.setValue("/root/resData/resForm/notice_rate",model1.getValue("/root/dataSet/notice_rate"));
					model1.copyNode("/root/initData/comboSet/evlu_lcls_grp_cd", "/root/dataSet/CURLIST");
					model1.removeNode("/root/dataSet");
					model1.refresh();
					combo2.select(0);
					combo2.refresh();
					//그리드상단 체크박스 생성
					//datagrid1.fixedcellcheckbox(0, 1) = true;
					datagrid2.fixedcellcheckbox(0, 1) = true;
					datagrid3.fixedcellcheckbox(0, 1) = true;
					//그리드 첫행 제거
					clearAllNode();
				]]>
			</script>
			<submission id="hd_evlu_1600_m" action="/servlet/hd/evlu/1600" mediatype="application/x-www-form-urlencoded" method="post" ref="/root/reqData" resultref="/root/tempData"/>
			<submission id="hd_evlu_1601_l" action="/servlet/hd/evlu/1601" mediatype="application/x-www-form-urlencoded" method="post" ref="/root/reqData" resultref="/root/tempData"/>
			<submission id="hd_evlu_1602_l" action="/servlet/hd/evlu/1602" mediatype="application/x-www-form-urlencoded" method="post" ref="/root/reqData" resultref="/root/tempData"/>
			<submission id="hd_evlu_1603_l" action="/servlet/hd/evlu/1603" mediatype="application/x-www-form-urlencoded" method="post" ref="/root/reqData" resultref="/root/tempData"/>
			<submission id="hd_evlu_1604_l" action="/servlet/hd/evlu/1604" mediatype="application/x-www-form-urlencoded" method="post" ref="/root/reqData" resultref="/root/tempData"/>
			<submission id="hd_evlu_1605_a" action="/servlet/hd/evlu/1605" mediatype="application/x-www-form-urlencoded" method="post" ref="/root/reqData" resultref="/root/tempData"/>
			<submission id="hd_evlu_9000_l" action="/servlet/hd/evlu/9000" mediatype="application/x-www-form-urlencoded" method="post" resultref="/root/tempData"/>
		</model>
		<script type="javascript" src="/js/CIISComm.js"/>
		<script type="javascript" src="/js/TFCommon.js"/>
		<script type="javascript">
			<![CDATA[
				//모든 datagrid 노드를 초기화
				function clearAllNode(){
					model1.removeNode("/root/dataSet");
					model1.removeNode("/root/resData/gridData1");
					model1.makeNode("/root/resData/gridData1");
					model1.removeNode("/root/resData/gridData2");
					model1.makeNode("/root/resData/gridData2");
					model1.removeNode("/root/resData/gridData3");
					model1.makeNode("/root/resData/gridData3");
					model1.removeNode("/root/resData/gridData4");
					model1.makeNode("/root/resData/gridData4");
					model1.removeNode("/root/resData/gridData5");
					model1.makeNode("/root/resData/gridData5");
					model1.refresh();
					caption8.value = "총 0 건";
					caption9.value = "총 0 명";
					caption10.value = "총 0 명";
				}
				//평가그룹별 부서목록 생성
				function searchList1(){
					//기존의 노드를 모두 초기화
					model1.removeNode("/root/dataSet");
					model1.removeNode("/root/resData/gridData1");
					model1.makeNode("/root/resData/gridData1");
					model1.refresh();
					//데이터 생성
					model1.send("hd_evlu_1602_l");	

					model1.copyNode("/root/resData/gridData1","/root/dataSet/CURLIST");
					model1.removeNode("/root/dataSet");
					model1.refresh();
					//선택된 부서코드는 체크박스 해제할 수 없도록 disable 한다.
					for(var i=datagrid1.fixedRows; i<=datagrid1.rows; i++){
						if(datagrid1.valueMatrix(i,datagrid1.colRef("sel_chk"))=='true') datagrid1.isReadOnly(i,datagrid1.colRef("sel_chk")) = true;
					}
					caption8.value = "총 " + (datagrid1.rows-datagrid1.fixedRows) + " 건";
				}
				//아직 맵핑되지 않은 부서원 목록 생성 (append 형태)
				function searchList2(flag){
					//datagrid5의 노드를 모두 초기화
					model1.removeNode("/root/dataSet");
					model1.removeNode("/root/resData/gridData5");
					model1.makeNode("/root/resData/gridData5");

					model1.refresh();
					//데이터 생성
					model1.send("hd_evlu_1603_l");	
					model1.copyNode("/root/resData/gridData5","/root/dataSet/CURLIST");
					model1.removeNode("/root/dataSet");
					model1.refresh();
					if(flag == "w"){
						model1.removeNodeset("/root/resData/gridData2");
						model1.makeNode("/root/resData/gridData2");
						//model1.copyNode("/root/resData/gridData2","/root/resData/gridData5");
					}else{
						//datagrid5에서 datagrid2,datagrid3로 중복값을 제거하고 append
						var chk_flag = true;
						var destNode = instance1.selectSingleNode("/root/resData/gridData2");
						for(var i=datagrid5.fixedRows; i<=datagrid5.rows; i++){
							chk_flag = true;
							for(var j=datagrid2.fixedRows; j<=datagrid2.rows; j++){
								if(datagrid5.valueMatrix(i,datagrid5.colRef("emp_no"))==datagrid2.valueMatrix(j,datagrid2.colRef("emp_no")))
									chk_flag = false;
							}
							for(var j=datagrid3.fixedRows; j<=datagrid3.rows; j++){
								if(datagrid5.valueMatrix(i,datagrid5.colRef("emp_no"))==datagrid3.valueMatrix(j,datagrid3.colRef("emp_no")))
									chk_flag = false;
							}
							if(chk_flag){
								var curNode = datagrid5.getNode(i);
								var newNode = curNode.cloneNode(true);
								destNode.appendChild(newNode);
							}
						}
					}
					datagrid2.rebuild();
					caption9.value = "총 " + (datagrid2.rows-datagrid2.fixedRows) + " 명";
				}
				//맵핑된 부서원 목록 생성
				function searchList3(){
					//기존의 노드를 모두 초기화
					model1.removeNode("/root/dataSet");
					model1.removeNode("/root/resData/gridData3");
					model1.makeNode("/root/resData/gridData3");
					model1.refresh();
					//데이터 생성

					model1.send("hd_evlu_1604_l");	
				
					model1.setValue("/root/resData/resForm/notice_rate",model1.getValue("/root/dataSet/notice_rate"));
					model1.copyNode("/root/resData/gridData3","/root/dataSet/CURLIST");
					model1.removeNode("/root/dataSet");
					model1.refresh();
					
					//datagrid3 상태값을 모두 초기화 후 "insert" 형태로 변경
					for(var i=datagrid3.fixedRows; i<=datagrid3.rows; i++){
						datagrid3.rowStatus(i) = 1;
					}
					caption10.value = "총 " + (datagrid3.rows-datagrid3.fixedRows) + " 명";
				}
				/*
				//부서 버퍼링 (append 형태)
				function addBuffDeptList(){
					var chk_flag = true;
					var buffDeptNode = instance1.selectSingleNode("/root/resData/gridData4");
					for(var i=datagrid1.fixedRows; i<=datagrid1.rows; i++){
						if(datagrid1.valueMatrix(i,datagrid1.colRef("sel_chk")) == "true"){
							chk_flag = true;
							for(var j=datagrid4.fixedRows; j<=datagrid4.rows; j++){
								if(datagrid1.valueMatrix(i,datagrid1.colRef("dept_cd"))==datagrid4.valueMatrix(j,datagrid4.colRef("dept_cd")))
									chk_flag = false;
							}
							if(chk_flag){
								var curNode = datagrid1.getNode(i);
								var newNode = curNode.cloneNode(true);
								buffDeptNode.appendChild(newNode);
							}
							//선택된 부서코드는 체크박스 해제할 수 없도록 disable 한다.
							datagrid1.isReadOnly(i,datagrid1.colRef("sel_chk")) = true;
						}
					}
					datagrid4.rebuild();
				}
				*/
				//신규추가된 부서번호 배열값 생성, 이값은 아직 맵핑되지않은 사원들의 정보를 검색할 때 사용된다.
				function makeNewDeptnos(){
					var dept_no_ary = new Array();
					var chk_flag = true;	var k = 0;
					//조회하기전에 sel_chk값이 readonly인 경우는 rowStatus값을 0으로 변경해
					//조회조건에서 빼준다.
					//이렇게 하는 이유는 부서코드가 300개 정도되면 오류가 나기때문에 줄여주기 위함이고,
					//기존에 readonly값은 이미 datagrid2또는 datagrid3에 표시가 되어있기 때문이다.
					for(var i=datagrid1.fixedRows; i<=datagrid1.rows; i++){
						if(datagrid1.isReadOnly(i,datagrid1.colRef("sel_chk")) == false &&
							datagrid1.valueMatrix(i,datagrid1.colRef("sel_chk"))=="true"){
							chk_flag = true;
							for(var j=datagrid4.fixedRows; j<=datagrid4.rows; j++){
								if(datagrid1.valueMatrix(i,datagrid1.colRef("dept_cd"))==datagrid4.valueMatrix(j,datagrid1.colRef("dept_cd"))) chk_flag = false;
							}
							if(chk_flag){
								dept_no_ary[k++] = datagrid1.valueMatrix(i,datagrid1.colRef("dept_cd"));
							}
						}
					}
					//200개가 넘어가면 false 리턴
					if(k > 200){
						return false;
					}
					var str_dept_nos = '';
					for(var i=0; i<dept_no_ary.length; i++){
						str_dept_nos += dept_no_ary[i];
						if(i<dept_no_ary.length-1) str_dept_nos += "#";
					}
					model1.setValue("/root/reqData/reqForm/dept_nos",str_dept_nos);
					return true;
				}
				
				//readOnly를 제외한 모두선택
				function selectAll(obj){
					var datagridObj = eval(obj);
					for(var i=datagridObj.fixedRows; i<datagridObj.rows; i++){
						if(datagridObj.isReadOnly(i,datagridObj.colRef("sel_chk"))==true) continue;
						else datagridObj.valueMatrix(i,datagridObj.colRef("sel_chk")) = "true";
					}
				}
				//readyOnly를 제외한 모두해제
				function deSelectAll(obj){
					var datagridObj = eval(obj);
					for(var i=datagridObj.fixedRows; i<datagridObj.rows; i++){
						if(datagridObj.isReadOnly(i,datagridObj.colRef("sel_chk"))==true) continue;
						else datagridObj.valueMatrix(i,datagridObj.colRef("sel_chk")) = "false";
					}
				}
			]]>
		</script>
	</xhtml:head>
	<xhtml:body pagewidth="950" pageheight="765" guideline="1,10;2,30;2,39;2,64;2,72;2,77;2,82;2,746;1,226;1,272;1,584;1,636;2,90;2,109;1,935;2,444;2,450;2,137;2,273;" style="font-family:굴림; ">
		<!-- 표준 항목. 타이틀, 기본버튼, 표시라인 -->
		<!--import id="iv_Title" src="../../../common/xrw/iv_TitleBar.xrw" style="left:10px; top:5px; width:926px; height:29px; "/-->
		<group id="group_ActionBtn" style="left:10px; top:9px; width:926px; height:21px; ">
			<button id="button1" class="btn02" style="left:873px; top:0px; width:52px; height:21px; ">
				<caption>종료</caption>
				<script type="javascript" ev:event="DOMActivate">
					<![CDATA[
						window.close();		
					]]>
				</script>
			</button>
			<button id="button2" class="btn02" style="left:763px; top:0px; width:52px; height:21px; ">
				<caption>조회</caption>
				<script type="javascript" ev:event="DOMActivate">
					<![CDATA[
						//전체선택 모두제거
						checkbox1.deselect(0);
						datagrid2.fixedcellischeck(0, 1) = false;
						datagrid3.fixedcellischeck(0, 1) = false;
						//부서목록 생성
						searchList1();
						//아직 맵핑되지 않은 부서원 목록 생성
						searchList2("w");

						//맵핑된 부서원 목록 생성
						searchList3();
					]]>
				</script>
			</button>
			<button id="button6" class="btn02" style="left:818px; top:0px; width:52px; height:21px; ">
				<caption>저장</caption>
				<script type="javascript" ev:event="DOMActivate">
					<![CDATA[
						if(!commGridReqCheck("datagrid3")) return;
						if(window.alert("저장 하시겠습니까?", "확인", 1)!=1) return;
						//alert(datagrid3.getUpdateData());
						model1.setValue("/root/reqData/multiUpDate", datagrid3.getUpdateData());
						model1.send("hd_evlu_1605_a");
						//alert("dddd");
						model1.removeNode("/root/dataSet");
						model1.refresh();
						if(submit_completed()) searchList3();
					]]>
				</script>
			</button>
			<caption id="caption7" ref="/root/resData/resForm/notice_rate" style="left:4px; top:0px; width:480px; height:21px; font-weight:bold; "/>
		</group>
		<group id="group_line" class="gro_line" style="left:10px; top:72px; width:926px; height:5px; "/>
		<!-- 검색조건 항목 -->
		<caption id="captoin1" class="list_cap02" style="left:10px; top:39px; width:926px; height:26px; "/>
		<caption id="caption2" class="list_cap01" style="left:10px; top:39px; width:100px; height:26px; ">평가구분</caption>
		<select1 id="combo1" ref="/root/reqData/searchData/evlu_cd" appearance="minimal" style="left:113px; top:43px; width:100px; height:18px; ">
			<choices>
				<itemset nodeset="/root/initData/comboSet/evlu_cd/item">
					<label ref="evlu_cdnm"/>
					<value ref="evlu_cd"/>
				</itemset>
			</choices>
		</select1>
		<caption id="caption1" class="list_cap01" style="left:225px; top:39px; width:100px; height:26px; ">평가대분류그룹</caption>
		<select1 id="combo2" ref="/root/reqData/searchData/evlu_lcls_grp_cd" appearance="minimal" style="left:328px; top:43px; width:150px; height:18px; ">
			<choices>
				<itemset nodeset="/root/initData/comboSet/evlu_lcls_grp_cd/item">
					<label ref="cdnm"/>
					<value ref="cd"/>
				</itemset>
			</choices>
			<script type="javascript" ev:event="xforms-select">
				<![CDATA[
					model1.send("hd_evlu_1601_l");
	
					model1.copyNode("/root/initData/comboSet/evlu_grp_cd", "/root/dataSet/CURLIST");
					model1.removeNode("/root/dataSet");
					model1.refresh();
					combo3.select(0);
					combo3.refresh();
				]]>
			</script>
		</select1>
		<caption id="caption4" class="list_cap01" style="left:490px; top:39px; width:120px; height:26px; ">대상평가그룹</caption>
		<select1 id="combo3" ref="/root/reqData/searchData/evlu_grp_cd" appearance="minimal" style="left:613px; top:43px; width:150px; height:18px; ">
			<choices>
				<itemset nodeset="/root/initData/comboSet/evlu_grp_cd/item">
					<label ref="cdnm"/>
					<value ref="cd"/>
				</itemset>
			</choices>
			<script type="javascript" ev:event="xforms-select">
				<![CDATA[
					model1.setValue("/root/reqData/reqForm/evlu_grp_cd",model1.getValue("/root/reqData/searchData/evlu_grp_cd"));
					searchList3();
				]]>
			</script>
		</select1>
		<!-- 평가년도별 차수등록 -->
		<caption id="caption3" class="tit02" style="left:10px; top:90px; width:229px; height:20px; ">전체부서</caption>
		<datagrid id="datagrid1" nodeset="/root/resData/gridData1/record" scroll="auto" caption="^부서코드^부명" colsep="^" colwidth="25, 55, 110" mergecellsfixedrows="bycolrec" rowheader="seq" rowsep="|" style="left:10px; top:109px; width:216px; height:336px; ">
			<col ref="sel_chk" type="checkbox"/>
			<col ref="dept_cd"/>
			<col ref="dept_nm" style="text-align:left; "/>
		</datagrid>
		<button id="button4" style="left:234px; top:267px; width:30px; height:25px; text-align:center; background-color:#c0c0c0; border-style:solid; ">
			<caption>▶</caption>
			<script type="javascript" ev:event="DOMActivate">
				<![CDATA[
					//신규추가된 부서번호 배열값 생성, 이값은 아직 맵핑되지않은 사원들의 정보를 검색할 때 사용된다.
					if(!makeNewDeptnos()){
						alert("검색부서 코드의 개수를 200개 이하로 선택해 주세요.");
						return;
					}
					//버퍼링 부서번호 추가
					//addBuffDeptList();
					//선택된 부서코드는 체크박스 해제할 수 없도록 disable 한다.
					for(var i=datagrid1.fixedRows; i<=datagrid1.rows; i++){
						if(datagrid1.valueMatrix(i,datagrid1.colRef("sel_chk"))=='true') datagrid1.isReadOnly(i,datagrid1.colRef("sel_chk")) = true;
					}
					//아직 맵핑되지 않은 사원 목록 생성 (append 형태)
					searchList2("a");
				]]>
			</script>
		</button>
		<button id="button5" style="left:592px; top:247px; width:30px; height:25px; text-align:center; background-color:#c0c0c0; border-style:solid; ">
			<caption>▶</caption>
			<script type="javascript" ev:event="DOMActivate">
				<![CDATA[
					//datagrid3 노드추가
					var node3 = instance1.selectSingleNode("/root/resData/gridData3");
					for(var i=datagrid2.fixedRows; i<=datagrid2.rows; i++){
						if(datagrid2.valueMatrix(i,datagrid2.colRef("sel_chk")) == "true"){
							var curNode = datagrid2.getNode(i);
							var newNode = curNode.cloneNode(true);
							node3.appendChild(newNode);
						}
					}
					datagrid3.rebuild();
					//datagrid2 노드 삭제
					var node2 = instance1.selectSingleNode("/root/resData/gridData2");
					var nodeList2 = instance1.selectNodes(datagrid2.nodeset);
					for(var i=0; i<nodeList2.length; i++){
						var childNode = nodeList2.item(i);
						var childNodeList = childNode.getElementsByTagName("sel_chk");
						var selChkNode = childNodeList.item(0);
						if(selChkNode.value == 'true'){
							node2.removeChild(childNode);
						}
					}
					datagrid2.rebuild();
					//datagrid2 전체선택 해제
					datagrid2.fixedcellischeck(0,1) = false;
					//datagrid3 상태값을 모두 초기화 후 "insert" 형태로 변경
					for(var i=datagrid3.fixedRows; i<=datagrid3.rows; i++){
						datagrid3.valueMatrix(i,datagrid3.colRef("sel_chk")) = "false";
						datagrid3.rowStatus(i) = 1;
					}
					caption9.value = "총 " + (datagrid2.rows-datagrid2.fixedRows) + " 명";
					caption10.value = "총 " + (datagrid3.rows-datagrid3.fixedRows) + " 명";
				]]>
			</script>
		</button>
		<caption id="caption5" class="tit02" style="left:287px; top:90px; width:299px; height:20px; ">선택부서원</caption>
		<datagrid id="datagrid2" nodeset="/root/resData/gridData2/record" caption="^부서^사원^직책^직급^부서코드^사원번호" colsep="^" colwidth="25, 100, 60, 50, 50, 5, 5" mergecellsfixedrows="bycolrec" rowheader="seq" rowsep="|" style="left:271px; top:109px; width:315px; height:336px; ">
			<col ref="sel_chk" type="checkbox"/>
			<col ref="dept_nm" style="text-align:left; "/>
			<col ref="nm_korn"/>
			<col ref="dty_nm" style="text-align:left; "/>
			<col ref="posi_nm" style="left:320px; top:20px; width:50px; height:20px; text-align:left; "/>
			<col ref="dept_cd" visibility="hidden"/>
			<col ref="emp_no" visibility="hidden"/>
		</datagrid>
		<button id="button7" style="left:592px; top:282px; width:30px; height:25px; text-align:center; background-color:#c0c0c0; border-style:solid; ">
			<caption>◀</caption>
			<script type="javascript" ev:event="DOMActivate">
				<![CDATA[
					//datagrid2 노드추가
					var node2 = instance1.selectSingleNode("/root/resData/gridData2");
					for(var i=datagrid3.fixedRows; i<=datagrid3.rows; i++){
						if(datagrid3.valueMatrix(i,datagrid3.colRef("sel_chk")) == "true"){
							var curNode = datagrid3.getNode(i);
							var newNode = curNode.cloneNode(true);
							node2.appendChild(newNode);
						}
					}
					datagrid2.rebuild();
					//datagrid3 노드 삭제
					var node3 = instance1.selectSingleNode("/root/resData/gridData3");
					var nodeList3 = instance1.selectNodes(datagrid3.nodeset);
					for(var i=0; i<nodeList3.length; i++){
						var childNode = nodeList3.item(i);
						var childNodeList = childNode.getElementsByTagName("sel_chk");
						var selChkNode = childNodeList.item(0);
						if(selChkNode.value == 'true'){
							node3.removeChild(childNode);
						}
					}
					datagrid3.rebuild();
					//datagrid3 전체선택 해제
					datagrid3.fixedcellischeck(0,1) = false;
					//datagrid3 상태값을 모두 초기화 후 "insert" 형태로 변경
					for(var i=datagrid3.fixedRows; i<=datagrid3.rows; i++){
						datagrid3.rowStatus(i) = 1;
					}
					//datagrid2 check 값 변경
					for(var i=datagrid2.fixedRows; i<=datagrid2.rows; i++){
						datagrid2.valueMatrix(i,datagrid2.colRef("sel_chk")) = "false";
					}
					caption9.value = "총 " + (datagrid2.rows-datagrid2.fixedRows) + " 명";
					caption10.value = "총 " + (datagrid3.rows-datagrid3.fixedRows) + " 명";
				]]>
			</script>
		</button>
		<caption id="caption6" class="tit02" style="left:637px; top:90px; width:277px; height:20px; ">대상사원선택</caption>
		<datagrid id="datagrid3" nodeset="/root/resData/gridData3/record" caption="^부서^사원^직책^직급^부서코드^사원번호" colsep="#" colwidth="25, 100, 60, 50, 50, 5, 5" mergecellsfixedrows="bycolrec" rowheader="update" rowsep="|" style="left:628px; top:109px; width:310px; height:336px; ">
			<col ref="sel_chk" type="checkbox"/>
			<col ref="dept_nm" style="text-align:left; "/>
			<col ref="nm_korn"/>
			<col ref="dty_nm" style="text-align:left; "/>
			<col ref="posi_nm" style="text-align:left; "/>
			<col ref="dept_cd" visibility="hidden"/>
			<col ref="emp_no" visibility="hidden"/>
		</datagrid>
		<datagrid id="datagrid4" nodeset="/root/resData/gridData4/record" visibility="hidden" caption="선택^부서코드^부명" colsep="^" colwidth="24, 55, 110" mergecellsfixedrows="bycolrec" rowheader="seq" rowsep="|" style="left:11px; top:149px; width:220px; height:22px; ">
			<col ref="sel_chk" type="checkbox"/>
			<col ref="dept_cd"/>
			<col ref="dept_nm"/>
		</datagrid>
		<datagrid id="datagrid5" nodeset="/root/resData/gridData5/record" visibility="hidden" caption="선택^부서^사원^직책^직급^부서코드^사원번호" colsep="^" colwidth="25, 100, 60, 50, 50, 5, 5" mergecellsfixedrows="bycolrec" rowheader="seq" rowsep="|" style="left:271px; top:149px; width:315px; height:21px; ">
			<col ref="sel_chk" type="checkbox"/>
			<col ref="dept_nm"/>
			<col ref="nm_korn"/>
			<col ref="dty_nm"/>
			<col ref="posi_nm" style="left:320px; top:20px; width:50px; height:20px; "/>
			<col ref="dept_cd" visibility="hidden"/>
			<col ref="emp_no" visibility="hidden"/>
		</datagrid>
		<caption id="caption8" style="left:139px; top:450px; width:100px; height:20px; text-align:right; "/>
		<caption id="caption9" style="left:486px; top:450px; width:100px; height:20px; text-align:right; "/>
		<caption id="caption10" style="left:835px; top:450px; width:100px; height:20px; text-align:right; "/>
		<select id="checkbox1" ref="/root/reqData/reqForm/tmp_chk1" overflow="visible" appearance="full" style="left:35px; top:112px; width:15px; height:16px; background-color:#e1e1e1; border-style:none; ">
			<choices>
				<item>
					<label/>
					<value>1</value>
				</item>
			</choices>
			<script type="javascript" ev:event="xforms-select">
				<![CDATA[
					selectAll("datagrid1");
				]]>
			</script>
			<script type="javascript" ev:event="xforms-deselect">
				<![CDATA[
					deSelectAll("datagrid1");
				]]>
			</script>
		</select>
	</xhtml:body>
</xhtml:html>

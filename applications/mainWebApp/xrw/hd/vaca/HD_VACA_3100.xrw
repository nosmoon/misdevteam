<?xml version="1.0" encoding="EUC-KR"?>
<?xml-stylesheet type="text/css" href="../../../css/style_sheet.css" ?>
<xhtml:html xmlns:ex="http://www.comsquare.co.kr/xforms/excel" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:my="http://www.comsquare.co.kr/example" xmlns:ms="urn:schemas-microsoft-com:xslt" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/2002/01/xforms" xmlns:ev="http://www.w3.org/2001/xml-events" xmlns:cs="http://www.comsquare.co.kr/xforms">
	<xhtml:head>
		<xhtml:title>휴일예고등록(현업)</xhtml:title>
		<model id="model1">
			<instance id="instance1">
				<root xmlns="">
					<initData>
						<hd_duty_1207_m>
							<dataSet>
								<xx_pr_job_clsf_20/>
								<!-- 최호정 작업 -->
								<xx_annc_clsf/>
								<xx_proc_stat_010/>
								<xx_dept_cd/>
								<xx_proc_stat_020/>
								<xx_proc_stat_030/>
								<xx_proc_stat_040/>
								<xx_finish_dd_clsf_010/>
								<xx_finish_dd_clsf_020/>
							</dataSet>
						</hd_duty_1207_m>
						<!-- 화면 로딩시의 초기 데이터를 담당 -->
						<session/>
						<!-- 서버의 세션 정보를 담당한다 -->
						<comboSet>
							<!-- 선택계열의 정보를 담당 -->
							<proc_stat>
								<item/>
							</proc_stat>
							<plan_dt>
								<item/>
							</plan_dt>
							<dept_cd>
								<item/>
							</dept_cd>
						</comboSet>
						<!-- 콤보리스트와 같은 선택게열의 데이터는 <item>을 반복함으로써 list를 구성한다. -->
						<pageInfo>
							<!-- 해당 화면의 필요한 기타 정보들을 추가운영 할 수 있다 -->
						</pageInfo>
						<!-- 해당 화면의 필요한 기타 정보들을 추가운영 할 수 있다 -->
						<hd_vaca_3120_l>
							<dataSet>
								<xx_caption_01/>
							</dataSet>
						</hd_vaca_3120_l>
						<hd_vaca_3150_l>
							<dataSet>
								<xx_result_oz/>
							</dataSet>
						</hd_vaca_3150_l>
					</initData>
					<reqData>
						<!-- 전달하고자 하는 데이터를 담당 ( submit 함수에서 처리) -->
						<searchData>
							<emp_no/>
							<dept_cd/>
							<dept_cd_nm/>
							<proc_stat>all</proc_stat>
							<plan_dt/>
							<dept_cd/>
							<emp_no_tm/>
						</searchData>
						<!-- 검색조건 처리 -->
						<reqForm>
						</reqForm>
						<!-- formData 팝업,화면전환시 data이동시 -->
						<!-- MultiUpData유형 사용시 처리 -->
						<fwdData>
							<func_nm/>
							<emp_no/>
						</fwdData>
						<submit>
							<multiUpData/>
							<gubun/>
							<plan_dt/>
						</submit>
					</reqData>
					<resData>
						<!-- 전달 받은 데이터를 담당 ( submit의 결과가 담김) -->
						<!-- 전달 받은 formData를 담당 ( submit의 결과가 담김) -->
						<!-- 전달 받은 데이터를 가공할 임시저장소 ( submit의 결과가 담김) -->
						<msg/>
						<!-- 전달 받은 errorCode를 담당 ( submit의 결과가 담김) -->
						<!-- 전달 받은 errorMsg를 담당 ( submit의 결과가 담김) -->
						<gridData>
							<!-- 전달 받은 grid데이터를 담당 ( submit의 결과가 담김) -->
							<record>
								<!-- datagrid1 -->
								<cmpy_cd/>
								<emp_no/>
								<nm_korn/>
								<dept_cd/>
								<dept_nm/>
								<posi_cd/>
								<posi_nm/>
								<dty_cd/>
								<dty_nm/>
								<mon_ck/>
								<tue_ck/>
								<wed_ck/>
								<thu_ck/>
								<fri_ck/>
								<sat_ck/>
								<sun_ck/>
								<aply_yymm/>
								<week/>
								<wkdy/>
								<hody_plan_dt_mon/>
								<hody_plan_dt_tue/>
								<hody_plan_dt_wed/>
								<hody_plan_dt_thu/>
								<hody_plan_dt_fri/>
								<hody_plan_dt_sat/>
								<hody_plan_dt_sun/>
								<proc_stat/>
								<proc_nm/>
								<rmn_vaca_dds/>
							</record>
							<!-- datagrid2 -->
							<!-- datagrid3 -->
						</gridData>
						<resForm>
							<emp_no/>
							<record>
								<nm_korn/>
							</record>
							<temp/>
							<temp_tm/>
							<emp_no_tm/>
						</resForm>
						<totcnt/>
						<hody_nm/>
						<prsnData>
							<emp_no/>
							<nm_korn/>
							<dept_cd/>
							<dty_cd/>
							<posi_cd/>
							<pgm_id/>
							<pgm_nm/>
							<pgm_url/>
							<job_clsf/>
							<annc_frdt/>
							<annc_todt/>
							<annc_cont/>
							<annc_clsf/>
						</prsnData>
						<prsnDel>
							<emp_no/>
							<pgm_id>HD_VACA_3200</pgm_id>
						</prsnDel>
					</resData>
					<tempData/>
				</root>
			</instance>
			<script type="javascript">
				<![CDATA[
				//결재신청시 개인공지등록 처리를 위한 스크립트_여기부터 분석 작업할 예정
				function noticeSubmit(){  
					var emp_no = model1.getValue("/root/resData/resForm/emp_no"); //결재자 사번
					model1.setValue("/root/resData/resForm/emp_no_tm", emp_no);
					model1.send("hd_vaca_1608"); //휴일예고제 : 기존모듈그대로 사용, 결재자의 인사기본정보조회
					model1.copyNode("/root/resData/prsnData","/root/dataSet/CURLIST/record");
					model1.refresh();
					model1.removenode("/root/dataSet");
					
					model1.makeNode("/root/resData/prsnData/pgm_id");
					model1.makeNode("/root/resData/prsnData/pgm_nm");
					model1.makeNode("/root/resData/prsnData/pgm_url");
					model1.makeNode("/root/resData/prsnData/job_clsf");
					model1.makeNode("/root/resData/prsnData/annc_frdt");
					model1.makeNode("/root/resData/prsnData/annc_todt");
					model1.makeNode("/root/resData/prsnData/annc_cont");
					model1.makeNode("/root/resData/prsnData/annc_clsf");
					
					//공지시작일자 (현재일자) 구하기
					var now_date = new Date();
					var year = now_date.getYear();
					var month = now_date.getMonth() + 1;
					var day = now_date.getDate();    
					var month_tm = '0' + month;
					var day_tm = '0' + day;  
					if(month_tm.length == 3){
						month_tm = month_tm.substring(1, 3);
					}
					if(day_tm.length == 3){
						day_tm = day_tm.substring(1, 3);
					}
					var now_dt = year + month_tm + day_tm;
					
					//공지종료일자 구하기
					var afr_date = new Date();
					var afr_date1 = new Date(afr_date.getYear(), afr_date.getMonth(), afr_date.getDate()+7 );
					var year1 = afr_date1.getYear();
					var month1 = afr_date1.getMonth() + 1;
					var day1 = afr_date1.getDate();   
					var month_tm1 = '0' + month1;
					var day_tm1 = '0' + day1;  
					if(month_tm1.length == 3){
						month_tm1 = month_tm1.substring(1, 3);
					}
					if(day_tm1.length == 3){
						day_tm1 = day_tm1.substring(1, 3);
					}
					var afr_dt = year1 + month_tm1 + day_tm1;
					
					var annc_frdt = now_dt
					var annc_todt = afr_dt
					
					model1.setValue("/root/resData/prsnData/pgm_id","HD_VACA_3200"); //개인공지등록시 사용되는 프로그램ID
					model1.setValue("/root/resData/prsnData/pgm_nm","휴일예고계획표승인");
					model1.setValue("/root/resData/prsnData/pgm_url","/xrw/hd/vaca/HD_VACA_3200.xrw"); //휴일예고결재화면
					//model1.setValue("/root/resData/prsnData/job_clsf","20");
					model1.setValue("/root/resData/prsnData/job_clsf",model1.getValue("/root/initData/hd_duty_1207_m/dataSet/xx_pr_job_clsf_20"));
					model1.setValue("/root/resData/prsnData/annc_frdt",annc_frdt); //공지시작일자
					model1.setValue("/root/resData/prsnData/annc_todt",annc_todt); //공지종료일자
					model1.setValue("/root/resData/prsnData/annc_cont","휴일예고계획표 결재바랍니다.");
					//model1.setValue("/root/resData/prsnData/annc_clsf","20");
					model1.setValue("/root/resData/prsnData/annc_clsf",model1.getValue("/root/initData/hd_duty_1207_m/dataSet/xx_annc_clsf"));
					
					model1.send("hd_prsn_2010"); //휴일예고제 : 기존모듈 그대로 사용
					alert("휴일예고계획표 결재 승인을 요청하였습니다.");
				}	
				
				function setEmp_no_tm(emp_no){ //휴일예고제 : 기존모듈 그대로 사용, 사원찾기 팝업창에 사용
					model1.setValue("/root/reqData/searchData/emp_no_tm", emp_no);
					model1.send("hd_duty_1206");
					model1.setValue("/root/resData/resForm/emp_no", model1.getValue("/root/dataSet/CURLIST/record/emp_no"));//사번
					model1.setValue("/root/resData/resForm/temp", model1.getValue("/root/dataSet/CURLIST/record/temp"));//성명
					//직책/직급 셋팅부분
					if(model1.getValue("/root/dataSet/CURLIST/record/temp_tm") == "/"){
						model1.setValue("/root/resData/resForm/temp_tm", "");
					}else{
						model1.setValue("/root/resData/resForm/temp_tm", model1.getValue("/root/dataSet/CURLIST/record/temp_tm"));
					}
					//model1.setValue("/root/reqData/searchData/dept_cd", model1.getValue("/root/dataSet/CURLIST/record/dept_cd"));
					model1.removenode("/root/dataSet");
					model1.refresh();
				}
				function setEmp_no(emp_no){  //그리드의 사원팝업 버튼때 사용
					model1.setValue("/root/reqData/searchData/emp_no", emp_no);
					model.send("hd_duty_1200"); //휴일예고제 : 필요한 항목

					var rowIdx = datagrid1.row;
					var obj = htmldocument.SessionInfo;
	    	 			setProperty("ss_deptcd"   , obj.deptcd.value);
	    	 			if(model1.getValue("/root/tempData/record/dept_cd").substring(0, 2) != obj.deptcd.value.substring(0, 2)){
	    	 				alert("다른 부서사원은 등록 하실 수 없습니다.");
							
					    	for(var i = 1; i < datagrid1.cols - 1; i++){
					    		datagrid1.valueMatrix(rowIdx, i) = "";
					    	}					    	
	    	 				return;
	    	 			}else{
						model1.setValue("/root/resData/gridData/record[" + (rowIdx) + "]/emp_no", model1.getValue("/root/tempData/record/emp_no"));
						model1.setValue("/root/resData/gridData/record[" + (rowIdx) + "]/nm_korn", model1.getValue("/root/tempData/record/nm_korn"));
						model1.setValue("/root/resData/gridData/record[" + (rowIdx) + "]/dept_cd", model1.getValue("/root/tempData/record/dept_cd"));
						model1.setValue("/root/resData/gridData/record[" + (rowIdx) + "]/dept_nm", model1.getValue("/root/tempData/record/dept_nm"));
						model1.setValue("/root/resData/gridData/record[" + (rowIdx) + "]/posi_cd", model1.getValue("/root/tempData/record/posi_cd"));
						model1.setValue("/root/resData/gridData/record[" + (rowIdx) + "]/posi_nm", model1.getValue("/root/tempData/record/posi_nm"));
	    	 			}

					model1.refresh();
				}

				function loadSearch(){
					model1.send("hd_vaca_3120_l"); //그리드 타이틀바 셋팅
					datagrid1.caption = model1.getValue("/root/initData/hd_vaca_3120_l/dataSet/xx_caption_01");					
					
					model1.send("hd_vaca_3130_l"); //대상자 정보 조회
					model1.copyNode("/root/resData/gridData", "/root/dataSet/CURLIST");
					model1.removenode("/root/dataSet/CURLIST");					
					
					datagrid1.refresh();
					model1.refresh();
				}
				function setEmp_no_pop(emp_no ,nm_korn ,dept_cd , dept_nm , dty_cd , dty_nm , posi_cd, posi_nm){
					
					var row = datagrid1.row;
					var obj = htmldocument.SessionInfo;
	    	 			setProperty("ss_deptcd"   , obj.deptcd.value);
	    	 			if(dept_cd.substring(0, 2) != obj.deptcd.value.substring(0, 2)){
	    	 				alert("다른 부서사원은 등록 하실 수 없습니다.");

					    	for(var i = 1; i < datagrid1.cols - 1; i++){
					    		datagrid1.valueMatrix(row, i) = "";
					    	}					    	
	    	 				return;
	    	 			}else{
						model1.setValue("/root/resData/gridData/record[" + (row) + "]/emp_no", emp_no);
						model1.setValue("/root/resData/gridData/record[" + (row) + "]/nm_korn", nm_korn);
						model1.setValue("/root/resData/gridData/record[" + (row) + "]/dept_cd", dept_cd);
						model1.setValue("/root/resData/gridData/record[" + (row) + "]/dept_nm", dept_nm);
						model1.setValue("/root/resData/gridData/record[" + (row) + "]/posi_cd", posi_cd);
						model1.setValue("/root/resData/gridData/record[" + (row) + "]/posi_nm", posi_nm);
	    	 			}

					model1.refresh();
				}
				]]>
			</script>
			<script type="javascript" ev:event="xforms-ready">
				<![CDATA[											
				//초기화
				model.send("hd_duty_1207_m");
				/*
					hd_duty_1207_m 에서 가져오는 값
					xx_pr_job_clsf_20 -> 개인공지 등록시 job_clsf 값에 값을 20 으로 셋팅
					xx_annc_clsf -> 개인공지 등록시 annc_clsf 값을 값을 20으로 셋팅
					xx_proc_stat_010 -> 현업결재(14), 인사결재(25), 현업전표등록(29) 인경우, 화면 그리드의 특정셀을 읽기모드로 변환시킨다.
					xx_dept_cd  -> 편집국(25)인 경우, 결재자 콤보박스에 돋보기 버튼을 숨김
					xx_proc_stat_020 --> 결재신청시 항목 밸리데이션 체크에 사용
					xx_proc_stat_030 --> 저장, 결재신청시 밸리데이션 체크에 사용
					xx_proc_stat_040 --> 현업결재(14), 현업결재취소(15), 현업전표등록(29)인경우, 결재신청시 밸리데이션 체크에 사용
					xx_finish_dd_clsf_010 --> 퇴근일 구분 당일/익일
					xx_finish_dd_clsf_020 --> 퇴근일 구분 당일/익일
				*/
				model.refresh();
				if(model.getValue("/root/initData/pageInfo/pageID") == ""){
					maintitle.text = "휴일예고등록(현업)";
					iv_Title.visible = false;  // 숨김
					iv_PopTitle.visible = true;  // 보임
				}else if(model.getValue("/root/initData/pageInfo/pageID") != ""){
					iv_Title.visible = true;  // 보임
					iv_PopTitle.visible = false;  // 숨김
				}
				
				//부서 콤보박스 - 접근자 권한에 따른 부서표시(편집국만 부서나오게 하게되면 수정되야함)
				model1.send("hd_co_1000");  
				model1.copyNode("/root/initData/comboSet/dept_cd", "/root/dataSet/dept_cd"); //hd_co_1000 리턴값
				model1.removenode("/root/dataSet");
				
				//휴뮤계획일 , 진행상태 콤보박스
				model1.send("hd_vaca_3110_m"); 
				model1.copyNode("/root/initData/comboSet/proc_stat", "/root/dataSet/proc_stat"); 
				model1.copyNode("/root/initData/comboSet/plan_dt", "/root/dataSet/plan_dt");
				model1.removenode("/root/dataSet");
				
				// hd_duty_1114 시작
				model1.send("hd_duty_1114"); //휴일예고제 : 기존모듈 사용 , 결재자를 가져오는 프로시저
				model1.setValue("/root/resData/resForm/emp_no", model1.getValue("/root/dataSet/CURLIST1/record/emp_no"));//결재자 사번
				model1.setValue("/root/resData/resForm/temp", model1.getValue("/root/dataSet/CURLIST1/record/nm_korn")); //결재자 성명
				if(model1.getValue("/root/dataSet/CURLIST1/record/posi_nm") != "" || model1.getValue("/root/dataSet/CURLIST1/record/dty_nm") != ""){
					model1.setValue("/root/resData/resForm/temp_tm", model1.getValue("/root/dataSet/CURLIST1/record/dty_nm")+"/"+model1.getValue("/root/dataSet/CURLIST1/record/posi_nm"));
				}else if(model1.getValue("/root/dataSet/CURLIST1/record/dty_nm") == "" && model1.getValue("/root/dataSet/CURLIST1/record/posi_nm") == ""){
					model1.setValue("/root/resData/resForm/temp_tm", "");
				}
				//model1.setValue("/root/reqData/searchData/dept_cd", model1.getValue("/root/dataSet/CURLIST2/record/dept_cd")); //세션사용자 본인의 부서코드
				model1.removenode("/root/dataSet");
					
				var nodeList = root.selectNodes("/root/resData/gridData/record");
				//model.alert("nodeList=>"+nodeList);
				var rowIdx = nodeList.length;
				for(var i=1; i<rowIdx + 1; i++){
					var proc_stat = model1.getValue("/root/resData/gridData/record[" + (i) + "]/proc_stat");
					var nm_korn = model1.getValue("/root/resData/gridData/record[" + (i) + "]/nm_korn");
					datagrid1.isReadOnly(i, 1, i, 12) = false;
					
					//진행상태가 14:현업결재, 25:인사결재, 29:현업전표등록 상태인 row는 readonly 시킴					
					var pattern = ","+proc_stat+",";
					var validation  = (","+model1.getValue("/root/initData/hd_duty_1207_m/dataSet/xx_proc_stat_010")+",").indexOf(pattern)>-1;
					
					if(validation) {
						datagrid1.isReadOnly(i, 1, i, 12) = true;
					}else{
						datagrid1.isReadOnly(i, 1, i, 5) = true;
					}					
				}
				datagrid1.clearStatus();
				datagrid1.removeRow();
			
				var obj = htmldocument.SessionInfo;
    	 			setProperty("ss_deptcd"   , obj.deptcd.value);
    	 			//if(obj.deptcd.value.substring(0, 2) == "25"){
    	 			if(obj.deptcd.value.substring(0, 2) == model1.getValue("/root/initData/hd_duty_1207_m/dataSet/xx_dept_cd")){
    	 				input1.visible = false; //편집국인경우 결재자 돋보기 버튼을 숨긴다.
    	 			}
				model1.refresh();
				var totcnt = datagrid1.rows;
				model1.setValue("/root/resData/totcnt", "총 " + Number(totcnt - 1) + " 건");
				model1.refresh();
				]]>
			</script>
			<script type="javascript" src="/js/CIISComm.js"/>
			<script type="javascript" src="/js/TFCommon.js"/>
			<!-- hd_duty_1200 그리드내에서 인사정보 가져올때 사용-->
			<submission id="hd_duty_1200" action="/hd/duty/1200" mediatype="application/x-www-form-urlencoded" method="post" ref="/root/reqData/searchData" resultref="/root/tempData"/>
			<!-- hd_co_1000 부서별 접근제어 -->
			<submission id="hd_co_1000" action="/hd/co/1000" mediatype="application/x-www-form-urlencoded" method="post" resultref="/root/tempData"/>
			<!-- hd_duty_1209 부서 콤보박스 선택시 결재자정보 리턴-->
			<submission id="hd_duty_1209" action="/hd/duty/1209" mediatype="application/x-www-form-urlencoded" method="post" ref="/root/reqData/searchData" resultref="/root/tempData"/>
			<!-- hd_duty_1114 화면진입시 결재자, 직책/직급 콤보박스의 결재자 정보를 셋팅함 -->
			<submission id="hd_duty_1114" action="/hd/duty/1114" mediatype="application/x-www-form-urlencoded" method="post" resultref="/root/tempData"/>
			<!-- hd_duty_1206 결재자 콤보의 돋보기 버튼 누르면 수행됨. 결재자 정보가져옴 -->
			<submission id="hd_duty_1206" action="/hd/duty/1206" mediatype="application/x-www-form-urlencoded" method="post" ref="/root/reqData/searchData" resultref="/root/tempData"/>
			<!-- hd_duty_1107 그리도 밸루체인지시 이미 등록된 근무일, 휴가일인지 체크 비슷하게 수정해서 만들필요있음 -->
			<submission id="hd_duty_1107" action="/hd/duty/1107" mediatype="application/x-www-form-urlencoded" method="post" ref="/root/reqData/searchData" resultref="/root/tempData"/>
			<!-- hd_vaca_1608 공지등록을 위해 결재자 인사정보 조회. 필요함 -->
			<submission id="hd_vaca_1608" action="/hd/vaca/1608" mediatype="application/x-www-form-urlencoded" method="post" ref="/root/resData/resForm/emp_no_tm" resultref="/root/tempData"/>
			<!-- hd_prsn_2010 개인공지 등록 프로시저. 필요함 -->
			<submission id="hd_prsn_2010" action="/hd/prsn/2010" mediatype="application/x-www-form-urlencoded" method="post" ref="/root/resData/prsnData" resultref="/root/tempData"/>
			<!-- hd_com_2100 개인공지 삭제프로시저. 필요함 -->
			<submission id="hd_com_2100" action="/hd/com/2100" mediatype="application/x-www-form-urlencoded" method="post" ref="/root/resData/prsnDel" resultref="/root/tempData"/>
			<!-- hd_duty_1207_m 초기 콤보박스 설정 프로시저. 필요함 -->
			<submission id="hd_duty_1207_m" action="/hd/duty/1207" mediatype="application/x-www-form-urlencoded" method="post" resultref="/root/initData/hd_duty_1207_m/dataSet"/>
			<submission id="hd_vaca_3110_m" action="/hd/vaca/3110" mediatype="application/x-www-form-urlencoded" method="post" resultref="/root/dataSet"/>
			<submission id="hd_vaca_3120_l" action="/hd/vaca/3120" mediatype="application/x-www-form-urlencoded" method="post" ref="/root/reqData/searchData" resultref="/root/initData/hd_vaca_3120_l/dataSet"/>
			<submission id="hd_vaca_3130_l" action="/hd/vaca/3130" mediatype="application/x-www-form-urlencoded" method="post" ref="/root/reqData/searchData" resultref="/root/dataSet"/>
			<submission id="hd_vaca_3140_a" action="/hd/vaca/3140" mediatype="application/x-www-form-urlencoded" method="post" ref="/root/reqData/submit" resultref="/root/tempData"/>
			<submission id="hd_vaca_3150_l" action="/hd/vaca/3150" mediatype="application/x-www-form-urlencoded" method="post" ref="/root/reqData/searchData" resultref="/root/initData/hd_vaca_3150_l/dataSet"/>
		</model>
	</xhtml:head>
	<xhtml:body class="main" pagewidth="946" pageheight="728" guideline="2,59;2,68;2,80;2,80;2,691;1,936;1,926;1,926;" style="font-family:굴림; background-image:../../images/bg_946.gif; ">
		<import id="iv_Title" src="../../../common/xrw/iv_TitleBar.xrw" style="left:10px; top:5px; width:926px; height:29px; "/>
		<import id="iv_PopTitle" src="../../../common/xrw/iv_PopTitleBar.xrw" style="left:10px; top:5px; width:926px; height:29px; "/>
		<group id="group_btnA" class="gro_btn" style="left:10px; top:50px; width:926px; height:26px; ">
			<button id="btnA2" class="btn02" style="left:464px; top:2px; width:52px; height:21px; ">
				<caption>초기화</caption>
				<script type="javascript" ev:event="onclick">
					<![CDATA[
					model1.reset();
					//datagrid1.rowStatus(1) = 0;
					//datagrid1.addStatus(1, "insert");	
					datagrid1.clearStatus(); //Multi Update 상태 플래그를 초기화
					datagrid1.caption = "부서^사번^성명^직급^직책^월^화^수^목^금^토^일^진행상태";
					datagrid1.isReadOnly(1, 1, 1, 12) = false; //readonly 상태 초기화
					
					]]>
				</script>
			</button>
			<button id="button4" class="btn02" style="left:874px; top:2px; width:52px; height:21px; ">
				<caption>종료</caption>
				<script type="javascript" ev:event="onclick">
					<![CDATA[
					if(model.getValue("/root/initData/pageInfo/pageID") != ""){
					 	viewer("mainFrame").window.javaScript.closeMDIWindow(model.getValue("/root/initData/pageInfo/pageID"));
					}else{
						window.close();
					}
					]]>
				</script>
			</button>
			<button id="button1" class="btn02" style="left:519px; top:2px; width:52px; height:21px; ">
				<caption>조회</caption>
				<script type="javascript" ev:event="onclick">
					<![CDATA[
					var plan_dt = model1.getValue("/root/reqData/searchData/plan_dt");
					var dept_cd = model1.getValue("/root/reqData/searchData/dept_cd");
					
					if(dept_cd == ""){
						alert("부서를 선택하세요.");
						return;
					}
					if(plan_dt == ""){
						alert("휴무계획일을 선택해주세요.");
						return;
					}					
					if(plan_dt == "" || dept_cd == ""){
						alert("부서와 휴무계획일을 모두 지정 후 조회하시기 바랍니다.");
						return;
					}
					
					var temp = model1.getValue("/root/reqData/searchData/dept_cd");
					model1.setValue("/root/reqData/searchData/dept_cd", temp);
					//model1.send("hd_duty_1204");
					model1.send("hd_duty_1209");
					model1.setValue("/root/resData/resForm/emp_no", model1.getValue("/root/dataSet/CURLIST/record/emp_no"));
					model1.setValue("/root/resData/resForm/temp", model1.getValue("/root/dataSet/CURLIST/record/temp"));
					model1.setValue("/root/resData/resForm/temp_tm", model1.getValue("/root/dataSet/CURLIST/record/temp_tm"));
					var temp_tm = model1.getValue("/root/dataSet/CURLIST/record/temp_tm");
					model1.removenode("/root/dataSet/CURLIST/record/temp_tm");
					model1.removenode("/root/dataSet");
					var temp = datagrid1.rows;
					//for(var i=1; i< temp;  i++) {
					//	datagrid1.deleteRow(1);
					//}
					if(temp_tm == ""){
						alert("해당부서에 결재자가 없습니다.");
						output1.value = "";
						output2.value = "";
					}
					
					loadSearch();
					
					var nodeList = root.selectNodes("/root/resData/gridData/record");
					var rowIdx = nodeList.length;
					for(var i=1; i<rowIdx + 1; i++){
						var proc_stat = model1.getValue("/root/resData/gridData/record[" + (i) + "]/proc_stat");
						var duty_dt = model1.getValue("/root/resData/gridData/record[" + (i) + "]/duty_dt");
						var nm_korn = model1.getValue("/root/resData/gridData/record[" + (i) + "]/nm_korn");
						datagrid1.isReadOnly(i, 1, i, 12) = false;
						//진행상태가 14:현업결재, 25:인사결재, 29:현업전표등록 상태인 row는 readonly 시킴
						var pattern = ","+proc_stat+",";
						var validation  = (","+model1.getValue("/root/initData/hd_duty_1207_m/dataSet/xx_proc_stat_010")+",").indexOf(pattern)>-1;
						if(validation) {
							datagrid1.isReadOnly(i, 1, i, 12) = true;
						}else{
							datagrid1.isReadOnly(i, 1, i, 5) = true;
						}						
					}
					datagrid1.clearStatus();
					
					model1.refresh();
					var totcnt = datagrid1.rows;
					model1.setValue("/root/resData/totcnt", "총 " + Number(totcnt - 1) + " 건");
					model1.refresh();
					]]>
				</script>
			</button>
			<caption id="caption1" class="list_cap01" style="left:0px; top:0px; width:90px; height:26px; text-align:center; ">결재자</caption>
			<caption id="caption2" class="list_cap02" style="left:89px; top:0px; width:336px; height:26px; text-align:center; "/>
			<caption id="caption7" class="list_cap01" style="left:195px; top:0px; width:90px; height:26px; text-align:center; ">직책/직급</caption>
			<output id="output2" ref="/root/resData/resForm/temp_tm" style="left:288px; top:4px; width:132px; height:18px; "/>
			<output id="output1" ref="/root/resData/resForm/temp" style="left:92px; top:4px; width:82px; height:18px; "/>
			<input id="input1" inputtype="button" style="left:174px; top:4px; width:18px; height:18px; ">
				<script type="javascript" ev:event="onbuttonclick">
					<![CDATA[
						model.removeNodeset("/root/reqData/fwdData");  
						model.makeNode("/root/reqData/fwdData/func_nm");
						model.setValue("/root/reqData/fwdData/func_nm", "setEmp_no_tm");
						window.load("/xrw/hd/com/HD_COM_1000.xrw","mdichild", "hd_com_1000", "align:center; caption:hidden;", "/root/reqData/fwdData", "/root/reqData/fwdData");
					]]>
				</script>
			</input>
			<button id="button3" class="btn02" style="left:684px; top:2px; width:52px; height:21px; ">
				<caption>결재신청</caption>
				<script type="javascript" ev:event="onclick">
					<![CDATA[
					var plan_dt = model1.getValue("/root/reqData/searchData/plan_dt");
					var dept_cd = model1.getValue("/root/reqData/searchData/dept_cd");							
					
					//부서 선택유무 체크
					if(dept_cd == ""){
						alert("결재신청시 부서 선택은 필수입니다.");
						return;
					}
					//휴무계획일 선택유무 체크
					if(plan_dt == ""){
						alert("결재신청시 휴무계획일 선택은 필수입니다.");
						return;
					}
					//결재자 체크
					if(model1.getValue("/root/resData/resForm/temp") == ""){
						alert("결재자를 선택해주세요.");
						return;
					}
					
					//var nodeList = root.selectNodes("/root/resData/gridData/record");
					//var rowIdx = nodeList.length;
					
					for(var i=datagrid1.fixedRows; i<datagrid1.rows; i++){
						
						//삭제모드 체크
						if(datagrid1.rowStatus(i) == "4") {
							alert("삭제(빨간동그라미)모드로 선택된 데이터가 존재하여 결재신청이 불가합니다.\n\n조회를 새로하신 후 결재신청을 하시기 바랍니다.");
							return;
						}
						
						//연차체크
						var proc_stat = model1.getValue("/root/resData/gridData/record[" + (i) + "]/proc_stat");
						var plan_vaca_cnt = 0; //사원의 연차정보 체크를 위한 변수
						if(model1.getValue("/root/resData/gridData/record[" + (i) + "]/mon_ck") == "Y"){ //월
							plan_vaca_cnt = plan_vaca_cnt + 1;
						}
						if(model1.getValue("/root/resData/gridData/record[" + (i) + "]/tue_ck") == "Y"){ //화
							plan_vaca_cnt = plan_vaca_cnt + 1;
						}
						if(model1.getValue("/root/resData/gridData/record[" + (i) + "]/wed_ck") == "Y"){ //수
							plan_vaca_cnt = plan_vaca_cnt + 1;
						}
						if(model1.getValue("/root/resData/gridData/record[" + (i) + "]/thu_ck") == "Y"){ //목
							plan_vaca_cnt = plan_vaca_cnt + 1;
						}
						if(model1.getValue("/root/resData/gridData/record[" + (i) + "]/fri_ck") == "Y"){ //금
							plan_vaca_cnt = plan_vaca_cnt + 1;
						}
						if(model1.getValue("/root/resData/gridData/record[" + (i) + "]/sat_ck") == "Y"){ //토
							plan_vaca_cnt = plan_vaca_cnt + 1;
						}
						if(model1.getValue("/root/resData/gridData/record[" + (i) + "]/sun_ck") == "Y"){ //일
							plan_vaca_cnt = plan_vaca_cnt + 1;
						}
						
						//개인등록 상태이거나 수정 상태인 데이터인 경우의 데이터만 체크
						if(proc_stat == model1.getValue("/root/initData/hd_duty_1207_m/dataSet/xx_proc_stat_030") 
							|| proc_stat == model1.getValue("/root/initData/hd_duty_1207_m/dataSet/xx_proc_stat_020") 
							|| datagrid1.rowStatus(i) == 2)
						{							
							var rmn_vaca_dds = model1.getValue("/root/resData/gridData/record[" + (i) + "]/rmn_vaca_dds"); //잔여연차+대휴
							var nm_korn = model1.getValue("/root/resData/gridData/record[" + (i) + "]/nm_korn");							
							
							if(plan_vaca_cnt > rmn_vaca_dds){ //휴무계획체크 개수 > 잔여연차
								model1.alert(nm_korn+"님의 휴무계획일이 사용가능한 잔여연차+대휴 개수보다 초과되어 입력되었습니다./n/n인사팀에 문의하신 후 수정 입력하시기 바랍니다.");
								return;
							}
							
							var pattern = ","+proc_stat+",";
							//진행상태가가 13,14,29
							var validation  = (","+model1.getValue("/root/initData/hd_duty_1207_m/dataSet/xx_proc_stat_040")+",").indexOf(pattern)>-1;
							if(validation) {
								alert(nm_korn + " 님의 휴뮤 계획 자료는 이미 현업등록취소가 되었던 자료입니다.\n\n다시 반려처리가 되지 않도록 입력된 데이터가 올바른지 확인하시기 바라며\n\n결재신청은 계속 진행됩니다.");
							}							
						}
					}

					var kj_msg1 = model.getvalue("/root/reqData/searchData/plan_dt").substring(4,6);
					var kj_msg2 = model.getvalue("/root/reqData/searchData/plan_dt").substring(6,7);
					
					if (window.alert(kj_msg1+"월 "+kj_msg2+"주 휴무계획일을 결재신청 하시겠습니까?", "확인", 1) != 1) {
						return;
					}
					
					/*
					if (!rowInSubmit(datagrid1)) {
						return;
					}
					*/
					
					//강제로 상태값을 insert 모드로 처리하여 모든 부서원들 값이 저장되게 처리한다.
					for(var i=datagrid1.fixedRows; i<datagrid1.rows; i++){
						//현업결재(14), 인사결재(25) 가 아닌 row 만 상태를 바꾼다.
						if("14" != model1.getValue("/root/resData/gridData/record[" + (i) + "]/proc_stat") && "25" != model1.getValue("/root/resData/gridData/record[" + (i) + "]/proc_stat")){
							if(datagrid1.rowStatus(i) == "0" || datagrid1.rowStatus(i) == "2" || datagrid1.rowStatus(i) == "3") { 
								datagrid1.rowStatus(i) = "1";
							}
						}
						//내용입력 후 저장을 하여 개인등록(01)상태인 데이터가 있다면, 결재신청이 진행되야하므로 1로 변경
						if("01" == model1.getValue("/root/resData/gridData/record[" + (i) + "]/proc_stat")){
								datagrid1.rowStatus(i) = "1";
						}
						//현업결재(14), 인사결재(25) 상태인 row 중 삭제모드로 설정된 데이터 존재시 0 으로 변경
						if("14" == model1.getValue("/root/resData/gridData/record[" + (i) + "]/proc_stat") || "25" == model1.getValue("/root/resData/gridData/record[" + (i) + "]/proc_stat")){
							if(datagrid1.rowStatus(i) != "0" && datagrid1.rowStatus(i) != "2" && datagrid1.rowStatus(i) != "3" && datagrid1.rowStatus(i) != "1") {
								datagrid1.rowStatus(i) = "0";
							}
						}
					}
					
					var gubun_tm = "1" + model1.getValue("/root/resData/resForm/emp_no");
					model1.setValue("/root/reqData/submit/gubun", gubun_tm); // 결재자를 구분에 넣어줌
					model1.setValue("/root/reqData/submit/multiUpData", datagrid1.getUpdateData());
					model1.setValue("/root/reqData/submit/plan_dt" , model.getValue("/root/reqData/searchData/plan_dt"));
					
					model1.send("hd_vaca_3140_a");
					if(submit_completed()) {
						datagrid1.clearStatus();
						noticeSubmit(); //개인공지등록
						
						loadSearch();
					}
					]]>
				</script>
			</button>
			<button id="button2" class="btn02" style="left:574px; top:2px; width:52px; height:21px; ">
				<caption>삭제</caption>
				<script type="javascript" ev:event="onclick">
					<![CDATA[
						var plan_dt = model1.getValue("/root/reqData/searchData/plan_dt");
						var dept_cd = model1.getValue("/root/reqData/searchData/dept_cd");
					
						//부서 선택유무 체크
						if(dept_cd == ""){
							alert("삭제시 부서 선택은 필수입니다.");
							return;
						}
						//휴무계획일 선택유무 체크
						if(plan_dt == ""){
							alert("삭제시 휴무계획일 선택은 필수입니다.");
							return;
						}
						if (!rowDelSubmit(datagrid1)) {
							return;
						}

						for(var i=datagrid1.fixedRows; i<datagrid1.rows; i++){
							var proc_stat = model1.getValue("/root/resData/gridData/record[" + (i) + "]/proc_stat");
							var nm_korn = model1.getValue("/root/resData/gridData/record[" + (i) + "]/nm_korn");
							
							if(datagrid1.rowStatus(i) != "0"){									
								var pattern = ","+proc_stat+",";
								//진행상태 14,25,29
								var validation  = (","+model1.getValue("/root/initData/hd_duty_1207_m/dataSet/xx_proc_stat_010")+",").indexOf(pattern)>-1;

								if(validation) {
									alert(nm_korn + " 님의 입력된 휴뮤계획일 자료는 이미 현업결재된 자료입니다. 현업결재된 자료는 수정 및 삭제가 불가능합니다.");
									return;
									//datagrid1.rowStatus(i) = "0";
								}
							}
						}
						if (window.alert("삭제하시겠습니까?", "확인", 1) != 1) {
							return;
						}
						model1.setValue("/root/reqData/submit/plan_dt" , model.getValue("/root/reqData/searchData/plan_dt"));
						model1.setValue("/root/reqData/submit/multiUpData", datagrid1.getUpdateData());
						model1.send("hd_vaca_3140_a");
						if(submit_completed()) {

							datagrid1.clearStatus();						
							
							var emp_no = model1.getValue("/root/resData/resForm/emp_no");
							model1.setValue("/root/resData/prsnDel/emp_no", emp_no);
							model1.send("hd_com_2100");  //해당 프로시저에 휴일예고제 관련하여 프로시저 로직추가해야함.
							//단 개인별로 삭제할지, 한번 통으로 결재후 통으로 결재를 취소할지는 생각해봐야함.
							//해당 월별로 현업대기건이 하나도 없을때에만 개인공지를 삭제해야 할듯
							
							loadSearch();
						}
					]]>
				</script>
			</button>
			<button id="button5" class="btn02" style="left:629px; top:2px; width:52px; height:21px; ">
				<caption>저장</caption>
				<script type="javascript" ev:event="onclick">
					<![CDATA[
					var plan_dt = model1.getValue("/root/reqData/searchData/plan_dt");
					var dept_cd = model1.getValue("/root/reqData/searchData/dept_cd");
					
					//부서 선택유무 체크
					if(dept_cd == ""){
						alert("저장시 부서 선택은 필수입니다.");
						return;
					}
					//휴무계획일 선택유무 체크
					if(plan_dt == ""){
						alert("저장시 휴무계획일 선택은 필수입니다.");
						return;
					}
					//결재자 체크
					if(model1.getValue("/root/resData/resForm/temp") == ""){
						alert("결재자를 선택해주세요.");
						return;
					}
					
					for(var i=datagrid1.fixedRows; i<datagrid1.rows; i++){
						
						//삭제모드 체크
						if(datagrid1.rowStatus(i) == "4") {
							alert("삭제(빨간동그라미)모드로 선택된 데이터가 존재하면 저장이 불가합니다.\n\n조회를 새로하신 후 저장을 하시기 바랍니다.");
							return;
						}
						
						//연차체크
						var proc_stat = model1.getValue("/root/resData/gridData/record[" + (i) + "]/proc_stat");
						var plan_vaca_cnt = 0; //사원의 연차정보 체크를 위한 변수
						if(model1.getValue("/root/resData/gridData/record[" + (i) + "]/mon_ck") == "Y"){ //월
							plan_vaca_cnt = plan_vaca_cnt + 1;
						}
						if(model1.getValue("/root/resData/gridData/record[" + (i) + "]/tue_ck") == "Y"){ //화
							plan_vaca_cnt = plan_vaca_cnt + 1;
						}
						if(model1.getValue("/root/resData/gridData/record[" + (i) + "]/wed_ck") == "Y"){ //수
							plan_vaca_cnt = plan_vaca_cnt + 1;
						}
						if(model1.getValue("/root/resData/gridData/record[" + (i) + "]/thu_ck") == "Y"){ //목
							plan_vaca_cnt = plan_vaca_cnt + 1;
						}
						if(model1.getValue("/root/resData/gridData/record[" + (i) + "]/fri_ck") == "Y"){ //금
							plan_vaca_cnt = plan_vaca_cnt + 1;
						}
						if(model1.getValue("/root/resData/gridData/record[" + (i) + "]/sat_ck") == "Y"){ //토
							plan_vaca_cnt = plan_vaca_cnt + 1;
						}
						if(model1.getValue("/root/resData/gridData/record[" + (i) + "]/sun_ck") == "Y"){ //일
							plan_vaca_cnt = plan_vaca_cnt + 1;
						}
						
						//개인등록 상태이거나 수정 상태인 데이터인 경우의 데이터만 체크
						if(proc_stat == model1.getValue("/root/initData/hd_duty_1207_m/dataSet/xx_proc_stat_030") 
							|| proc_stat == model1.getValue("/root/initData/hd_duty_1207_m/dataSet/xx_proc_stat_020") 
							|| datagrid1.rowStatus(i) == 2)
						{
							var rmn_vaca_dds = model1.getValue("/root/resData/gridData/record[" + (i) + "]/rmn_vaca_dds"); //잔여연차+대휴
							var nm_korn = model1.getValue("/root/resData/gridData/record[" + (i) + "]/nm_korn");							
							
							if(plan_vaca_cnt > rmn_vaca_dds){ //휴무계획체크 개수 > 잔여연차
								model1.alert(nm_korn+"님의 휴무계획일이 사용가능한 잔여연차+대휴 개수보다 초과되어 입력되었습니다.\n\n인사팀에 문의하신 후 수정 입력하시기 바랍니다.");
								return;
							}
						}
					}
					
					var kj_msg1 = model.getvalue("/root/reqData/searchData/plan_dt").substring(4,6);
					var kj_msg2 = model.getvalue("/root/reqData/searchData/plan_dt").substring(6,7);
					
					if (window.alert(kj_msg1+"월 "+kj_msg2+"주 휴무계획일을 저장 하시겠습니까?", "확인", 1) != 1) {
						return;
					}

					/* 임의로 주석처리 해놓고, 처리상태를 바꿔서 로직을 태운다
					if (!rowInSubmit(datagrid1)) {
						return;
					}
					*/
					
					//강제로 상태값을 insert 모드로 처리하여 모든 부서원들 값이 저장되게 처리한다.
					for(var i=datagrid1.fixedRows; i<datagrid1.rows; i++){
						//현업결재(14), 인사결재(25) 가 아닌 row 만 상태를 바꾼다.
						if("14" != model1.getValue("/root/resData/gridData/record[" + (i) + "]/proc_stat") && "25" != model1.getValue("/root/resData/gridData/record[" + (i) + "]/proc_stat")){
							if(datagrid1.rowStatus(i) == "0" || datagrid1.rowStatus(i) == "2" || datagrid1.rowStatus(i) == "3") { 
								datagrid1.rowStatus(i) = "1";
							}
						}
						//현업결재(14), 인사결재(25) 상태인 row 중 삭제모드로 설정된 데이터 존재시 0 으로 변경
						if("14" == model1.getValue("/root/resData/gridData/record[" + (i) + "]/proc_stat") || "25" == model1.getValue("/root/resData/gridData/record[" + (i) + "]/proc_stat")){
							if(datagrid1.rowStatus(i) != "0" && datagrid1.rowStatus(i) != "2" && datagrid1.rowStatus(i) != "3" && datagrid1.rowStatus(i) != "1") {
								datagrid1.rowStatus(i) = "0";
							}
						}
					}

					var gubun_tm = "2" + model1.getValue("/root/resData/resForm/emp_no");					
					model1.setValue("/root/reqData/submit/gubun", gubun_tm); // 결재자를 구분에 넣어줌
					model1.setValue("/root/reqData/submit/multiUpData", datagrid1.getUpdateData());
					model1.setValue("/root/reqData/submit/plan_dt" , model.getValue("/root/reqData/searchData/plan_dt"));
					
					model1.send("hd_vaca_3140_a");
					
					if(submit_completed()) {
						datagrid1.clearStatus();
						
						loadSearch();
					}
					]]>
				</script>
			</button>
			<button id="button7" class="btn03" style="left:739px; top:2px; width:63px; height:21px; ">
				<caption>출력(계획)</caption>
				<script type="javascript" ev:event="onclick">
					<![CDATA[
						var plan_dt = model1.getValue("/root/reqData/searchData/plan_dt");
						var dept_cd = model1.getValue("/root/reqData/searchData/dept_cd");
						
						if(dept_cd == ""){
							alert("부서를 선택하세요.");
							return;
						}
						if(plan_dt == ""){
							alert("휴무계획일을 선택해주세요.");
							return;
						}						
						if(plan_dt == "" || dept_cd == ""){
							alert("부서와 휴무계획일을 모두 지정 후 계획장표 출력을 하시기 바랍니다.");
							return;
						}
						
						resetOznode();											//오즈node 초기화
						makeNodeValue("/root/oz_data/ozrName","hd/SP_HD_VACA_3150_P");	//odi 파일경로('/' root경로 제외)
						makeNodeValue("/root/oz_data/preview","preview"); 			//preview : 미리보기, print : 인쇄
						makeNodeValue("/root/oz_data/printsize",""); 				//페이지용지설정(기본 A4)
						
						//Parameter setting
						makeNodeValue("/root/oz_data/odiParam/iv_cmpy_cd" , getProperty("ss_cmpycd") );			
						makeNodeValue("/root/oz_data/odiParam/iv_dept_cd",model1.getValue("/root/reqData/searchData/dept_cd"));	
						makeNodeValue("/root/oz_data/odiParam/iv_dept_nm",model1.getValue("/root/resData/gridData/record[1]/dept_nm"));	
						makeNodeValue("/root/oz_data/odiParam/iv_plan_dt",model1.getValue("/root/reqData/searchData/plan_dt").substring(0,6));
						
						openOzwin("/root/oz_data");
					]]>
				</script>
			</button>
			<button id="button8" class="btn03" style="left:807px; top:2px; width:63px; height:21px; ">
				<caption>출력(결과)</caption>
				<script type="javascript" ev:event="onclick">
					<![CDATA[
						var plan_dt = model1.getValue("/root/reqData/searchData/plan_dt");
						var dept_cd = model1.getValue("/root/reqData/searchData/dept_cd");
						
						if(dept_cd == ""){
							alert("부서를 선택하세요.");
							return;
						}
						if(plan_dt == ""){
							alert("휴무계획일을 선택해주세요.");
							return;
						}						
						if(plan_dt == "" || dept_cd == ""){
							alert("부서와 휴무계획일을 모두 지정 후 결과장표 출력을 하시기 바랍니다.");
							return;
						}
						
						//인사팀 승인여부 확인
						var magam_flag = "";
						
						model1.send("hd_vaca_3150_l");
						magam_flag = model1.getValue("/root/initData/hd_vaca_3150_l/dataSet/xx_result_oz");
						
						if(magam_flag == "Y"){
							resetOznode();											//오즈node 초기화
							makeNodeValue("/root/oz_data/ozrName","hd/SP_HD_VACA_3160_P");	//odi 파일경로('/' root경로 제외)
							makeNodeValue("/root/oz_data/preview","preview"); 			//preview : 미리보기, print : 인쇄
							makeNodeValue("/root/oz_data/printsize",""); 				//페이지용지설정(기본 A4)
							
							//Parameter setting
							makeNodeValue("/root/oz_data/odiParam/iv_cmpy_cd" , getProperty("ss_cmpycd") );			
							makeNodeValue("/root/oz_data/odiParam/iv_dept_cd",model1.getValue("/root/reqData/searchData/dept_cd"));	
							makeNodeValue("/root/oz_data/odiParam/iv_dept_nm",model1.getValue("/root/resData/gridData/record[1]/dept_nm"));	
							makeNodeValue("/root/oz_data/odiParam/iv_plan_dt",model1.getValue("/root/reqData/searchData/plan_dt").substring(0,6));
							
							openOzwin("/root/oz_data");
						}
						
						
					]]>
				</script>
			</button>
		</group>
		<group id="group2" style="left:10px; top:131px; width:926px; height:570px; ">
			<caption id="caption9" class="tit02" style="left:0px; top:0px; width:135px; height:20px; font-weight:bold; ">휴무계획일 신청</caption>
			<datagrid id="datagrid1" nodeset="/root/resData/gridData/record" caption="부서^사번^성명^직급^직책^월^화^수^목^금^토^일^진행상태" colsep="#" colwidth="120, 80, 80, 70, 70, 57, 57, 57, 57, 57, 57, 57, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70" extendlastcol="scroll" mergecellsfixedrows="bycolrec" rowheader="update" rowsep="|" selectionmode="free" style="left:0px; top:25px; width:926px; height:545px; ">
				<col class="req" ref="dept_nm" caption="부서" style="text-align:left; "/>
				<col class="req" imemode="hangul" ref="emp_no" type="inputbutton" maxlength="6" caption="사번">
					<script type="javascript" ev:event="onbuttonclick">
						<![CDATA[
						model.removeNodeset("/root/reqData/fwdData");  
						model.makeNode("/root/reqData/fwdData/func_nm");
						model.setValue("/root/reqData/fwdData/func_nm", "setEmp_no");
						window.load("/xrw/hd/com/HD_COM_1000.xrw","mdichild", "", "align:center; caption:hidden;", "/root/reqData/fwdData", "/root/reqData/fwdData");
						]]>
					</script>
				</col>
				<col class="req" imemode="hangul" ref="nm_korn" type="input" caption="성명"/>
				<col class="req" ref="posi_nm" caption="직급"/>
				<col class="req" ref="dty_nm" caption="직책"/>
				<col checkvalue="Y,N" ref="mon_ck" type="checkbox" caption="월"/>
				<col checkvalue="Y,N" ref="tue_ck" type="checkbox" caption="화"/>
				<col checkvalue="Y,N" ref="wed_ck" type="checkbox" caption="수"/>
				<col checkvalue="Y,N" ref="thu_ck" type="checkbox" caption="목"/>
				<col checkvalue="Y,N" ref="fri_ck" type="checkbox" caption="금"/>
				<col checkvalue="Y,N" ref="sat_ck" type="checkbox" caption="토"/>
				<col checkvalue="Y,N" ref="sun_ck" type="checkbox" caption="일"/>
				<col class="req" ref="proc_nm" caption="진행상태"/>
				<col class="req" ref="dept_cd" visibility="hidden" caption="부서코드"/>
				<col class="req" ref="posi_cd" visibility="hidden" caption="직급코드"/>
				<col class="req" ref="proc_stat" visibility="hidden" caption="진행상태코드"/>
				<col class="req" ref="dty_cd" visibility="hidden" caption="직책코드"/>
				<col class="req" ref="aply_yymm" visibility="hidden" caption="적용년월"/>
				<col class="req" ref="week" visibility="hidden" caption="주"/>
				<col class="req" ref="wkdy" visibility="hidden" caption="요일"/>
				<col class="req" ref="hody_plan_dt_mon" visibility="hidden" caption="월요일날짜"/>
				<col class="req" ref="hody_plan_dt_tue" visibility="hidden" caption="화요일날짜"/>
				<col class="req" ref="hody_plan_dt_wed" visibility="hidden" caption="수요일날짜"/>
				<col class="req" ref="hody_plan_dt_thu" visibility="hidden" caption="목요일날짜"/>
				<col class="req" ref="hody_plan_dt_fri" visibility="hidden" caption="금요일날짜"/>
				<col class="req" ref="hody_plan_dt_sat" visibility="hidden" caption="토요일날짜"/>
				<col class="req" ref="hody_plan_dt_sun" visibility="hidden" caption="일요일날짜"/>
				<col class="req" ref="rmn_vaca_dds" visibility="hidden" caption="잔여연차개수"/>
				<script type="javascript" ev:event="xforms-value-changed">
					<![CDATA[ 
					var row = datagrid1.row;
					var col = datagrid1.col;
					
					var cell = datagrid1.selectedCells;									
					
					var codeVal;
					var cellCol = cell.item(0).col;
					var cellRow = cell.item(0).row;
					var selectValue = datagrid1.valueMatrix(cellRow, cellCol);
					if (selectValue.indexOf(' ') > -1){
						codeVal = selectValue.substring(0, selectValue.indexOf(' '));
					} else {
						codeVal = selectValue;
					}
					if (codeVal != ''){
						if (cellCol == 2){
							var emp_no = model1.getValue("/root/resData/gridData/record["+row+"]/emp_no");
							setInfoSearchInput(emp_no, "", "", "setEmp_no_pop"); // 사번, 성명, 주민번호
							if(model1.getValue("/root/tempData/totalcnt") != 1){
								return;
							} // 카운트
							var obj = htmldocument.SessionInfo;
			    	 			setProperty("ss_deptcd"   , obj.deptcd.value);
								//사번 직접 입력시 
			    	 			if(model1.getValue("/root/tempData/dept_cd").substring(0, 2) != obj.deptcd.value.substring(0, 2)){
			    	 				alert("다른 부서사원은 등록 하실 수 없습니다.");

							    	for(var i = 1; i < datagrid1.cols - 1; i++){
							    		datagrid1.valueMatrix(row, i) = "";
							    	}							    	
			    	 				return;
			    	 			}else{
								model1.setValue("/root/resData/gridData/record["+row+"]/emp_no", model1.getValue("/root/tempData/emp_no")); // 사번
								model1.setValue("/root/resData/gridData/record["+row+"]/nm_korn", model1.getValue("/root/tempData/nm_korn")); // 성명
								model1.setValue("/root/resData/gridData/record["+row+"]/dept_cd", model1.getValue("/root/tempData/dept_cd")); // 부서코드
								model1.setValue("/root/resData/gridData/record["+row+"]/dept_nm", model1.getValue("/root/tempData/dept_nm")); // 부서명
								model1.setValue("/root/resData/gridData/record["+row+"]/posi_cd", model1.getValue("/root/tempData/posi_cd")); // 직급코드
								model1.setValue("/root/resData/gridData/record["+row+"]/posi_nm", model1.getValue("/root/tempData/posi_nm")); // 직급명
			    	 			}
							model1.removenode("/root/tempData");
						}else if (cellCol == 3){
							var nm_korn = model1.getValue("/root/resData/gridData/record["+row+"]/nm_korn");
							setInfoSearchInput("", nm_korn, "", "setEmp_no_pop"); // 사번, 성명, 주민번호, 리턴함수
							if(model1.getValue("/root/tempData/totalcnt") != 1){
								return;
							} // 카운트
							var obj = htmldocument.SessionInfo;
			    	 			setProperty("ss_deptcd"   , obj.deptcd.value);
			    	 			if(model1.getValue("/root/tempData/dept_cd").substring(0, 2) != obj.deptcd.value.substring(0, 2)){
			    	 				alert("다른 부서사원은 등록 하실 수 없습니다.");

							    	for(var i = 1; i < datagrid1.cols - 1; i++){
							    		datagrid1.valueMatrix(row, i) = "";
							    	}							    	
			    	 				return;
			    	 			}else{
								model1.setValue("/root/resData/gridData/record["+row+"]/emp_no", model1.getValue("/root/tempData/emp_no")); // 사번
								model1.setValue("/root/resData/gridData/record["+row+"]/nm_korn", model1.getValue("/root/tempData/nm_korn")); // 성명
								model1.setValue("/root/resData/gridData/record["+row+"]/dept_cd", model1.getValue("/root/tempData/dept_cd")); // 부서코드
								model1.setValue("/root/resData/gridData/record["+row+"]/dept_nm", model1.getValue("/root/tempData/dept_nm")); // 부서명
								model1.setValue("/root/resData/gridData/record["+row+"]/posi_cd", model1.getValue("/root/tempData/posi_cd")); // 직급코드
								model1.setValue("/root/resData/gridData/record["+row+"]/posi_nm", model1.getValue("/root/tempData/posi_nm")); // 직급명
			    	 			}
							model1.removenode("/root/tempData");
						}
					}
					]]>
				</script>
				<script type="javascript" ev:event="onclick">
					<![CDATA[
					rowStatus(datagrid1);
					]]>
				</script>
			</datagrid>
			<button id="button6" class="btn_grid02" style="left:872px; top:5px; width:54px; height:17px; background-image:../../../images/btn_s_3.gif; ">
				<caption>행추가</caption>
				<script type="javascript" ev:event="onclick">
					<![CDATA[					
					var nodeList = root.selectNodes("/root/resData/gridData/record");
					var rowIdx = nodeList.length;
					
					if (datagrid1.rows == 2 && datagrid1.rowStatus(1) == 0 ) {
						if(dept_nm == ""){
							datagrid1.addStatus(1, "insert");
							datagrid1.isReadOnly(1, 1, 1, 12) = false;							
						}else {
							datagrid1.addRow(true, true);
						}
					} else {
						datagrid1.addRow(true, true);
					}
					]]>
				</script>
			</button>
			<caption id="caption8" style="left:120px; top:0px; width:660px; height:20px; font-size:9pt; color:#0000ff; ">1)휴무계획일에 v 를 해주시기 바랍니다.  2)주 단위로 결재신청을 해주시기 바랍니다.</caption>
		</group>
		<group id="group3" style="left:10px; top:90px; width:926px; height:30px; ">
			<caption id="caption3" class="list_cap01" style="left:0px; top:0px; width:90px; height:26px; text-align:center; ">부서</caption>
			<caption id="caption4" class="list_cap02" style="left:89px; top:0px; width:837px; height:26px; text-align:center; "/>
			<caption id="caption5" class="list_cap01" style="left:295px; top:0px; width:90px; height:26px; text-align:center; ">휴무계획일</caption>
			<caption id="caption6" class="list_cap01" style="left:593px; top:0px; width:90px; height:26px; text-align:center; ">진행상태</caption>
			<select1 id="combo1" ref="/root/reqData/searchData/proc_stat" appearance="minimal" style="left:686px; top:4px; width:100px; height:18px; ">
				<choices>
					<itemset nodeset="/root/initData/comboSet/proc_stat/item">
						<label ref="label"/>
						<value ref="value"/>
					</itemset>
				</choices>
			</select1>
			<select1 id="combo2" ref="/root/reqData/searchData/dept_cd" class="req" appearance="minimal" style="left:92px; top:4px; width:200px; height:18px; ">
				<choices>
					<itemset nodeset="/root/initData/comboSet/dept_cd/item">
						<label ref="label"/>
						<value ref="value"/>
					</itemset>
				</choices>
			</select1>
			<select1 id="combo3" ref="/root/reqData/searchData/plan_dt" class="req" appearance="minimal" style="left:388px; top:4px; width:202px; height:18px; ">
				<choices>
					<itemset nodeset="/root/initData/comboSet/plan_dt/item">
						<label ref="label"/>
						<value ref="value"/>
					</itemset>
				</choices>
				<script type="javascript" ev:event="xforms-select">
					<![CDATA[
					var temp = model1.getValue("/root/reqData/searchData/dept_cd");
					model1.setValue("/root/reqData/searchData/dept_cd", temp);
					//model1.send("hd_duty_1204");
					model1.send("hd_duty_1209");
					model1.setValue("/root/resData/resForm/emp_no", model1.getValue("/root/dataSet/CURLIST/record/emp_no"));
					model1.setValue("/root/resData/resForm/temp", model1.getValue("/root/dataSet/CURLIST/record/temp"));
					model1.setValue("/root/resData/resForm/temp_tm", model1.getValue("/root/dataSet/CURLIST/record/temp_tm"));
					var temp_tm = model1.getValue("/root/dataSet/CURLIST/record/temp_tm");
					model1.removenode("/root/dataSet/CURLIST/record/temp_tm");
					model1.removenode("/root/dataSet");
					var temp = datagrid1.rows;
					//for(var i=1; i< temp;  i++) {
					//	datagrid1.deleteRow(1);
					//}
					if(temp_tm == ""){
						alert("해당부서에 결재자가 없습니다.");
						output1.value = "";
						output2.value = "";
					}
				
					loadSearch();
					
					var nodeList = root.selectNodes("/root/resData/gridData/record");
					var rowIdx = nodeList.length;
					for(var i=1; i<rowIdx + 1; i++){
						var proc_stat = model1.getValue("/root/resData/gridData/record[" + (i) + "]/proc_stat");
						var duty_dt = model1.getValue("/root/resData/gridData/record[" + (i) + "]/duty_dt");
						var nm_korn = model1.getValue("/root/resData/gridData/record[" + (i) + "]/nm_korn");
						datagrid1.isReadOnly(i, 1, i, 12) = false;
						
						var pattern = ","+proc_stat+",";
						var validation  = (","+model1.getValue("/root/initData/hd_duty_1207_m/dataSet/xx_proc_stat_010")+",").indexOf(pattern)>-1;
						
						//진행상태가 14:현업결재, 25:인사결재, 29:현업전표등록 상태인 row는 readonly 시킴
						if(validation) {
							datagrid1.isReadOnly(i, 1, i, 12) = true;
						}else{
							datagrid1.isReadOnly(i, 1, i, 5) = true;
						}						
					}
					datagrid1.clearStatus();
					
					model1.refresh();
					var totcnt = datagrid1.rows;
					model1.setValue("/root/resData/totcnt", "총 " + Number(totcnt - 1) + " 건");
					model1.refresh();
					]]>
				</script>
			</select1>
		</group>
		<caption id="caption14" ref="/root/resData/totcnt" style="left:849px; top:700px; width:87px; height:20px; font-weight:bold; text-align:right; "/>
	</xhtml:body>
</xhtml:html>

<?xml version="1.0" encoding="EUC-KR"?>
<?xml-stylesheet type="text/css" href="../../../css/style_sheet.css" ?>
<xhtml:html xmlns:ex="http://www.comsquare.co.kr/xforms/excel" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:my="http://www.comsquare.co.kr/example" xmlns:ms="urn:schemas-microsoft-com:xslt" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/2002/01/xforms" xmlns:ev="http://www.w3.org/2001/xml-events" xmlns:cs="http://www.comsquare.co.kr/xforms">
	<xhtml:head>
		<xhtml:title/>
		<model id="model1">
			<instance id="instance1">
				<root xmlns="">
					<initData>
						<!-- 화면 로딩시의 초기 데이터 -->
						<session/>
						<!-- 서버의 세션 정보 -->
						<comboSet>
							<!-- 선택계열(콤보박스,체크박스,리스트박스,라디오버튼)의 정보 -->
							<fc_func_8036_m>
								<dataSet>
									<xx_cntr_clsf_cd_010/>
									<xx_leas_clsf_cd/>
								</dataSet>
							</fc_func_8036_m>
						</comboSet>
						<!-- 콤보리스트와 같은 선택게열의 데이터는 <item>을 반복함으로써 list를 구성한다. -->
						<pageInfo/>
						<!-- 해당 화면의 필요한 기타 정보들을 추가운영시 사용(화면ID등) -->
					</initData>
					<reqData>
						<!-- 서버에 전달하고자 하는 데이터 (submit시 처리) -->
						<fwdData>
						</fwdData>
						<!-- popup등의 페이지전환시 데이타 입출력에 사용 -->
						<searchData>
							<leas_no/>
							<leas_nm/>
							<!--<cntr_clsf_cd>2</cntr_clsf_cd>-->
							<cntr_clsf_cd></cntr_clsf_cd>
							<!--<leas_clsf_cd>5200</leas_clsf_cd>-->
							<leas_clsf_cd></leas_clsf_cd>
							<fc_func_8034_i/>
							<fc_func_8035_d/>
						</searchData>
						<!-- 검색조건 처리 -->
						<reqform/>
						<!-- 입력처리 formData 복수사용시 하위노드로 1,2,3으로 정의-->
						<multiUpDate/>
						<!-- Grid의 MultiUpDate유형 사용시 처리 -->
						<fc_func_8034_i/>
					</reqData>
					<resData>
						<!-- 서버로부터 전달 받은 데이터 (submit의 결과) -->
						<resform>
						</resform>
						<!-- (submit의 결과) formData 복수사용시 하위노드로 1,2,3으로 정의 -->
						<gridData>
							<fc_func_8031_l>
								<dataSet>
									<CURLIST1>
										<record>
											<cmpy_cd/>
											<cntr_clsf_cd/>
											<leas_clsf_cd/>
											<leas_no/>
											<leas_nm/>
											<frcr_amt/>
											<pay_plan_tms/>
											<leas_stat_cd/>
											<leas_stat_cdnm/>
											<pymt_cnt/>
											<leas_hire_clsf_cd/>
											<leas_hire_clsf_cdnm/>
											<pymt_plan/>
										</record>
									</CURLIST1>
									<CURLIST2>
										<record>
											<cmpy_cd/>
											<leas_clsf_cd/>
											<leas_no/>
											<pay_cost_clsf/>
											<hsty_seq/>
											<pymt_plan_dt/>
											<prv_pymt_plan_prcp/>
											<pymt_plan_prcp/>
											<pymt_plan_int/>
											<bal/>
											<pymt_yn/>
											<pay_cost_clsf_cdnm/>
											<slip_no/>
										</record>
									</CURLIST2>
								</dataSet>
							</fc_func_8031_l>
							<fc_func_8032_i>
								<dataSet/>
							</fc_func_8032_i>
							<fc_func_8033_d>
								<dataSet/>
							</fc_func_8033_d>
							<fc_func_8034_i>
								<dataSet/>
							</fc_func_8034_i>
							<fc_func_8035_d>
								<dataSet/>
							</fc_func_8035_d>
						</gridData>
						<!-- (submit의 결과) gridData 복수사용시 하위노드로 1,2,3으로 정의 -->
						<MsgData/>
						<!-- (submit의 결과) 전달 받은 MsgData -->
						<rcvData>
						</rcvData>
					</resData>
					<tempData>
						<!-- 데이터를 가공할 임시저장소 -->
						<!-- 해당화면의 키값등의 데이터의 저장소 -->
						<keyData/>
					</tempData>
					<!-- 저장소 -->
				</root>
			</instance>
			<script type="javascript" ev:event="xforms-model-construct-done">
				<![CDATA[
				//컨트롤 초기화
				init_controls();
				
				//콤보데이터 조회
				
				//datagrid 컬럼 재 설정
				set_column_visibility();
				]]>
			</script>
			<script type="javascript" ev:event="xforms-ready">
				<![CDATA[
					model.send("fc_func_8036_m");
					model1.setValue("/root/reqData/searchData/cntr_clsf_cd",model1.getValue("/root/initData/comboSet/fc_func_8036_m/dataSet/xx_cntr_clsf_cd_010"))
					model1.setValue("/root/reqData/searchData/leas_clsf_cd",model1.getValue("/root/initData/comboSet/fc_func_8036_m/dataSet/xx_leas_clsf_cd"))
					//alert(model1.getValue("/root/reqData/searchData/cntr_clsf_cd"));
					//alert(model1.getValue("/root/reqData/searchData/leas_clsf_cd"));
					model.refresh();
				]]>
			</script>
			<submission id="fc_func_8031_l" action="/fc/func8000/8031" mediatype="application/x-www-form-urlencoded" method="urlencoded-post" ref="/root/reqData/searchData" resultref="/root/resData/gridData/fc_func_8031_l/dataSet"/>
			<submission id="fc_func_8032_i" action="/fc/func8000/8032" mediatype="application/x-www-form-urlencoded" method="urlencoded-post" ref="/root/resData/gridData/fc_func_8031_l/dataSet/CURLIST1/record" resultref="/root/resData/gridData/fc_func_8032_i/dataSet"/>
			<submission id="fc_func_8033_d" action="/fc/func8000/8033" mediatype="application/x-www-form-urlencoded" method="urlencoded-post" ref="/root/resData/gridData/fc_func_8031_l/dataSet/CURLIST1/record" resultref="/root/resData/gridData/fc_func_8033_d/dataSet"/>
			<submission id="fc_func_8034_i" action="/fc/func8000/8034" mediatype="application/x-www-form-urlencoded" method="urlencoded-post" ref="/root/reqData/fc_func_8034_i" resultref="/root/resData/gridData/fc_func_8034_i/dataSet"/>
			<submission id="fc_func_8035_d" action="/fc/func8000/8035" mediatype="application/x-www-form-urlencoded" method="urlencoded-post" ref="/root/reqData/searchData/fc_func_8035_d" resultref="/root/resData/gridData/fc_func_8035_d/dataSet"/>
			<submission id="fc_func_8036_m" action="/fc/func8000/8036" mediatype="application/x-www-form-urlencoded" method="urlencoded-post" resultref="/root/initData/comboSet/fc_func_8036_m/dataSet"/>
		</model>
		<script type="javascript" src="../../../js/TFCommon.js"/>
		<script type="javascript" src="../../../js/CIISComm.js"/>
		<script type="javascript" src="../../../js/fcmc_common.js"/>
		<script type="javascript">
			<![CDATA[
			var	_oth_clsf = "1";
			
			//-------------------------------------------------------------------------------
			//	컨트롤의 기본 설정 적용 및 컨트롤 별 포맷 적용
			//-------------------------------------------------------------------------------
			function init_controls() {
				//control의 기본 설정 적용
				
				datagrid1.removeRow(false);
				
				//datagrid init
				set_default(
						"it was comment field"
					,	datagrid1						//설명
				);
				
				datagrid1.attribute("explorerbar") = "";
		
				//combo init
				set_default(
						"it was comment field"			
				);
				//input init
				set_default(
						"it was comment field"
					,	srch_leas_nm					//리스명
					,	leas_hire_clsf_cdnm				//임차구부명
					,	frcr_amt						//총리스료
					,	pymt_plan						//지불횟수
					,	leas_stat_cdnm					//현재상태
				);
				//input button init
				set_default(
						"it was comment field"
					,	srch_leas_no					//리스번호
				);
				//input date init
				set_default(
						"it was comment field"
				);

				//control format 설정 적용
				
				//코드
				set_format(
						"code"						//코드포맷,중간정렬,중간정렬
					,	datagrid1,	"1,2,4,5,12"			//회사코드,리스구분코드,지불비용구분,이력순번,유동성대체전표,상환여부
					,	leas_hire_clsf_cdnm				//임차구부명
					,	pymt_plan						//지불횟수
					,	leas_stat_cdnm					//현재상태
				);
				
				//금액
				set_format(
						"number5"						//숫자포맷,오른쪽정렬,중간정렬,(#,###)
					,	datagrid1,	"8,9,10,11"				//상환전원금,상환원금,이자,잔액
					,	frcr_amt						//총리스료
				);
				
				//날짜
				set_format(
						"date_1"						//날짜포맷,중간정렬,중간정렬,yyyy-mm-dd
					,	datagrid1,	"7"					//상환예정일
				);
				
				//문자열(왼쪽)
				set_format(
						"string_l"						//문자열,왼쪽정렬,중간정렬
					,	datagrid1,	"5"					//지불비용구분명
				);
			}
			
			//-------------------------------------------------------------------------------
			//	datagrid의 컬럼 설정
			//-------------------------------------------------------------------------------
			function set_column_visibility() {
				//모든 컬럼을 감춘다.
				hide_all_columns(datagrid1);
				//공통항목을 보여준다.
				show_columns(datagrid1,"7,8,9,10,11,12,13");
				
				//모든 컬럼을 disable
				disable_all_columns(datagrid1);
				//공통항목을 enable
				enable_columns(datagrid1,"pymt_plan_dt,pymt_plan_prcp,pymt_plan_int,bal");

				//상환여부가 Y이거나 전표번호가 존재하면 해당 row는 수정불가상태로 변경해야함
				for (var i = datagrid1.fixedRows; i < datagrid1.rows;i++) {
					if (datagrid1.valueMatrix(i,datagrid1.colRef("slip_no")).Trim() != "" || datagrid1.valueMatrix(i,datagrid1.colRef("pymt_yn")).Trim() == "Y") {
						datagrid1.isReadOnly(i,datagrid1.fixedCols,i,datagrid1.cols-1) = true;
					}
				}
			}
			
			//-------------------------------------------------------------------------------
			//	조회 값 체크
			//	p_siud		"s","i","u","d"로 호출하는 동작을 명세한다.
			//-------------------------------------------------------------------------------			
			function check_search_values(p_siud) {
				//필수항목체크(검색)
				if(!commReqCheck(group_searches)) {
					return false;
				}
				
				//조회,입력,수정,삭제에 따라 입력값 검증 처리
				switch (p_siud.toUpperCase()) {
					case "S":
						//조회시
						
						break;
					case "I":
						//입력시
						
						break;
					case "I2":
						//대체처리
						var stat = get_refvalue("/root/resData/gridData/fc_func_8031_l/dataSet/CURLIST1/record/leas_stat_cd");
						if (stat != 1) {
							show_message("종결된 자료입니다.");
							return false;
						}
						break;
					case "U":
						//수정시
						
						break;
					case "D":
						//삭제시
						
						break;
					case "D2":
						//대체취소
						
						break;
					default:
						show_message("key 값 확인을 위한 구분자가 지정되지 않았습니다.");
						break;
				}
				
				return true;
			}
			
			//-------------------------------------------------------------------------------
			//	입력값 체크
			//	p_siud		"s","i","u","d"로 호출하는 동작을 명세한다.
			//-------------------------------------------------------------------------------
			function check_input_values(p_siud) {
				var cancle_flag = false;
				//필수항목체크(내용)
				if (!commReqCheck(group_contents)) {
					return false;
				}
				
				//선택적필수항목체크
				
				//유효성체크

				//조회,입력,수정,삭제에 따라 입력값 검증 처리
				switch (p_siud.toUpperCase()) {
					case "S":
						//조회시
						
						break;
					case "I":
						//입력시
						//상환예정일,상환원금,상환이자,잔액이 모두 입력되지 않은 경우 작업대상에서 제외
						del_datagrid_reqdata_empty(datagrid1,"pymt_plan_dt,pymt_plan_prcp,pymt_plan_int,bal");					
						break;
					case "I2":
						//입력시
						cancle_flag = true;
						var curr_date = commCurDate("ymd");
						var curr_yyyy = addDate("m", 12, curr_date, "").substr(0,4);

						if (datagrid1.valueMatrix(datagrid1.row,datagrid1.colRef("pymt_plan_dt")).substr(0,4) != curr_yyyy) {
							show_message("선택오류...(다음년도)");
							return false;
						}
						
						for(var i = datagrid1.fixedRows;i < datagrid1.rows;i++) {
							var grid_yyyy = datagrid1.valueMatrix(i,datagrid1.colRef("pymt_plan_dt")).substr(0,4);
							var grid_slip_no = datagrid1.valueMatrix(i,datagrid1.colRef("slip_no"));
							var grid_pymt_yn = datagrid1.valueMatrix(i,datagrid1.colRef("pymt_yn"));
							var grid_state = datagrid1.rowStatus(i);
							
							if (grid_state == DATAGRID_ROWSTATUS_INSERT) {
								continue;
							}
										
							if (grid_yyyy == curr_yyyy && grid_slip_no.length > 0) {
								show_message("선택한 년도에 대체처리한 건이 존재합니다.");
								return false;
							}
							
							if (grid_yyyy == curr_yyyy && grid_pymt_yn == "Y") {
								show_message("선택한 년도에 이미 리스료불입한 건이 존재합니다.");
								return false;
							}
						}
						break;
					case "U":
						//수정시
						//상환예정일,상환원금,상환이자,잔액이 모두 입력되지 않은 경우 작업대상에서 제외
						del_datagrid_reqdata_empty(datagrid1,"pymt_plan_dt,pymt_plan_prcp,pymt_plan_int,bal");	
						break;
					case "D":
						//삭제시
						del_datagrid_reqdata_empty(datagrid1,"pay_cost_clsf,hsty_seq,pymt_plan_dt");	
						break;
					case "D2":
						//삭제시
						cancle_flag = true;
						var curr_date = commCurDate("ymd");
						var curr_yyyy = addDate("m", 12, curr_date, "").substr(0,4);

						if (datagrid1.valueMatrix(datagrid1.row,datagrid1.colRef("pymt_plan_dt")).substr(0,4) != curr_yyyy) {
							show_message("선택오류...(다음년도)");
							return false;
						}
						
						for(var i = datagrid1.fixedRows;i < datagrid1.rows;i++) {
							var grid_date = datagrid1.valueMatrix(i,datagrid1.colRef("pymt_plan_dt"));
							var grid_yyyy = datagrid1.valueMatrix(i,datagrid1.colRef("pymt_plan_dt")).substr(0,4);
							var grid_slip_no = datagrid1.valueMatrix(i,datagrid1.colRef("slip_no"));
							var grid_pymt_yn = datagrid1.valueMatrix(i,datagrid1.colRef("pymt_yn"));
							var grid_state = datagrid1.rowStatus(i);
							
							if (grid_state == DATAGRID_ROWSTATUS_INSERT) {
								continue;
							}
										
							if (grid_yyyy == curr_yyyy && grid_slip_no.length == 0) {
								show_message("선택한 년도는 대체처리한 건이 아닙니다.");
								return false;
							}
							
							if (grid_yyyy == curr_yyyy && grid_date != curr_date) {
								show_message("금일 전표등록 건이 아니므로 취소대상이 아닙니다.");
								return false;
							}
														
							if (grid_yyyy == curr_yyyy && grid_pymt_yn == "Y") {
								show_message("선택한 년도에 이미 리스료불입한 건이 존재합니다.");
								return false;
							}
						}	
						break;
					default:
						show_message("key 값 확인을 위한 구분자가 지정되지 않았습니다.");
						break;
				}
				
				if (!cancle_flag) {
					//필수항목체크(grid);
					if(!commGridReqCheck("datagrid1")) {
						return false;
					}
				}
				return true;
			}
			
			//-------------------------------------------------------------------------------
			//	키값 체크
			//	p_siud		"s","i","u","d"로 호출하는 동작을 명세한다.
			//-------------------------------------------------------------------------------
			function check_key_values(p_siud) {
				//키값의 변경 여부
				var key_flag = false;
				//키값 변경 여부에 따른 메시지
				var key_msg = "";				
				
				//submission 이름 지정 및 관련 변수 설정
				var subid1 = "fc_func_8031_l";
				var subref1 = eval(subid1).attribute("ref");
				var subresultref1 = eval(subid1).attribute("resultref");
				var subid2 = "fc_func_8032_i";
				var subref2 = eval(subid2).attribute("ref");
				var subresultref2 = eval(subid2).attribute("resultref");
				
				//체크할 키 값들의 이전 값을 instance나 control에서 가져온다.
				var prev_leas_no		=	get_refvalue(subresultref1 + "/CURLIST1/record/leas_no");
				
				//체크할 키 값들의 현재 값을  instance나 control에서 가져온다.
				var curr_leas_no		=	get_refvalue(srch_leas_no);
								
				//이전 키값과 현재 조회창에 입력된 값을 비교하여 키값의 변경 여부를 확인				
				if (
						prev_leas_no	==	curr_leas_no
				) {					
					//키값이 변경되지 않은 경우
					key_flag = true;
				}
				else {
					//키값이 변경 된 경우
					key_flag = false;
				}
				
				//조회,입력,수정,삭제에 따라 키 값의 변경에 따른 처리
				switch (p_siud.toUpperCase()) {
					case "S":
						//조회시
						
						break;
					case "I":
						//입력시						
						if (!check_reqItem(subresultref1 + "/CURLIST1/record/cmpy_cd","trim","none","조회되지 않은 데이터입니다. 조회 후 저장하세요.")) {return false;}
						key_msg = "Key 값이 변경되었습니다. 조회 후 저장하세요.";
						break;
					case "I2":
						//입력시						
						if (!check_reqItem(subresultref1 + "/CURLIST1/record/cmpy_cd","trim","none","조회되지 않은 데이터입니다. 조회 후 대체처리 하세요.")) {return false;}
						key_msg = "Key 값이 변경되었습니다. 조회 후 대체처리 하세요.";
						break;
					case "U":
						//수정시
						if (!check_reqItem(subresultref1 + "/CURLIST1/record/cmpy_cd","trim","none","조회되지 않은 데이터입니다. 조회 후 수정하세요.")) {return false;}
						key_msg = "Key 값이 변경되었습니다. 조회 후 수정하세요.";
						break;
					case "D":
						//삭제시
						if (!check_reqItem(subresultref1 + "/CURLIST1/record/cmpy_cd","trim","none","조회되지 않은 데이터입니다. 조회 후 삭제하세요.")) {return false;}
						key_msg = "Key 값이 변경되었습니다. 조회 후 삭제하세요.";
						break;
					case "D2":
						//삭제시
						if (!check_reqItem(subresultref1 + "/CURLIST1/record/cmpy_cd","trim","none","조회되지 않은 데이터입니다. 조회 후 대체취소 하세요.")) {return false;}
						key_msg = "Key 값이 변경되었습니다. 조회 후 대체취소 하세요.";
						break;
					default:
						show_message("key 값 확인을 위한 구분자가 지정되지 않았습니다.");
						break;
				}

				//키 값이 변경되었을 경우 메시지를 보여준다.
				if (!key_flag) check_reqItem("","none","none",key_msg);	
				
				//키 값의 변경 여부를 반환
				return key_flag;
			}
			
			//-------------------------------------------------------------------------------
			//	모델 리셋
			//-------------------------------------------------------------------------------
			function reset_model(p_save) {
				//p_save가 true인 경우 기존 값을 백업하고 다시 복원시킨다.

				//데이터 백업
				var temp_srch_leas_no = get_refvalue(srch_leas_no);
				var temp_srch_leas_nm = get_refvalue(srch_leas_nm);
				
				//모델 리셋
				model.reset();
				
				//데이터 복원
				if (p_save) {
					set_refvalue(srch_leas_no,temp_srch_leas_no);
					set_refvalue(srch_leas_nm,temp_srch_leas_nm);
				}
				
				//데이터 복원 후 필요한 추가 작업
			}
			
			//-------------------------------------------------------------------------------
			//	리스번호 조회 팝업 처리
			//-------------------------------------------------------------------------------
			function open_fc_co_1060(p_where,p_mode,p_title,p_readonly,p_to) {
				//팝업창을 열어야 할 지 여부 저장 변수
				var need_popup = true;
				//팝업에서 데이터가 전달되었는지 여부 저장 변수
				var rcvs_flag = false;
				
				p_where = p_where.toUpperCase();
				
				var popid = "fc_co_1060";

				set_popup_send_data(popid		,"mode"			,p_mode			);
				set_popup_send_data(popid		,"title"			,p_title			);
				set_popup_send_data(popid		,"readonly"		,p_readonly		);
				
				//조회할 데이터를 저장하는 코드
				//이부분은 호출하는 폼 마다 변경 될 수 있다.
				//현재 폼에서는 두가지 종류의 리스번호를 하나의 팝업으로 처리하므로 호출 시점에 따라서
				//조회할 데이터 설정이 변경되어야 한다.
				
				if (p_to == "A") {
					//조회용 리스번호 조회시
					set_popup_send_data(popid,"cntr_clsf_cd"	,get_refvalue("/root/reqData/searchData/cntr_clsf_cd"));
					set_popup_send_data(popid,"leas_no",get_refvalue(srch_leas_no));
				}
				
				//그외 버튼인 경우는 계속 진행
				if (need_popup) {
					rcvs_flag = open_popup(popid,"640");
				}
				
				//조회된 데이터를 저장하는 코드
				//이부분은 호출하는 폼 마다 변경 될 수 있다.
				//현재 폼에서는 두가지 종류의 리스번호를 하나의 팝업으로 처리하므로 호출 시점에 따라서
				//데이터의 입력 위치가 바뀌어야 한다.
				
				if (p_to == "A") {
					//조회용 리스번호 조회시

					//반드시 입력되어야 하는 필수 항목의 경우 검색결과가 공백이 아닌 경우만 반영해서
					//다시 조회 하기 쉽도록 하고
					if (get_popup_rcvs_data(popid,"cntr_clsf_cd") != "") {
						set_refvalue("/root/reqData/searchData/cntr_clsf_cd",get_popup_rcvs_data(popid,"cntr_clsf_cd1"));
					}
					if (get_popup_rcvs_data(popid,"leas_no") != "") {
						set_refvalue(srch_leas_no,get_popup_rcvs_data(popid,"leas_no"));
					}
					//그외의 값은 지워지도록 한다.
					set_refvalue(srch_leas_nm,get_popup_rcvs_data(popid,"leas_nm"));
				}
				//조회를 위해 설정했던 데이터들을 삭제한다.
				reset_popup_send_data(popid);
				//팝업에서 데이터가 정상적으로 전달되었는지 여부를 반환한다.
				return rcvs_flag;
			}
			
			//-------------------------------------------------------------------------------
			//	상환계획등록 조회 준비
			//-------------------------------------------------------------------------------
			function prepare_fc_func_8031_l() {
				if(!check_search_values("s")) {
					return false;
				}
				
				return true;
			}
			
			//-------------------------------------------------------------------------------
			//	상환계획등록 조회
			//-------------------------------------------------------------------------------
			function send_fc_func_8031_l() {
				//조건에 문제가 없다면 처리
//				reset_model(true);	//재조회시 추가 행추가 방지를 위해 리셋후 조회
				if (!prepare_fc_func_8031_l()) {
					return false;
				}

				//submission 이름 지정 및 관련 변수 설정
				var subid1 = "fc_func_8031_l";
				var subref1 = eval(subid1).attribute("ref");
				var subresultref1 = eval(subid1).attribute("resultref");
				var totalcnt = 0;
				
				//grid control style 초기화
				datagrid1.rebuildStyle();
				
				//입력값 설정
								
				//실행
				model.send(subid1);
				
				//조회 건수 확인
				totalcnt = get_refvalue(subresultref1 + "/CURLIST1/totalcnt");
				
				//조회가 0건인 경우 초기화 시키고 메시지 출력
				if (totalcnt == 0 && check_submit_completed()) {
					reset_model(true);
					show_message("검색결과가 없습니다.");
					return false;
				}
				
				//조회가 되었을 경우 횟수/계획 문자열을 생성한다.
				var pymt_plan_str = get_refvalue(subresultref1 + "/CURLIST1/record/pymt_cnt") + " / " + get_refvalue(subresultref1 + "/CURLIST1/record/pay_plan_tms");
				set_refvalue(pymt_plan,pymt_plan_str);
				
				//상환계획등록 입력용 빈 줄 추가
				totalcnt = get_refvalue(subresultref1 + "/CURLIST2/totalcnt");
				
				for (var i = 0; i < 20; i++) {
					datagrid1.addRow(false);
				}
				//row추가 후 컬럼 재설정
				set_column_visibility();
			}
			
			function recalc_prv_pymt_plan_prcp(p_rowid) {
				var col_pymt_plan_prcp = datagrid1.colRef("pymt_plan_prcp");
				var col_bal = datagrid1.colRef("bal");
				var col_prv_pymt_plan_prcp = datagrid1.colRef("prv_pymt_plan_prcp");
				var prv_pymt_plan_prcp = 0;
				
				prv_pymt_plan_prcp = prv_pymt_plan_prcp + Number(datagrid1.valueMatrix(p_rowid,col_pymt_plan_prcp));
				prv_pymt_plan_prcp = prv_pymt_plan_prcp + Number(datagrid1.valueMatrix(p_rowid,col_bal));
				datagrid1.valueMatrix(p_rowid,col_prv_pymt_plan_prcp) = prv_pymt_plan_prcp;
			}
			
			function prepare_fc_func_8032_i() {
				if (!check_key_values("i")) {
					return false;
				}
				
				if(!check_search_values("i")) {
					return false;
				}

				if(!check_input_values("i")) {
					return false;
				}
				
				return true;
			}
				
			function send_fc_func_8032_i() {
				//조건에 문제가 없다면 처리
				if (!prepare_fc_func_8032_i()) {
					add_datagrid_reqdata_empty(datagrid1,"pymt_plan_dt,pymt_plan_prcp,pymt_plan_int,bal");
					return false;
				}
				
				if (!datagrid_data_check(datagrid1)) {
					show_message("저장할 자료가 없습니다.");
					add_datagrid_reqdata_empty(datagrid1,"pymt_plan_dt,pymt_plan_prcp,pymt_plan_int,bal");
					return false;
				}
				
				if (show_message("저장하시겠습니까?","저장 확인",MB_YESNO) != IDYES) {
					add_datagrid_reqdata_empty(datagrid1,"pymt_plan_dt,pymt_plan_prcp,pymt_plan_int,bal");
					return false;
				}

				//submission 이름 지정 및 관련 변수 설정
				var subid1 = "fc_func_8032_i";
				var subref1 = eval(subid1).attribute("ref");
				var subresultref1 = eval(subid1).attribute("resultref");
				var totalcnt = 0;
				
				//입력값 설정
				model.makeValue(subref1 + "/multiUpdateData",datagrid1.getUpdateData());

				//실행
				model.send(subid1);
				
				return check_submit_completed("저장되었습니다.","");
			}
			
			function prepare_fc_func_8033_d() {
				if (!check_key_values("d")) {
					return false;
				}

				if (!check_search_values("d")) {
					return false;
				}

				if(!check_input_values("d")) {
					return false;
				}
			
				return true;
			}
			
			function send_fc_func_8033_d() {
				//조건에 문제가 없다면 처리
				if (!prepare_fc_func_8033_d()) {
					add_datagrid_reqdata_empty(datagrid1,"pay_cost_clsf,hsty_seq,pymt_plan_dt");	
					return false;
				}
				
				if (!datagrid_data_check(datagrid1)) {
					show_message("삭제할 자료가 없습니다.");
					add_datagrid_reqdata_empty(datagrid1,"pay_cost_clsf,hsty_seq,pymt_plan_dt");	
					return false;
				}

				if (show_message("삭제하시겠습니까?","삭제 확인",MB_YESNO) != IDYES) {
					add_datagrid_reqdata_empty(datagrid1,"pay_cost_clsf,hsty_seq,pymt_plan_dt");	
					return false;
				}

				//submission 이름 지정 및 관련 변수 설정
				var subid1 = "fc_func_8033_d";
				var subref1 = eval(subid1).attribute("ref");
				var subresultref1 = eval(subid1).attribute("resultref");
				var totalcnt = 0;
				
				//입력값 설정
				model.makeValue(subref1 + "/multiUpdateData",datagrid1.getUpdateData("delete"));

				//실행
				model.send(subid1);
				
				return check_submit_completed("삭제되었습니다.","");
			}
			
			function prepare_fc_func_8034_i() {
				if (!check_key_values("i2")) {
					return false;
				}
				
				if(!check_search_values("i2")) {
					return false;
				}

				if(!check_input_values("i2")) {
					return false;
				}
				
				return true;
			}
				
			function send_fc_func_8034_i() {
				if (datagrid1.row < datagrid1.fixedRows && datagrid1.col < datagrid1.fixedCols) {
					show_message("대체처리할 ROW를 선택하세요.");
					return false;
				}

				if (datagrid1.rowStatus(datagrid1.row) == DATAGRID_ROWSTATUS_INSERT) {
					show_message("저장되지 않은 자료(ROW)는 대체처리 할 수 없습니다.");
					return false;
				}	
				
				//조건에 문제가 없다면 처리
				if (!prepare_fc_func_8034_i()) {
					return false;
				}
				
				if (show_message("대체처리하시겠습니까?","유동성대체처리 확인",MB_YESNO) != IDYES) {
					return false;
				}

				//submission 이름 지정 및 관련 변수 설정
				var subid1 = "fc_func_8034_i";
				var subref1 = eval(subid1).attribute("ref");
				var subresultref1 = eval(subid1).attribute("resultref");
				var totalcnt = 0;
				
				//입력값 설정
				var curr_date = commCurDate("ymd");
				var curr_yyyy = addDate("m", 12, curr_date, "").substr(0,4);
				var pymt_plan_prcp_tot = 0;
				
				for(var i = datagrid1.fixedRows;i < datagrid1.rows;i++) {
					var grid_yyyy = datagrid1.valueMatrix(i,datagrid1.colRef("pymt_plan_dt")).substr(0,4);
					var grid_state = datagrid1.rowStatus(i);
					var grid_pymt_plan_prcp = var_to_number(datagrid1.valueMatrix(i,datagrid1.colRef("pymt_plan_prcp")),0);
					
					if (grid_state == DATAGRID_ROWSTATUS_INSERT) {
						continue;
					}
					
					if (grid_yyyy == curr_yyyy) {
						pymt_plan_prcp_tot += grid_pymt_plan_prcp;
					}
				}
				set_refvalue(subref1 + "/" + "flu_altn_amt",pymt_plan_prcp_tot);
				set_refvalue(subref1 + "/" + "leas_clsf_cd",get_refvalue("/root/reqData/searchData/leas_clsf_cd"));
				set_refvalue(subref1 + "/" + "leas_no",srch_leas_no.value);
				set_refvalue(subref1 + "/" + "leas_nm",srch_leas_nm.value);
				set_refvalue(subref1 + "/" + "flu_altn_dt",curr_date);
				set_refvalue(subref1 + "/" + "comp_dt",curr_yyyy + "0101");
				set_refvalue(subref1 + "/" + "mtry_dt",curr_yyyy + "1231");
				set_refvalue(subref1 + "/" + "use_dept_cd",getProperty("ss_emp_no"));

				//실행
				model.send(subid1);
				
				return check_submit_completed("저장되었습니다.","");
			}
			
			function prepare_fc_func_8035_d() {
				if (!check_key_values("d2")) {
					return false;
				}

				if (!check_search_values("d2")) {
					return false;
				}

				if(!check_input_values("d2")) {
					return false;
				}
			
				return true;
			}
			
			function send_fc_func_8035_d() {
				if (datagrid1.row < datagrid1.fixedRows && datagrid1.col < datagrid1.fixedCols) {
					show_message("대체취소할 ROW를 선택하세요.");
				}

				if (datagrid1.rowStatus(datagrid1.row) == DATAGRID_ROWSTATUS_INSERT) {
					show_message("저장되지 않은 자료(ROW)는 대체처리 할 수 없습니다.");
					return false;
				}	
								
				//조건에 문제가 없다면 처리
				if (!prepare_fc_func_8035_d()) {
					return false;
				}

				if (show_message("대체취소하시겠습니까?","유동성대체취소 확인",MB_YESNO) != IDYES) {
					return false;
				}

				//submission 이름 지정 및 관련 변수 설정
				var subid1 = "fc_func_8035_d";
				var subref1 = eval(subid1).attribute("ref");
				var subresultref1 = eval(subid1).attribute("resultref");
				var totalcnt = 0;
				
				//입력값 설정
				//입력값 설정
				var curr_date = commCurDate("ymd");
				var curr_yyyy = addDate("m", 12, curr_date, "").substr(0,4);
				set_refvalue(subref1 + "/" + "leas_clsf_cd",get_refvalue("/root/reqData/searchData/leas_clsf_cd"));
				set_refvalue(subref1 + "/" + "leas_no",srch_leas_no.value);
				set_refvalue(subref1 + "/" + "comp_dt",curr_yyyy + "0101");
				set_refvalue(subref1 + "/" + "mtry_dt",curr_yyyy + "1231");
				var slip_no = datagrid1.valueMatrix(datagrid1.row,datagrid1.col);
           			set_refvalue(subref1 + "/" + "flu_altn_slip_occr_dt",slip_no.substr(0,8));
           			set_refvalue(subref1 + "/" + "flu_altn_slip_clsf_cd",slip_no.substr(9,2));
           			set_refvalue(subref1 + "/" + "flu_altn_slip_seq",slip_no.substr(12,3));

				//실행
				model.send(subid1);
				
				return check_submit_completed("삭제되었습니다.","");
			}
			]]>
		</script>
	</xhtml:head>
	<xhtml:body class="main" pagewidth="946" pageheight="765" guideline="2,50;1,936;1,10;2,5;2,736;2,90;2,105;2,721;">
		<group id="grp_buttons" class="gro_sel" style="left:10px; top:734px; width:926px; height:21px; ">
			<button id="btnReset" class="btn02" navindex="45" style="left:165px; top:0px; width:52px; height:21px; ">
				<caption>초기화</caption>
				<script type="javascript" ev:event="onclick">
					<![CDATA[
					reset_model(false);
					]]>
				</script>
			</button>
			<button id="btn_save" class="btn02" navindex="42" crud="C" style="left:55px; top:0px; ">
				<caption>저장</caption>
				<script type="javascript" ev:event="onclick">
					<![CDATA[
					if (send_fc_func_8032_i()) btn_select.dispatch("onclick");
					]]>
				</script>
			</button>
			<button id="btn_delete" class="btn02" navindex="44" crud="D" style="left:110px; top:0px; width:52px; height:21px; ">
				<caption>삭제</caption>
				<script type="javascript" ev:event="onclick">
					<![CDATA[
					if (send_fc_func_8033_d()) btn_select.dispatch("onclick");
					]]>
				</script>
			</button>
			<button id="btnClose" class="btn02" navindex="47" style="left:570px; top:0px; width:52px; height:21px; ">
				<caption>종료</caption>
				<script type="javascript" ev:event="onclick">
					<![CDATA[
					formClose();		
					]]>
				</script>
			</button>
			<button id="btn_select" class="btn02" navindex="41" crud="R" style="left:0px; top:0px; ">
				<caption>조회</caption>
				<script type="javascript" ev:event="onclick">
					<![CDATA[
					send_fc_func_8031_l();
					]]>
				</script>
			</button>
			<button id="btn_help" class="btn02" navindex="46" crud="R" style="left:515px; top:0px; width:52px; height:21px; ">
				<caption>엑셀</caption>
				<script type="javascript" ev:event="onclick">
					<![CDATA[
					var grid = null;
					
					if(_oth_clsf == "1"){			
						grid = datagrid1;
					}
					
					var filename = window.fileDialog("save", ",", false, "", "xls", "Excel File(*.xls)|*.xls");
					if(filename!=""){
						grid.saveExcel(filename, "sheetname: ");
					}
					]]>
				</script>
			</button>
			<button id="button1" class="btn04" navindex="46" crud="R" style="left:220px; top:0px; ">
				<caption>유동성대체</caption>
				<script type="javascript" ev:event="onclick">
					<![CDATA[
					if (send_fc_func_8034_i()) btn_select.dispatch("onclick");
					]]>
				</script>
			</button>
			<button id="button2" class="btn03" navindex="46" crud="R" style="left:311px; top:0px; ">
				<caption>전표출력</caption>
				<script type="javascript" ev:event="onclick">
					<![CDATA[
					if ((datagrid1.col <= datagrid1.cols) && (datagrid1.col >= datagrid1.fixedCols)){
						var ch_no = get_refvalue("/root/resData/gridData/fc_func_8031_l/dataSet/CURLIST2/record["+datagrid1.row+"]/slip_no");
						if(ch_no == ""){
							show_message("전표번호가 없습니다.");
							return false;
						}
						// 글로벌변수 셋팅
						if(ch_no.length == 13){
						model.property("FC_ACCT_2260_slip_occr_dt")  = ch_no.substring(0, 8);			// 발생일자
						model.property("FC_ACCT_2260_slip_clsf_cd")  = ch_no.substring(8, 10);			// 전표구분
						model.property("FC_ACCT_2260_slip_seqfr") = ch_no.substring(10, 13);			// 일련번호 from
						model.property("FC_ACCT_2260_slip_seqto") = ch_no.substring(10, 13);			// 일련번호 to
						model.property("FC_ACCT_2260_slip_radio1") = "";			// 출력구분
						model.property("FC_ACCT_2260_popup_flag")  = "Y";
					}else{
						model.property("FC_ACCT_2260_slip_occr_dt")  = ch_no.substring(0, 8);			// 발생일자
						model.property("FC_ACCT_2260_slip_clsf_cd")  = ch_no.substring(9, 11);			// 전표구분
						model.property("FC_ACCT_2260_slip_seqfr") = ch_no.substring(12, 15);			// 일련번호 from
						model.property("FC_ACCT_2260_slip_seqto") = ch_no.substring(12, 15);			// 일련번호 to
						model.property("FC_ACCT_2260_slip_radio1") = "";			// 출력구분
						model.property("FC_ACCT_2260_popup_flag")  = "Y";
					};
						
						// 화면호출
						//viewer("mainFrame").window.javaScript.onLoadPopupPageEx("FC_ACCT_2260", "modal", "align:center; caption:hidden; width:650px; height:480px;");
						viewer("mainFrame").window.javaScript.onLoadExMDIPage("FC_ACCT_2260");	
					}
					]]>
				</script>
				<script type="javascript" ev:event="onclick">
					<![CDATA[
					
					]]>
				</script>
			</button>
			<button id="button3" class="btn03" navindex="46" crud="R" style="left:379px; top:0px; width:65px; height:21px; ">
				<caption>대체취소</caption>
				<script type="javascript" ev:event="onclick">
					<![CDATA[
					if (send_fc_func_8035_d()) btn_select.dispatch("onclick");
					]]>
				</script>
			</button>
			<button id="button4" class="btn03" navindex="46" crud="R" style="left:447px; top:0px; width:65px; height:21px; ">
				<caption>변경처리</caption>
				<script type="javascript" ev:event="onclick">
					<![CDATA[
					
					]]>
				</script>
			</button>
		</group>
		<group id="group_line" class="gro_line" style="left:10px; top:115px; width:926px; height:5px; "/>
		<import id="iv_Title" src="../../../common/xrw/iv_TitleBar.xrw" style="left:10px; top:5px; width:926px; height:29px; "/>
		<group id="group_contents" class="gro_sel" style="left:10px; top:130px; width:926px; height:591px; border-color:#00ccff; ">
			<datagrid id="datagrid1" nodeset="/root/resData/gridData/fc_func_8031_l/dataSet/CURLIST2/record" caption="회사코드^리스구분코드^리스번호^지불비용구분^지불비용구분명^이력순번^상환예정일^상환전 원금^상환원금^상환이자^잔액^유동성대체전표^상환여부" colsep="^" colwidth="100, 100, 100, 100, 100, 100, 100, 120, 120, 120, 120, 120, 55" mergecellsfixedrows="bycolrec" rowheader="update" rowsep="|" style="left:0px; top:0px; width:926px; height:591px; ">
				<col ref="cmpy_cd" caption="회사코드"/>
				<col ref="leas_clsf_cd" caption="리스구분코드"/>
				<col ref="leas_no" caption="리스번호"/>
				<col ref="pay_cost_clsf" caption="지불비용구분코드"/>
				<col ref="pay_cost_clsf_cdnm" caption="지불비용구분명"/>
				<col ref="hsty_seq" caption="이력순번"/>
				<col class="req" ref="pymt_plan_dt" type="inputdate" caption="상환예정일"/>
				<col disabled="true" ref="prv_pymt_plan_prcp" type="input" maxlength="17" caption="상환전 원금"/>
				<col class="req" ref="pymt_plan_prcp" type="input" maxlength="17" caption="상환원금"/>
				<col class="req" ref="pymt_plan_int" type="input" maxlength="17" caption="상환이자"/>
				<col class="req" ref="bal" type="input" maxlength="17" caption="잔액"/>
				<col ref="slip_no" type="input" caption="유동성대체전표"/>
				<col checkvalue="Y,N" ref="pymt_yn" type="checkbox" caption="상환여부"/>
				<script type="javascript" ev:event="xforms-value-changed">
					<![CDATA[
//					alert("value change");
					var rowid = datagrid1.row;
					var col_pymt_plan_prcp = datagrid1.colRef("pymt_plan_prcp");
					var col_bal = datagrid1.colRef("bal");
					var col_pymt_plan_dt = datagrid1.colRef("pymt_plan_dt");
					var col_cmpy_cd = datagrid1.colRef("cmpy_cd");
					
					switch(datagrid1.col) {
						case col_pymt_plan_prcp:
							//상환원금 수정시
						case col_bal:
							//상환잔액 수정시
							recalc_prv_pymt_plan_prcp(rowid);
							break;
						case col_pymt_plan_dt:
							var flag = check_datagrid_data_sequence(datagrid1,col_pymt_plan_dt,rowid);

							if (flag[0] > 0 && flag[1] > 0) {
								show_message("이전 회차보다 상환일이 작거나 다음회차보다 상환일이 큰 자료가 있습니다.","상환일자 지정 오류");
							}
							else if(flag[0] > 0) {
								//이후 상환일보다 큰 경우
								show_message("이전 회차보다 상환일이 작은 자료가 있습니다.","상환일자 지정 오류");
							}
							else if(flag[1] > 0) {
								//이후 상환일보다 큰 경우
								show_message("다음 회차보다 상환일이 큰 자료가 있습니다.","상환일자 지정 오류");
							}
							break;
						default:
							break;
					}
					
					if (datagrid1.valueMatrix(rowid,col_cmpy_cd).Trim() == "") {
						if (datagrid1.rowStatus(rowid) == DATAGRID_ROWSTATUS_UPDATE) {
							datagrid1.rowStatus(rowid) = DATAGRID_ROWSTATUS_INSERT;
						}
					}
					]]>
				</script>
				<script type="javascript" ev:event="onclick">
					<![CDATA[
					var row = datagrid1.row;
					var col = datagrid1.col;
//					alert("onclick");
					if (col == 0) {
						//조회되어진 데이터(사용자 입력은 제외)중에서 삭제 가능한 대상만 찾아서 한 번 클릭시 삭제 상태로 바꾸고
						//삭제 상태라면 다시 원래 상태로 돌린다. 원래상태는 "U" 만 가능하다...
						if (datagrid1.rowStatus(row) == DATAGRID_ROWSTATUS_DELETE) {
							
							datagrid1.rowStatus(row) = DATAGRID_ROWSTATUS_UPDATE;
						}
						else if (datagrid1.rowStatus(row) == DATAGRID_ROWSTATUS_NONE || datagrid1.rowStatus(row) == DATAGRID_ROWSTATUS_UPDATE) {
							if (datagrid1.valueMatrix(row,datagrid1.colRef("pymt_yn")) == "Y" || datagrid1.valueMatrix(row,datagrid1.colRef("slip_no")).Trim() != "") {
								show_message("삭제 할 수 없는 자료입니다.");
								return;
							}
							datagrid1.rowStatus(row) = DATAGRID_ROWSTATUS_DELETE;
						}
					}
					]]>
				</script>
			</datagrid>
		</group>
		<group id="group_searches" class="gro_sel" style="left:10px; top:50px; width:926px; height:51px; ">
			<caption id="caption13" class="list_cap02" style="left:0px; top:25px; width:926px; height:26px; "/>
			<caption id="caption11" class="list_cap03" style="left:307px; top:25px; width:110px; height:26px; ">지불횟수</caption>
			<caption id="caption5" class="list_cap02" style="left:0px; top:0px; width:926px; "/>
			<caption id="caption2" class="list_cap03" style="left:0px; top:0px; width:110px; ">리스번호</caption>
			<caption id="caption6" class="list_cap03" style="left:616px; top:0px; width:110px; height:26px; ">리스/임차</caption>
			<caption id="caption9" class="list_cap03" style="left:0px; top:25px; width:110px; height:26px; ">총리스료</caption>
			<caption id="caption14" class="list_cap03" style="left:616px; top:25px; width:110px; height:26px; ">현재상태</caption>
			<input id="frcr_amt" ref="/root/resData/gridData/fc_func_8031_l/dataSet/CURLIST1/record/frcr_amt" navindex="-1" editable="false" caption="총리스료" style="left:113px; top:29px; width:191px; height:18px; "/>
			<input id="srch_leas_no" ref="/root/reqData/searchData/leas_no" class="req" navindex="2" inputtype="button" caption="리스번호" style="left:113px; top:4px; width:150px; height:18px; ">
				<script type="javascript" ev:event="onbuttonclick">
					<![CDATA[
					if (open_fc_co_1060("button","s","리스번호조회","1","A")) {
						//팝업에서 확인 버튼을 누른 경우(혹은 데이터를 더블클릭 한 경우)
						btn_select.dispatch("onclick");
					}
					else {
						//팝업에서 취소 버튼을 누른 경우
					}
					]]>
				</script>
				<script type="javascript" ev:event="xforms-value-changed">
					<![CDATA[
//					if (open_fc_co_1060("button","sc","리스번호조회","0","A")) {
//						//팝업에서 확인 버튼을 누른 경우(혹은 데이터를 더블클릭 한 경우)
//						btn_select.dispatch("onclick");
//					}
//					else {
//						//팝업에서 취소 버튼을 누른 경우
//					}
					]]>
				</script>
			</input>
			<input id="srch_leas_nm" ref="/root/reqData/searchData/leas_nm" navindex="-1" editable="false" caption="리스명" style="left:266px; top:4px; width:347px; height:18px; "/>
			<input id="pymt_plan" ref="/root/resData/gridData/fc_func_8031_l/dataSet/CURLIST1/record/pymt_plan" navindex="-1" editable="false" caption="지불횟수" style="left:420px; top:29px; width:193px; height:18px; "/>
			<input id="leas_hire_clsf_cdnm" ref="/root/resData/gridData/fc_func_8031_l/dataSet/CURLIST1/record/leas_hire_clsf_cdnm" navindex="-1" editable="false" caption="리스임차구분" style="left:729px; top:4px; width:193px; height:18px; "/>
			<input id="leas_stat_cdnm" ref="/root/resData/gridData/fc_func_8031_l/dataSet/CURLIST1/record/leas_stat_cdnm" navindex="-1" editable="false" caption="현재상태" style="left:729px; top:29px; width:193px; height:18px; "/>
		</group>
	</xhtml:body>
</xhtml:html>

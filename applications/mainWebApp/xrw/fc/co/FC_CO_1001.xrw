<?xml version="1.0" encoding="EUC-KR"?>
<?xml-stylesheet type="text/css" href="../../../css/style_sheet.css" ?>
<xhtml:html xmlns:ex="http://www.comsquare.co.kr/xforms/excel" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:ms="urn:schemas-microsoft-com:xslt" xmlns:my="http://www.comsquare.co.kr/example" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/2002/01/xforms" xmlns:ev="http://www.w3.org/2001/xml-events" xmlns:cs="http://www.comsquare.co.kr/xforms">
	<xhtml:head>
		<xhtml:title>Untitle</xhtml:title>
		<model id="model1">
			<instance id="instance1">
				<root xmlns="">
					<initData>
						<session/>
						<comboSet>
						</comboSet>
						<pageInfo/>
					</initData>
					<reqData>
						<!-- 전달하고자 하는 데이터를 담당 ( submit 함수에서 처리) -->
						<!-- 검색조건 처리 -->
						<!-- formData 팝업,화면전환시 data이동시 -->
						<!-- MultiUpDate유형 사용시 처리 -->
						<fwdData/>
						<searchData>
							<job_clsf/>
							<cd_clsf/>
							<cd/>
							<cd_abrv_nm/>
						</searchData>
						<reqForm>
						</reqForm>
					</reqData>
					<resData>
						<!-- 전달 받은 데이터를 담당 ( submit의 결과가 담김) -->
						<resForm>
						</resForm>
						<gridData>
							<fc_co_1000>
								<dataSet>
									<CURLIST>
										<record>
											<cd/>
											<cdnm/>
										</record>
									</CURLIST>
									<errcode/>
									<errmsg/>
								</dataSet>
							</fc_co_1000>
						</gridData>
						<!-- 전달 받은 formData를 담당 ( submit의 결과가 담김) -->
						<!-- 전달 받은 데이터를 가공할 임시저장소 ( submit의 결과가 담김) -->
						<!-- 전달 받은 errorCode를 담당 ( submit의 결과가 담김) -->
						<!-- 전달 받은 errorMsg를 담당 ( submit의 결과가 담김) -->
						<MsgData/>
					</resData>
					<tempData>
						<!-- 데이터를 가공할 임시저장소 -->
						<keyData/>
						<!-- 해당화면의 키값등의 데이터의 저장소 -->
					</tempData>
				</root>
			</instance>
			<script type="javascript" ev:event="xforms-ready">
				<![CDATA[
				//팝업 전용으로 사용하는 경우 메뉴에 등록된 데이터가 없기 때문에
				//타이틀을 직접 설정해주어야 한다.
				//팝업 호출시 타이틀을 지정하면 지정된 타이틀을 사용하고 아니면 기본으로 설정한다.
				var title = model.getValue("/root/reqData/searchData/title").Trim();
				if (title != "") {
					//일반폼과 팝업폼을 동시에 사용하는 경우 메뉴의 데이터를 가져온다.
					//타이틀 지정시 무시하고 사용자 지정 문자열을 제목으로 사용한다.
					//변경하지 않으려면 호출시 "" 으로 지정하거나 하단 주석을 막으면 된다.
					set_popup_title(title);
				}
				else {
					//일반폼과 팝업폼을 동시에 사용하는 경우 메뉴의 데이터를 가져온다.
					//일반폼&팝업폼 공용인경우 하단 주석처리
					//set_popup_title("공통코드조회");
				}
				
				//팝업 호출시 자동 검색이 설정된 경우
				if (is_autosearch) {
					//조회를 위한 데이터가 있을 경우만 조회되도록 한다.
					if (srch_cd.value != "" || srch_cd_abrv_nm.value != "") {
						btn_select.dispatch("onclick");
					}
					is_autosearch = false;
				}
				]]>
			</script>
			<script type="javascript" ev:event="xforms-model-construct">
				<![CDATA[
				init_controls();			
				get_popup_data();
				//datagrid1의 컬럼 설정
				//instance가 직접 변경되었을 때는 이벤트를 타지 않아
				//컬럼 초기화 모듈을 가장 하단에 위치하게 함
				set_column_visibility();
				]]>
			</script>
			<submission id="fc_co_1001_l" action="/fc/co1000/1001" mediatype="application/x-www-form-urlencoded" method="urlencoded-post" ref="/root/reqData/searchData" resultref="/root/resData/gridData/fc_co_1000/dataSet"/>
			<submission id="fc_co_1002_l" action="/fc/co1000/1002" mediatype="application/x-www-form-urlencoded" method="urlencoded-post" ref="/root/reqData/searchData" resultref="/root/resData/gridData/fc_co_1000/dataSet"/>
			<submission id="fc_co_1003_l" action="/fc/co1000/1003" mediatype="application/x-www-form-urlencoded" method="urlencoded-post" ref="/root/reqData/searchData" resultref="/root/resData/gridData/fc_co_1000/dataSet"/>
		</model>
		<script type="javascript" src="../../../js/TFCommon.js"/>
		<script type="javascript" src="../../../js/CIISComm.js"/>
		<script type="javascript" src="../../../js/fcmc_common.js"/>
		<script type="javascript">
			<![CDATA[
			var popid = "fc_co_1001";
			//일반 폼으로도 사용하고 팝업용으로도 사용하는 폼의 경우
			//구분이 필요한데 opener로 판별 할 수 없기 때문에
			//폼 로딩시 특정 이름의 프로퍼티가 있는지 확인해서 처리 하는 시점에서
			//is_popup을 true로 설정해서 사용하도록 한다.
			var is_popup = false;
			//자동으로 폼 로드시 검색을 시작한다.
			var is_autosearch = false;
			//검색의 결과가 1건이라면 결과값을 자동 반환한다.
			var is_autoclose = false;
//			//윈도우의 원래 위치 저장
//			var leftpx = 0;
//			var toppx = 0;

			//현재 팝업이 여러 테이블의 정보를 가져오는 형태이므로
			//요청에 따라 다른 submission을 사용해야 한다.
			var query_type = "";

			function init_controls() {
				//control의 기본 설정 적용
				//datagrid init
				set_default(datagrid1);
				
				//combo init
				
				//input init
				set_default(srch_cd,srch_cd_abrv_nm);
				
				//input date init
				
				//input button init

				//control format 설정 적용
				set_format("CODE",datagrid1,"1",srch_cd);
				set_format("STRING_L",datagrid1,"2",srch_cd_abrv_nm);
			}

			function get_popup_data() {
				var mode = "";
				var title = "";
				var readonly = "0";
				
				value_list = get_popup_send_property(popid);
				//현재 폼이 팝업용으로 열린 경우 처리
				//일반 폼으로도 사용하고 팝업용으로도 사용하는 폼의 경우
				//구분이 필요한데 opener로 판별 할 수 없기 때문에
				//폼 로딩시 특정 이름의 프로퍼티가 있는지 확인해서 처리 하는 시점에서
				//is_popup을 true로 설정해서 사용하도록 한다.
				is_popup = false;
				is_autosearch = false;
				is_autoclose = false;
				
				if (value_list != "") {
					is_popup = true;

					set_popup_min(!is_popup);
					set_popup_max(!is_popup);
					set_popup_close(!is_popup);
					
					save_value_list("/root/reqData/searchData",value_list);
					
					mode		=	model.getValue("/root/reqData/searchData/mode").Trim().toUpperCase();
					title			=	model.getValue("/root/reqData/searchData/title").Trim();
					readonly		=	model.getValue("/root/reqData/searchData/readonly").Trim();
					
					query_type	=	model.getValue("/root/reqData/searchData/query_type").Trim();

					//여기서부터는 현재 폼에서만 필요한 코드
					
					//읽기모드의 설정은 폼 단위 개별 설정이고
					//상황에 따라 호출하는 폼에서 넘긴 데이터를 수정하지 못하도록 설정하기 위한 옵션
					if (readonly == "0") {
						//읽기모드가 "0" 인 경우 처리
						//읽기모드가 "0" 이면 읽기 전용으로 설정할 컨트롤이 없다고 가정하자.
					}
					else if (readonly == "1") {
						//읽기모드가 "1" 인 경우 처리
					}
					else if (readonly == "2") {
						//읽기모드가 "2" 인 경우 처리
					}
					else if (readonly == "3") {
						//읽기모드가 "2" 인 경우 처리
					}
					//여기까지가 현재 폼에서만 필요한 코드

					if (mode.indexOf("S") >= 0) {
						is_autosearch = true;
					}
					if (mode.indexOf("C") >= 0) {
						is_autoclose = true;
					}
				}
				
				//그냥 팝업만 띄워달란다 -_- 바꾼다.
				g_is_autosearch = false;
				set_refvalue(srch_cd,"");
				set_refvalue(srch_cd_abrv_nm,"");
			}
			
			function set_column_visibility() {
				//모든 컬럼을 감춘다.
//				hide_all_columns(datagrid1);
				//공통항목을 보여준다.
//				show_columns(datagrid1,"1,2");
			}
			function prepare_fc_co_1000() {
				return true;
			}
			function send_fc_co_1000() {
				//조건에 문제가 없다면 처리
				if (!prepare_fc_co_1000()) {
					return;
				}

				if(query_type == "1") {				//내부계정코드(9자리)
					model1.send("fc_co_1001_l");
				}					
				else if (query_type == "2"){			//금융기관코드
					model1.send("fc_co_1002_l");
				}
				else if (query_type == "3"){			//외부계정코드(4자리)
					model1.send("fc_co_1003_l");						
				}
				else{
					show_message("검색대상이 없습니다.");
					return;
				}
				
				var totalcnt = model.getValue("/root/resData/gridData/fc_co_1000/dataSet/CURLIST/totalcnt");
				
				if (!is_autosearch && totalcnt == 0) {
					show_message("검색결과가 없습니다.");
				}
			
				//자동닫기 모드이면서 데이터 건수가 1개 라면 데이터를 반환하고 종료한다.
				if (is_autoclose && totalcnt == 1) {
					//데이터그리드의 선택을 지정하고	
					datagrid1.row =  1;
					//데이터를 보낸다.
					send_popup_data();
				}
				else if (is_autoclose) {
					//검색된 데이터가 없거나 2건 이상이면 자동 닫기 모드를 해제한다.
					is_autoclose = false;
					//window를 숨겨놓은 경우 복구한다.
//					window.left = leftpx;
//					window.top= toppx;
				}	
			}

			//팝업창을 종료한다. 팝업과 일반 폼 두 용도로 사용 할 경우도 이 함수를 만들어서
			//상황에 따라서 처리되도록 한다.
			function send_popup_data() {
				var resultref = ""
				if (datagrid1.row > 0) {
					resultref = "/root/resData/gridData/fc_co_1000/dataSet/CURLIST/record[" + datagrid1.row + "]";
				}

				if (is_popup) {
					//ref를 공백으로 넘기면 property가 공백 처리되면서 open_popup 함수에서 이를 인지해 결과가 없는 반환 즉 false라고 표시한다.
					close_popupEx(popid,resultref);
				}
				else {
					formClose();
				}
			}
			]]>
		</script>
	</xhtml:head>
	<xhtml:body class="pop640" pagewidth="640" pageheight="480" guideline="2,34;2,39;2,40;2,49;2,70;2,78;2,80;2,103;2,105;2,112;2,113;2,149;2,118;2,132;2,133;2,157;2,158;2,366;2,377;2,376;2,393;2,408;2,409;1,936;1,927;1,926;2,755;1,630;1,10;2,470;1,320;1,172;">
		<group id="grp_buttons" class="gro_sel" style="left:10px; top:50px; width:620px; height:21px; ">
			<button id="btn_select" class="btn02" navindex="3" style="left:457px; top:0px; width:52px; height:21px; ">
				<caption>조회</caption>
				<script type="javascript" ev:event="onclick">
					<![CDATA[
					send_fc_co_1000();
					]]>
				</script>
			</button>
			<button id="btn_cancle" class="btn02" navindex="5" style="left:568px; top:0px; width:52px; height:21px; ">
				<caption>취소</caption>
				<script type="javascript" ev:event="onclick">
					<![CDATA[
					send_popup_data();
				]]>
				</script>
			</button>
			<button id="btn_ok" class="btn02" navindex="4" style="left:513px; top:0px; width:52px; height:21px; ">
				<caption>확인</caption>
				<script type="javascript" ev:event="onclick">
					<![CDATA[
					send_popup_data();
					]]>
				</script>
			</button>
		</group>
		<group id="group_scr" class="gro_sel" style="left:10px; top:79px; width:620px; height:54px; ">
			<caption id="caption1" class="list_cap02" style="left:0px; top:0px; width:620px; height:26px; text-align:center; "/>
			<caption id="caption2" class="list_cap03" style="left:0px; top:0px; width:120px; height:26px; text-align:center; ">코드명</caption>
			<caption id="caption6" class="list_cap02" style="left:0px; top:25px; width:620px; height:26px; text-align:center; "/>
			<caption id="caption7" class="list_cap03" style="left:0px; top:25px; width:120px; height:26px; text-align:center; ">코드</caption>
			<input id="srch_cd" ref="/root/reqData/searchData/cd" navindex="2" style="left:123px; top:29px; width:492px; height:18px; "/>
			<input id="srch_cd_abrv_nm" ref="/root/reqData/searchData/cd_abrv_nm" navindex="1" style="left:123px; top:4px; width:492px; height:18px; "/>
		</group>
		<group id="group_line" class="gro_line" style="left:10px; top:140px; width:620px; height:5px; "/>
		<datagrid id="datagrid1" nodeset="/root/resData/gridData/fc_co_1000/dataSet/CURLIST/record" caption="코드^코드명" colsep="^" colwidth="189, 352" extendlastcol="scroll" mergecellsfixedrows="bycolrec" rowheader="seq" rowsep="|" navindex="6" style="left:10px; top:155px; width:620px; height:315px; ">
			<col ref="cd"/>
			<col ref="cdnm"/>
			<script type="javascript" ev:event="ondblclick">
				<![CDATA[
					//그리드 스크롤바 클릭, 더블클릭 방지 소스
					if (-1 != event.target.lastIndexOf("scroll.thumb")) {
						return;
					}
					
					if (datagrid1.mouseRow < 1) {
						return;
					}
					
					var grid = eval(event.currentTarget);
					var rowid = grid.row;
					var colid = grid.col;
					
					if (rowid < grid.fixedRows || colid < grid.fixedCols) {
						return;
					}				
				//팝업인 경우만 처리되도록
				//팝업이 아닌 정상폼으로 동작시 닫히지 않아야 한다.
				if (is_popup) {
					send_popup_data();
				}
				]]>
			</script>
		</datagrid>
		<import id="iv_Title" src="../../../common/xrw/iv_TitleBar_Pop640.xrw" style="left:10px; top:5px; width:620px; height:29px; "/>
	</xhtml:body>
</xhtml:html>

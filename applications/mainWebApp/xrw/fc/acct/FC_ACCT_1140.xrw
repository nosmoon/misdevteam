<?xml version="1.0" encoding="EUC-KR"?>
<?xml-stylesheet href="../../../css/style_sheet.css" type="text/css" ?>
<xhtml:html xmlns:ex="http://www.comsquare.co.kr/xforms/excel" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:ms="urn:schemas-microsoft-com:xslt" xmlns:my="http://www.comsquare.co.kr/example" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/2002/01/xforms" xmlns:ev="http://www.w3.org/2001/xml-events" xmlns:cs="http://www.comsquare.co.kr/xforms">
	<xhtml:head>
		<xhtml:title>시점별조직계층등록</xhtml:title>
		<model id="model1">
			<instance id="instance1">
				<root xmlns="">
					<initData>
						<dataSet>
							<curList>
								<itemset>
									<cmpy_cd/>
									<acct_cd/>
									<acct_nm/>
									<menu_levl/>
									<menu_seq1/>
									<menu_seq2/>
									<menu_seq3/>
									<menu_seq4/>
									<label/>
									<value/>
									<img/>
									<sel_img/>
									<exp_img/>
								</itemset>
							</curList>
						</dataSet>
						<gridData>
							<record>
								<title_nm/>
								<acct_cd/>
								<acct_nm/>
							</record>
						</gridData>
					</initData>
					<reqData>
						<!-- 전달하고자 하는 데이터를 담당 ( submit 함수에서 처리) -->
						<searchData>
							<cmpy_cd/>
							<acct_cd/>
							<acct_nm/>
							<acct_type_cd/>
						</searchData>
						<!-- 검색조건 처리 -->
						<reqForm>
							<cmpy_cd/>
							<acct_cd/>
							<acct_nm/>
							<acct_logic/>
							<acct_remk/>
							<seq1/>
							<seq2/>
							<seq3/>
							<seq4/>
							<flag/>
							<acct_type_cd/>
						</reqForm>
						<!-- formData 팝업,화면전환시 data이동시 -->
						<multiUpDate>
							<multiUpDate/>
							<orga_reorga_dd/>
						</multiUpDate>
						<!-- MultiUpDate유형 사용시 처리 -->
						<fwdData>
							<func_nm/>
						</fwdData>
						<up_temp>
							<dept_cd/>
							<orga_reorga_dd/>
						</up_temp>
					</reqData>
					<resData>
						<!-- 전달 받은 데이터를 담당 ( submit의 결과가 담김) -->
						<resForm/>
						<!-- 전달 받은 formData를 담당 ( submit의 결과가 담김) -->
						<!-- 전달 받은 데이터를 가공할 임시저장소 ( submit의 결과가 담김) -->
						<msg/>
						<!-- 전달 받은 errorCode를 담당 ( submit의 결과가 담김) -->
						<!-- 전달 받은 errorMsg를 담당 ( submit의 결과가 담김) -->
						<gridData>
							<!-- 전달 받은 grid데이터를 담당 ( submit의 결과가 담김) -->
							<record>
								<insd_acct_cd/>
								<acct_subj_nm/>
								<tot_yn/>
							</record>
							<!-- datagrid2 -->
							<!-- datagrid3 -->
						</gridData>
						<gridAcctData>
							<record>
								<acct_cd/>
								<acct_subj_nm/>
								<insd_acct_cd/>
							</record>
						</gridAcctData>
						<deptTree>
							<item>
								<dept_nm/>
								<dept_cd/>
								<level/>
								<supr_dept_cd/>
								<insd_dept_cd/>
								<sub_cnt/>
							</item>
						</deptTree>
						<treeData/>
						<temp/>
						<totcnt/>
						<cmpy_nm/>
						<tab_mode/>
					</resData>
					<tempData/>
					<outlinecol>4</outlinecol>
					<outlinebar/>
					<tm_search/>
					<add_cnt/>
				</root>
			</instance>
			<script type="javascript">
				<![CDATA[

				]]>
			</script>
			<script type="javascript" ev:event="xforms-ready">
				<![CDATA[
					model.setValue("/root/reqData/searchData/cmpy_cd", getProperty("ss_cmpycd"));
					model.setValue("/root/reqData/searchData/acct_type_cd", "002");
					model.send("fc_acct_1020_m");
					
					model.copyNode("/root/initData/dataSet/curList", "/root/tempData/curList");
					model.copyNode("/root/initData/gridData", "/root/tempData2/gridData");
					model.setValue("/root/resData/tab_mode" , "1");
					model.refresh();
					
					for(var i=1; i<datagrid3.rows; i++) {
						if(datagrid3.valueMatrix(i, 2) == "") {
							//datagrid3.valueMatrix(i,2) = "-------";
							//datagrid3.cellAttribute("background-color", i, 2, i, 2) =   "#EE4E3E";
							//datagrid3.colAttribute( 3, "background-color") =  "#EE4E3E";
						}
					}
					
					switch1.selectedIndex = 0;
					expandAll();					
					model.removenode("/root/tempData");
					model.removenode("/root/tempData2");
					
					button11.dispatch("onclick");
					
					/*
					model.send("fc_acct_1022_l");
					model.copyNode("/root/resData/gridAcctData", "/root/tempData/curList");
					//datagrid2.refresh();
					model.refresh();
					model.removenode("/root/tempData");
					*/
				]]>
			</script>
			<submission id="fc_acct_1020_m" action="/fc/acct1000/1020" mediatype="application/x-www-form-urlencoded" method="post" ref="/root/reqData/searchData" resultref="/root/tempData"/>
			<submission id="fc_acct_1021_s" action="/fc/acct1000/1021" mediatype="application/x-www-form-urlencoded" method="post" ref="/root/reqData/reqForm" resultref="/root/tempData"/>
			<submission id="fc_acct_1022_l" action="/fc/acct1000/1022" mediatype="application/x-www-form-urlencoded" method="post" ref="/root/reqData/searchData" resultref="/root/tempData"/>
			<submission id="fc_acct_1023_u" action="/fc/acct1000/1023" mediatype="application/x-www-form-urlencoded" method="post" ref="/root/reqData/reqForm" resultref="/root/tempData"/>
			<submission id="fc_acct_1024_s" action="/fc/acct1000/1024" mediatype="application/x-www-form-urlencoded" method="post" ref="/root/reqData/searchData" resultref="/root/tempData"/>
			<submission id="fc_acct_1025_u" action="/fc/acct1000/1025" mediatype="application/x-www-form-urlencoded" method="post" ref="/root/reqData/searchData" resultref="/root/tempData"/>
			<submission id="fc_acct_1026_u" action="/fc/acct1000/1026" mediatype="application/x-www-form-urlencoded" method="post" ref="/root/reqData/reqForm" resultref="/root/tempData"/>
			<submission id="fc_acct_1027_a" action="/fc/acct1000/1027" mediatype="application/x-www-form-urlencoded" method="post" ref="/root/reqData/searchData" resultref="/root/tempData"/>
		</model>
		<script type="javascript" src="/js/TFCommon.js"/>
		<script type="javascript" src="/js/CIISComm.js"/>
		<script type="javascript" src="/js/fcmc_common.js"/>
		<script type="javascript" src="/js/ad_common.js"/>
		<script type="javascript">
			<![CDATA[
			
			function check_griddata(val) {
				for(var v=0; v<datagrid1.rows; v++) {
					if(datagrid1.valueMatrix(v,3) == val) {
						return true;
					}
				}				
				return false;
			}

			function loadAll() {
				model.setValue("/root/reqData/searchData/cmpy_cd", getProperty("ss_cmpycd"));
				model.setValue("/root/reqData/searchData/acct_type_cd", "002");
				model.send("fc_acct_1020_m");
					
				model.copyNode("/root/initData/dataSet/curList", "/root/tempData/curList");
				model.copyNode("/root/initData/gridData", "/root/tempData2/gridData");
				//model.setValue("/root/resData/tab_mode" , "1");
				model.refresh();
					
				expandAll();					
				model.removenode("/root/tempData");
				model.removenode("/root/tempData2");
			}
			
			
			function expandAll(){				
				for(var i=0; i<treeview1.length; i++)
				{
					treeview1.expand(i, true);
				}
			}
			
			
			function ch_value(row,col){
				if(datagrid1.valueMatrix(row,col) == "true"){
					datagrid1.rowStatus(row) = 4;
				}else if(datagrid1.valueMatrix(row,col) == "false"){
					datagrid1.rowStatus(row) = 0;
				}
			}
			
			]]>
		</script>
	</xhtml:head>
	<xhtml:body class="main" pagewidth="946" pageheight="728" guideline="2,49;2,70;2,79;2,80;2,714;1,921;1,927;1,926;" style="font-family:굴림; text-align:left; background-image:../../images/bg_946.gif; ">
		<import id="iv_Title" src="../../../common/xrw/iv_TitleBar.xrw" style="left:10px; top:5px; width:926px; height:29px; "/>
		<group id="group_btnA" class="gro_btn" style="left:10px; top:40px; width:911px; height:21px; ">
			<button id="btnA2" class="btn02" visibility="hidden" style="left:580px; top:0px; width:52px; height:21px; ">
				<caption>저장</caption>
				<script type="javascript" ev:event="onclick">
					<![CDATA[
					if(model1.getValue("/root/resData/temp") == ""){
						alert("조회 작업먼저 해주세요.");
						return;
					}
					if (window.alert("저장하시겠습니까?", "확인", 1) != 1) {
						return;
					}
					/*for(var i = 1 ; i<datagrid1.rows; i++){
						if(i != 1 && i  != datagrid1.rows - 1){
							datagrid1.rowStatus(i) = 1; // 조회시 그리드 insert 모드로 셋팅
						}
					}*/
					
					model1.makeNode("/root/reqData/multiUpDate/multiUpDate");
					//model1.setValue("/root/reqData/multiUpDate/multiUpDate", datagrid1.getUpdateData());
					model1.send("hd_orga_1204");
					model1.send("hd_orga_1208");
					if(submit_completed()) {
						model1.setValue("/root/add_cnt", "");
						model1.setValue("/root/tm_search", "");
						//datagrid1.rowstyle(1, "data", "background-color") = "#eaedfe";
						model1.send("hd_orga_1202");
						//gridMake();
						
						/*
						for(var i = 1 ; i<datagrid1.rows; i++){
							if(i != 1){
								datagrid1.rowStatus(i) = 1; // 조회시 그리드 insert 모드로 셋팅
							}
						}
						*/
						
						//makeTreegridData();
						/*
						//alert(datagrid1.fixedRows);
						for(var i = datagrid1.fixedRows; i < datagrid1.rows; i++) {
							datagrid1.IsSubtotal(i) = true;
							//if (i < 5){
							//	alert(datagrid1.TextMatrix(i, 3));
							//}
							datagrid1.outlinelevel(i) =  datagrid1.TextMatrix(i, 3); //인스턴스H_DEPTH 값임-
						}
						
						////////////////////////
						//트리 모양 설정
						datagrid1.OutlineCol = 1; 					//연결선이 표현되는 컬럼
						datagrid1.OutlineBar = 4;					//연결선 형태 설정 (+ , - , 사각형 안보이게 하려면 0 으로 세팅)
						datagrid1.TreeColor = "red"
						
						//자식 트리 접기
						for(var i = datagrid1.FixedRows; i <datagrid1.Rows; i++) {
							if ( datagrid1.TextMatrix(i, 3) == 1 ) {
								datagrid1.IsCollapsed(i) =false;
							}
						}
						*/
						//첫번째 컬럼의 넓이 지정
						//datagrid1.colWidth(0)=50;
						/*model1.removenode("/root/resData/deptTree2");
						model1.removenode("/root/resData/deptTree3");
						model1.removenode("/root/reqData/multiUpDate1/multiUpDate");
						model1.makeNode("/root/reqData/multiUpDate/multiUpDate");
						model1.makeNode("/root/reqData/multiUpDate1/multiUpDate");
						datagrid2.clearStatus();
						datagrid3.clearStatus();*/
						model1.setValue("/root/reqData/reqForm/dept_cd", "");
						//combo3.refresh();
						model1.removenode("/root/reqData/multiUpDate/multiUpDate");
						model1.refresh();
					}
					]]>
				</script>
			</button>
			<button id="button4" class="btn02" style="left:851px; top:0px; width:52px; height:21px; ">
				<caption>종료</caption>
				<script type="javascript" ev:event="onclick">
					<![CDATA[
				 	viewer("mainFrame").window.javaScript.closeMDIWindow(model.getValue("/root/initData/pageInfo/pageID"));
					]]>
				</script>
			</button>
			<button id="button6" class="btn02" visibility="hidden" style="left:520px; top:0px; width:52px; height:21px; ">
				<caption>조회</caption>
				<script type="javascript" ev:event="onclick">
					<![CDATA[
					model.send("fc_acct_1022_l");
					model.copyNode("/root/resData/gridAcctData", "/root/tempData/curList");
					datagrid2.refresh();
					model.removenode("/root/tempData");
					]]>
				</script>
			</button>
			<button id="button7" class="btn02" style="left:795px; top:0px; width:52px; height:21px; ">
				<caption>초기화</caption>
				<script type="javascript" ev:event="onclick">
					<![CDATA[
					model1.reset();
					//datagrid1.clearStatus();
					model1.setValue("/root/add_cnt", "");
					model1.setValue("/root/tm_search", "");
					]]>
				</script>
			</button>
		</group>
		<group id="group1" style="left:10px; top:105px; width:500px; height:550px; ">
			<treeview id="treeview1" dragmode="false" dropmode="false" expanddepth="-1" style="left:5px; top:0px; width:490px; height:545px; ">
				<itemset nodeset="/root/initData/dataSet/curList/itemset">
					<label ref="acct_nm"/>
					<value ref="acct_cd"/>
					<image ref="img"/>
					<selectedimage ref="sel_img"/>
					<expandedimage ref="exp_img"/>
				</itemset>
				<script type="javascript" ev:event="onclick">
					<![CDATA[
					//데이터가 아닌부분 선택했을 시
					if(treeview1.value == "") return;
					//model.setValue("/root/reqData/searchData/acct_cd", treeview1.value);
					model.setValue("/root/reqData/reqForm/cmpy_cd", getProperty("ss_cmpycd"));
					model.setValue("/root/reqData/reqForm/acct_cd", treeview1.value);
					model.setValue("/root/reqData/reqForm/acct_nm", treeview1.label);
					model.setValue("/root/reqData/reqForm/flag", "0");
					model.setValue("/root/reqData/reqForm/acct_type_cd", "002");
					model.send("fc_acct_1021_s");

					model.copyNode("/root/resData/gridData", "/root/tempData/curList");
											
					datagrid1.refresh();
					if(datagrid1.rows == 1)
						datagrid1.addRow();

					input2.attribute("background-color") = "#EEEEEE";
					model.removenode("/root/tempData");
					
					//model.refresh();
					]]>
				</script>
				<script type="javascript" ev:event="onmouseup">
					<![CDATA[
					//alert(treeview1.value);
					]]>
				</script>
			</treeview>
		</group>
		<caption id="caption14" ref="/root/resData/totcnt" style="left:481px; top:670px; width:87px; height:20px; font-weight:bold; text-align:right; "/>
		<caption id="caption1" class="tit02" style="left:526px; top:80px; width:205px; height:20px; font-weight:bold; ">재무상태표 계층코드등록</caption>
		<caption id="caption2" class="list_cap02" style="left:605px; top:105px; width:305px; height:26px; text-align:center; "/>
		<caption id="caption3" class="list_cap01" style="left:526px; top:105px; width:80px; height:26px; text-align:center; ">계정코드</caption>
		<output id="input1" ref="/root/reqData/reqForm/acct_cd" style="left:611px; top:109px; width:104px; height:18px; "/>
		<input id="input2" ref="/root/reqData/reqForm/acct_nm" editable="true" style="left:720px; top:109px; width:180px; height:18px; "/>
		<button id="button1" class="btn04" disabled="true" visibility="hidden" style="left:110px; top:660px; width:88px; height:21px; ">
			<caption>계정삭제</caption>
			<script type="javascript" ev:event="onclick">
				<![CDATA[
				       var msg = "";
					var selectedIndex  = treeview1.selectedIndex;
					if(selectedIndex == -1) return;
					
					if(treeview1.value=="" || input1.value=="") {
						alert("삭제할 메뉴를 먼저 선택해주세요");
						 return;
					}
					
					var item = treeview1.item(selectedIndex);
					if(item.depth == 0){
						alert("최상위 메뉴는 삭제 할 수 없습니다.");
						return;
					}

					//var treeItem = treeview1.item(treeview1.focusIndex);
              				//var ncnt = treeItem.haschilditem();
              				var ncnt = item.haschilditem();
	
					if(ncnt>0) {
						msg = "하위 계층까지 전부 삭제됩니다.\n\n";
					}
					
					if(windowConfirm(msg + "삭제 하시겠습니까?")) {
						
						model.setValue("/root/reqData/searchData/acct_cd", input1.value);
						model.setValue("/root/reqData/searchData/acct_type_cd", "002");
						model.send("fc_acct_1025_u");
						button7.dispatch("onclick");
						
						model.setValue("/root/reqData/searchData/acct_type_cd", "002");
						model.send("fc_acct_1020_m");
						model.copyNode("/root/initData/dataSet/curList", "/root/tempData/curList");
						model.copyNode("/root/initData/gridData", "/root/tempData2/gridData");
						model.refresh();
						expandAll();
						
						model.removenode("/root/tempData");
						model.removenode("/root/tempData2");
					}

					]]>
			</script>
		</button>
		<button id="button8" class="btn04" disabled="true" visibility="hidden" style="left:20px; top:660px; width:88px; height:21px; ">
			<caption>계정추가</caption>
			<script type="javascript" ev:event="onclick">
				<![CDATA[
					if(treeview1.value=="" || input1.value=="") {
						alert("추가할 상위 메뉴를 먼저 선택해주세요");
						 return;
					}

					//input1.value = "";
					input2.value = "";
					//input2.attribute("editable") = "true";
					input2.attribute("background-color") = "#FFFFFF";
					input2.refresh();
					
					for(var i=datagrid1.rows; i>0; i--) {
						datagrid1.rowHidden(i) = true;
					}

					for(var i=datagrid1.rows; i>0; i--) {
						datagrid1.deleteRow(i);
					}
					
					datagrid1.addRow();

//					model.setValue("/root/reqData/reqForm/cmpy_cd", "100");
//					model.setValue("/root/reqData/reqForm/acct_cd", input1.currentText);
//					model.setValue("/root/reqData/reqForm/acct_nm", treeview1.label);
					//alert(model.getValue("/root/reqData/reqForm/cmpy_cd") + " : " + model.getValue("/root/reqData/reqForm/acct_cd") + " : " + model.getValue("/root/reqData/reqForm/acct_nm"));
					//return;
					
					model.setValue("/root/reqData/searchData/acct_cd", input1.value);
					model.setValue("/root/reqData/searchData/acct_type_cd", "002");
//					alert( model.getValue("/root/reqData/searchData/acct_cd") );
//					alert( model.getValue("/root/reqData/searchData/acct_nm") );
					model.send("fc_acct_1024_s");
					
					model.setValue("/root/reqData/reqForm/acct_cd", model.getValue("/root/tempData/insd_acct_cd"));
					model.setValue("/root/reqData/reqForm/flag", "1");
					model.removenode("/root/tempData");
					model.refresh();
					
					/*=====================
					var node		  	= 	instance1.selectSingleNode( "//itemset[value='"+treeview1.value+"']" );

					makeNodeValue("/root/tempData/itemset/cmpy_cd", "100");
					makeNodeValue("/root/tempData/itemset/acct_cd", "xxxxxxx");
					makeNodeValue("/root/tempData/itemset/acct_nm", "xxxxxxx");
					makeNodeValue("/root/tempData/itemset/menu_levl", "1");
					makeNodeValue("/root/tempData/itemset/menu_seq1", "10");
					makeNodeValue("/root/tempData/itemset/menu_seq2", "0");
					makeNodeValue("/root/tempData/itemset/menu_seq3", "0");
					makeNodeValue("/root/tempData/itemset/menu_seq4", "0");
					
					makeNodeValue("/root/tempData/itemset/label", "xxxxxxx");
					makeNodeValue("/root/tempData/itemset/value", "xxxxxxx");
					makeNodeValue("/root/tempData/itemset/img", "/images/folderClosed.gif");
					makeNodeValue("/root/tempData/itemset/sel_img", "");
					makeNodeValue("/root/tempData/itemset/exp_img", "/images/folderOpen.gif");
					
					var src_node		=	instance1.selectSingleNode( "/root/tempData/itemset" );
					var new_node		= 	src_node.cloneNode(true);
						
					node.appendChild(new_node);
					//model.copyNode("/root/initData/comboSet/favorite", "/instance1/initData/dataSet/curList/itemset");
					treeview1.rebuild();
						
					expandAll();
					=====================*/
					
					//alert(node.xml);
					/*if(windowConfirm("폴더추가 후에 저장을 해야만 적용됩니다. 계속하시겠습니까??")){
						var my_menu_nm   =   	model.getValue("/root/reqData/my_menu_nm");
						var node		  	= 	instance2.selectSingleNode( "//itemset[value='FAVORITE']" );	
						var today = new Date() // 현재시간 얻기 
						var cur_time = today.getTime(); // 밀리초 from 1/1/70
						
						var value		=	"TMP_" + cur_time;
						
						makeNodeValue("/root/tempData/itemset/label", my_menu_nm);
						makeNodeValue("/root/tempData/itemset/value", value);
						makeNodeValue("/root/tempData/itemset/img", "/images/folderClosed.gif");
						makeNodeValue("/root/tempData/itemset/sel_img", "");
						makeNodeValue("/root/tempData/itemset/exp_img", "/images/folderOpen.gif");
						
						var src_node		=	instance1.selectSingleNode( "/root/tempData/itemset" );
						var new_node		= 	src_node.cloneNode(true);
						
						node.appendChild(new_node);
						
						model.copyNode("/root/initData/comboSet/favorite", "/instance('instance2')/initData/comboSet/favorite");
						treeview2.rebuild();
						
						expandAll();
					}
					*/
					]]>
			</script>
		</button>
		<button id="button9" class="btn04" disabled="true" visibility="hidden" style="left:200px; top:660px; width:88px; height:21px; ">
			<caption>상위이동</caption>
			<script type="javascript" ev:event="onclick">
				<![CDATA[
				
					if(treeview1.value=="" || input1.value=="") return;
					
					model.setValue("/root/reqData/reqForm/cmpy_cd", getProperty("ss_cmpycd"));
					model.setValue("/root/reqData/reqForm/acct_cd", treeview1.value);
					model.setValue("/root/reqData/reqForm/acct_type_cd", "002");
					model.setValue("/root/reqData/reqForm/acct_nm", treeview1.label);
					model.setValue("/root/reqData/reqForm/flag", "0");
					model.send("fc_acct_1026_u");
					
					if( model.getValue("/root/tempData/errmsg") != "") {
						alert(model.getValue("/root/tempData/errmsg"));
						model.removenode("/root/tempData");
					} else {
						loadAll();
					}
					
						/*if(datagrid1.row == "1"){
							alert("조선일보는 이동 하실 수 없습니다.");
							return;
						}
						var row = datagrid1.row;
						var rows = datagrid1.rows;
						var rw = row+1;
						if(rows == row+1){
							alert("상위 이동 할 수 없습니다.");
							return;
						}
						var fromNode = datagrid1.getNode(row); // 선택된 로우
						var targetNode = datagrid1.getNode(row-1); // 선택된 로우 -1
						var ch_fromNode = datagrid1.getNode(row); // 선택된 로우
						var be_targetNode = datagrid1.getNode(row-1); // 선택된 로우 -1
						var af_targetNode = datagrid1.getNode(row+1); // 선택된 로우 +1
						
						var parntNode = model.instances(0).getElementsByTagName("deptTree").nextNode();
						if (row == 2){	
							alert("더 이상 이동할 상위가 없습니다.");
							return;
						}
						var from_dept_nm = fromNode.selectSingleNode("dept_nm").text;
						var from_dept_cd = fromNode.selectSingleNode("dept_cd").text;
						var from_level = fromNode.selectSingleNode("level").text;
						var from_insd_dept_cd = fromNode.selectSingleNode("insd_dept_cd").text;
						var from_supr_dept_cd = fromNode.selectSingleNode("supr_dept_cd").text;
						var from_sub_cnt = fromNode.selectSingleNode("sub_cnt").text;
						
						model1.setValue("/root/tm_search", from_level);
							
						var target_dept_nm = targetNode.selectSingleNode("dept_nm").text;
						var target_dept_cd = targetNode.selectSingleNode("dept_cd").text;
						var target_level = targetNode.selectSingleNode("level").text;
						var target_insd_dept_cd = targetNode.selectSingleNode("insd_dept_cd").text;
						var target_supr_dept_cd = targetNode.selectSingleNode("supr_dept_cd").text;
						var target_sub_cnt = targetNode.selectSingleNode("sub_cnt").text;
						
						//alert(target_level + "<" +  from_level + " 	" + target_supr_dept_cd + "== '@' 	" + target_supr_dept_cd.substring(0,2) + "!=" +from_supr_dept_cd.substring(0,2));
						//alert(" target_supr_dept_cd.substring(0,2) == " + target_supr_dept_cd.substring(0,2) + "     from_supr_dept_cd.substring(0,2) == " + from_supr_dept_cd.substring(0,2));
						//if((target_supr_dept_cd == '@' && from_supr_dept_cd == '@') || (target_level != from_level) || 
						
						//if((target_level < from_level) || (target_supr_dept_cd == '@') || (target_supr_dept_cd.substring(0,2) != from_supr_dept_cd.substring(0,2))){
						//	alert("상위 이동 할 수 없습니다.");
						//	return;
						//}
						
						var ch_level = ch_fromNode.selectSingleNode("level").text;
						var be_level = be_targetNode.selectSingleNode("level").text;
						var af_level = af_targetNode.selectSingleNode("level").text;
						
						var bSupr_Node = false;
						var j=1;
						var pNode;
						var Nodelength = 0;
						while (!bSupr_Node){
							pNode = datagrid1.getNode(row-j);
							if(pNode == null){
								alert("null 입니다. 상위 이동 할 수 없습니다.");
								return;
							}
							if (eval(pNode.selectSingleNode("level").text) < eval(fromNode.selectSingleNode("level").text)){
								alert("상위 이동 할 수 없습니다.");
								return;
							}
							if (eval(pNode.selectSingleNode("level").text) == eval(fromNode.selectSingleNode("level").text)){
								bSupr_Node = true;
								Nodelength = pNode.selectSingleNode("sub_cnt").text;
							}
							j++;
						}
						var i_tm = (Number(row) - Number(j - 1));
						var j_tm = (Number(row) + Number(j - 1));
						
						//alert("j == " + j + " row == " + row + "  i_tm == " + i_tm + "  j_tm == " + j_tm);
						///alert("ch_level == " + ch_level + "	be_level == " + be_level + "	af_level == " + af_level);
						
						var rows = datagrid1.rows; // 총그리드수
						
						//alert("i_tm == " + i_tm + "	j_tm == " + j_tm + "	Number(i_tm + 2) == " + Number(i_tm + 2));
						if(j_tm == Number(i_tm + 2)){
							datagrid1.insertRow(row - 1, "below", "true", "true");
							
							model.setValue("/root/resData/deptTree/item[" + (row -1) + "]/level", from_level);
							model.setValue("/root/resData/deptTree/item[" + (row -1) + "]/dept_nm", from_dept_nm);
							model.setValue("/root/resData/deptTree/item[" + (row -1) + "]/dept_cd", from_dept_cd);
							model.setValue("/root/resData/deptTree/item[" + (row -1) + "]/insd_dept_cd", from_insd_dept_cd);
							model.setValue("/root/resData/deptTree/item[" + (row -1) + "]/supr_dept_cd", from_supr_dept_cd);
							
							model.setValue("/root/resData/deptTree/item[" + (row) + "]/level", target_level);
							model.setValue("/root/resData/deptTree/item[" + (row) + "]/dept_nm", target_dept_nm);
							model.setValue("/root/resData/deptTree/item[" + (row) + "]/dept_cd", target_dept_cd);
							model.setValue("/root/resData/deptTree/item[" + (row) + "]/insd_dept_cd", target_insd_dept_cd);
							model.setValue("/root/resData/deptTree/item[" + (row) + "]/supr_dept_cd", target_supr_dept_cd);
							
							makeTree();
							datagrid1.deleteRow(row + 1);
							makeTree();
							
							if((ch_level == be_level) && (ch_level < af_level)){
							
								var rows = datagrid1.rows; // 총그리드수
								
								for(var jj = 1; jj < rows; jj++){
								
									var row_tm = datagrid1.row;
									var fromNode_tm = datagrid1.getNode(row_tm); // 선택된 로우
									var targetNode_tm = datagrid1.getNode(row_tm - 1); // 선택된 로우 -1
									
									var from_dept_nm_tm = fromNode_tm.selectSingleNode("dept_nm").text;
									var from_dept_cd_tm = fromNode_tm.selectSingleNode("dept_cd").text;
									var from_level_tm = fromNode_tm.selectSingleNode("level").text;
									var from_insd_dept_cd_tm = fromNode_tm.selectSingleNode("insd_dept_cd").text;
									var from_supr_dept_cd_tm = fromNode_tm.selectSingleNode("supr_dept_cd").text;
									var from_sub_cnt_tm = fromNode_tm.selectSingleNode("sub_cnt").text;
										
									var target_dept_nm_tm = targetNode_tm.selectSingleNode("dept_nm").text;
									var target_dept_cd_tm = targetNode_tm.selectSingleNode("dept_cd").text;
									var target_level_tm = targetNode_tm.selectSingleNode("level").text;
									var target_insd_dept_cd_tm = targetNode_tm.selectSingleNode("insd_dept_cd").text;
									var target_supr_dept_cd_tm = targetNode_tm.selectSingleNode("supr_dept_cd").text;
									var target_sub_cnt_tm = targetNode_tm.selectSingleNode("sub_cnt").text;
									
									if(jj > row){
										
										//if(model1.getValue("/root/resData/deptTree/item[" + (jj) + "]/level") == model1.getValue("/root/resData/deptTree/item[" + (jj + 1) + "]/level")){
											
											datagrid1.insertRow(jj - j, "below", "true", "true");
											
											model.setValue("/root/resData/deptTree/item[" + (jj - j + 1) + "]/level", from_level_tm);
											model.setValue("/root/resData/deptTree/item[" + (jj - j + 1) + "]/dept_nm", from_dept_nm_tm);
											model.setValue("/root/resData/deptTree/item[" + (jj - j + 1) + "]/dept_cd", from_dept_cd_tm);
											model.setValue("/root/resData/deptTree/item[" + (jj - j + 1) + "]/insd_dept_cd", from_insd_dept_cd_tm);
											model.setValue("/root/resData/deptTree/item[" + (jj - j + 1) + "]/supr_dept_cd", from_supr_dept_cd_tm);
											
											model.setValue("/root/resData/deptTree/item[" + (jj) + "]/level", target_level_tm);
											model.setValue("/root/resData/deptTree/item[" + (jj) + "]/dept_nm", target_dept_nm_tm);
											model.setValue("/root/resData/deptTree/item[" + (jj) + "]/dept_cd", target_dept_cd_tm);
											model.setValue("/root/resData/deptTree/item[" + (jj) + "]/insd_dept_cd", target_insd_dept_cd_tm);
											model.setValue("/root/resData/deptTree/item[" + (jj) + "]/supr_dept_cd", target_supr_dept_cd_tm);
											
											makeTree();
											datagrid1.deleteRow(jj + 1);
											makeTree();
											
										//}else if(model1.getValue("/root/resData/deptTree/item[" + (jj) + "]/level") > model1.getValue("/root/resData/deptTree/item[" + (jj + 1) + "]/level")){
										 if(model1.getValue("/root/tm_search") == model1.getValue("/root/resData/deptTree/item[" + (jj + 1) + "]/level")){
											datagrid1.insertRow(jj - j, "below", "true", "true");
											
											model.setValue("/root/resData/deptTree/item[" + (jj - j + 1) + "]/level", from_level_tm);
											model.setValue("/root/resData/deptTree/item[" + (jj - j + 1) + "]/dept_nm", from_dept_nm_tm);
											model.setValue("/root/resData/deptTree/item[" + (jj - j + 1) + "]/dept_cd", from_dept_cd_tm);
											model.setValue("/root/resData/deptTree/item[" + (jj - j + 1) + "]/insd_dept_cd", from_insd_dept_cd_tm);
											model.setValue("/root/resData/deptTree/item[" + (jj - j + 1) + "]/supr_dept_cd", from_supr_dept_cd_tm);
											
											model.setValue("/root/resData/deptTree/item[" + (jj) + "]/level", target_level_tm);
											model.setValue("/root/resData/deptTree/item[" + (jj) + "]/dept_nm", target_dept_nm_tm);
											model.setValue("/root/resData/deptTree/item[" + (jj) + "]/dept_cd", target_dept_cd_tm);
											model.setValue("/root/resData/deptTree/item[" + (jj) + "]/insd_dept_cd", target_insd_dept_cd_tm);
											model.setValue("/root/resData/deptTree/item[" + (jj) + "]/supr_dept_cd", target_supr_dept_cd_tm);
											
											makeTree();
											datagrid1.deleteRow(jj + 1);
											makeTree();
											model1.setValue("/root/reqData/reqForm/dept_cd", "");
											combo3.refresh();
											makeTree();
											return;
										}
									}
								}
							}
						}
						
						if(j_tm != Number(i_tm + 2)){
							datagrid1.insertRow(row - j, "below", "true", "true");
							
							model.setValue("/root/resData/deptTree/item[" + (row - j + 1) + "]/level", from_level);
							model.setValue("/root/resData/deptTree/item[" + (row - j + 1) + "]/dept_nm", from_dept_nm);
							model.setValue("/root/resData/deptTree/item[" + (row - j + 1) + "]/dept_cd", from_dept_cd);
							model.setValue("/root/resData/deptTree/item[" + (row - j + 1) + "]/insd_dept_cd", from_insd_dept_cd);
							model.setValue("/root/resData/deptTree/item[" + (row - j + 1) + "]/supr_dept_cd", from_supr_dept_cd);
							
							model.setValue("/root/resData/deptTree/item[" + (row) + "]/level", target_level);
							model.setValue("/root/resData/deptTree/item[" + (row) + "]/dept_nm", target_dept_nm);
							model.setValue("/root/resData/deptTree/item[" + (row) + "]/dept_cd", target_dept_cd);
							model.setValue("/root/resData/deptTree/item[" + (row) + "]/insd_dept_cd", target_insd_dept_cd);
							model.setValue("/root/resData/deptTree/item[" + (row) + "]/supr_dept_cd", target_supr_dept_cd);
							
							makeTree();
							datagrid1.deleteRow(row + 1);
							makeTree();
							
							if((be_level == af_level) || (af_level == 3)){ // 하위 레벨이 없을 때
							
								var rows = datagrid1.rows; // 총그리드수
								
								for(var jj = 1; jj < rows; jj++){
								
									var row_tm = datagrid1.row;
									var fromNode_tm = datagrid1.getNode(row_tm); // 선택된 로우
									var targetNode_tm = datagrid1.getNode(row_tm - 1); // 선택된 로우 -1
									
									var from_dept_nm_tm = fromNode_tm.selectSingleNode("dept_nm").text;
									var from_dept_cd_tm = fromNode_tm.selectSingleNode("dept_cd").text;
									var from_level_tm = fromNode_tm.selectSingleNode("level").text;
									var from_insd_dept_cd_tm = fromNode_tm.selectSingleNode("insd_dept_cd").text;
									var from_supr_dept_cd_tm = fromNode_tm.selectSingleNode("supr_dept_cd").text;
									var from_sub_cnt_tm = fromNode_tm.selectSingleNode("sub_cnt").text;
										
									var target_dept_nm_tm = targetNode_tm.selectSingleNode("dept_nm").text;
									var target_dept_cd_tm = targetNode_tm.selectSingleNode("dept_cd").text;
									var target_level_tm = targetNode_tm.selectSingleNode("level").text;
									var target_insd_dept_cd_tm = targetNode_tm.selectSingleNode("insd_dept_cd").text;
									var target_supr_dept_cd_tm = targetNode_tm.selectSingleNode("supr_dept_cd").text;
									var target_sub_cnt_tm = targetNode_tm.selectSingleNode("sub_cnt").text;
									
									if(jj > row){
										
										//if(model1.getValue("/root/resData/deptTree/item[" + (jj) + "]/level") == model1.getValue("/root/resData/deptTree/item[" + (jj + 1) + "]/level")){
											
											datagrid1.insertRow(jj - j, "below", "true", "true");
											
											model.setValue("/root/resData/deptTree/item[" + (jj - j + 1) + "]/level", from_level_tm);
											model.setValue("/root/resData/deptTree/item[" + (jj - j + 1) + "]/dept_nm", from_dept_nm_tm);
											model.setValue("/root/resData/deptTree/item[" + (jj - j + 1) + "]/dept_cd", from_dept_cd_tm);
											model.setValue("/root/resData/deptTree/item[" + (jj - j + 1) + "]/insd_dept_cd", from_insd_dept_cd_tm);
											model.setValue("/root/resData/deptTree/item[" + (jj - j + 1) + "]/supr_dept_cd", from_supr_dept_cd_tm);
											
											model.setValue("/root/resData/deptTree/item[" + (jj) + "]/level", target_level_tm);
											model.setValue("/root/resData/deptTree/item[" + (jj) + "]/dept_nm", target_dept_nm_tm);
											model.setValue("/root/resData/deptTree/item[" + (jj) + "]/dept_cd", target_dept_cd_tm);
											model.setValue("/root/resData/deptTree/item[" + (jj) + "]/insd_dept_cd", target_insd_dept_cd_tm);
											model.setValue("/root/resData/deptTree/item[" + (jj) + "]/supr_dept_cd", target_supr_dept_cd_tm);
											
											makeTree();
											datagrid1.deleteRow(jj + 1);
											makeTree();
											
										//}else if(model1.getValue("/root/resData/deptTree/item[" + (jj) + "]/level") != model1.getValue("/root/resData/deptTree/item[" + (jj + 1) + "]/level")){
										 if(model1.getValue("/root/tm_search") == model1.getValue("/root/resData/deptTree/item[" + (jj + 1) + "]/level")){
											
											datagrid1.insertRow(jj - j, "below", "true", "true");
											
											model.setValue("/root/resData/deptTree/item[" + (jj - j + 1) + "]/level", from_level_tm);
											model.setValue("/root/resData/deptTree/item[" + (jj - j + 1) + "]/dept_nm", from_dept_nm_tm);
											model.setValue("/root/resData/deptTree/item[" + (jj - j + 1) + "]/dept_cd", from_dept_cd_tm);
											model.setValue("/root/resData/deptTree/item[" + (jj - j + 1) + "]/insd_dept_cd", from_insd_dept_cd_tm);
											model.setValue("/root/resData/deptTree/item[" + (jj - j + 1) + "]/supr_dept_cd", from_supr_dept_cd_tm);
											
											model.setValue("/root/resData/deptTree/item[" + (jj) + "]/level", target_level_tm);
											model.setValue("/root/resData/deptTree/item[" + (jj) + "]/dept_nm", target_dept_nm_tm);
											model.setValue("/root/resData/deptTree/item[" + (jj) + "]/dept_cd", target_dept_cd_tm);
											model.setValue("/root/resData/deptTree/item[" + (jj) + "]/insd_dept_cd", target_insd_dept_cd_tm);
											model.setValue("/root/resData/deptTree/item[" + (jj) + "]/supr_dept_cd", target_supr_dept_cd_tm);
											
											makeTree();
											datagrid1.deleteRow(jj + 1);
											makeTree();
											model1.setValue("/root/reqData/reqForm/dept_cd", "");
											combo3.refresh();
											makeTree();
											return;
										}
									}
								}
							}
						}
						model1.setValue("/root/reqData/reqForm/dept_cd", "");
						combo3.refresh();
						makeTree();* /
						if(datagrid1.row == "1"){
							//alert("조선일보는 이동 하실 수 없습니다.");
							alert(model1.getValue("/root/resData/cmpy_nm")+"는 이동 하실 수 없습니다.");
							return;
						}
						var row = datagrid1.row;
						var rows = datagrid1.rows;
						var rw = row+1;
						if(rows == row+1){
							alert("상위 이동 할 수 없습니다.");
							return;
						}
						var fromNode = datagrid1.getNode(row); // 선택된 로우
						var targetNode = datagrid1.getNode(row-1); // 선택된 로우 -1
						var ch_fromNode = datagrid1.getNode(row); // 선택된 로우
						var be_targetNode = datagrid1.getNode(row-1); // 선택된 로우 -1
						var af_targetNode = datagrid1.getNode(row+1); // 선택된 로우 +1
						
						var parntNode = model.instances(0).getElementsByTagName("deptTree").nextNode();
						if (row == 2){	
							alert("더 이상 이동할 상위가 없습니다.");
							return;
						}
						var from_dept_nm = fromNode.selectSingleNode("dept_nm").text;
						var from_dept_cd = fromNode.selectSingleNode("dept_cd").text;
						var from_level = fromNode.selectSingleNode("level").text;
						var from_insd_dept_cd = fromNode.selectSingleNode("insd_dept_cd").text;
						var from_supr_dept_cd = fromNode.selectSingleNode("supr_dept_cd").text;
						var from_sub_cnt = fromNode.selectSingleNode("sub_cnt").text;
						
						model1.setValue("/root/tm_search", from_level);
						
						var ch_level = ch_fromNode.selectSingleNode("level").text;
						var be_level = be_targetNode.selectSingleNode("level").text;
						var af_level = af_targetNode.selectSingleNode("level").text;
						
						var bSupr_Node = false;
						var j=1;
						var pNode;
						var Nodelength = 0;
						while (!bSupr_Node){
							pNode = datagrid1.getNode(row-j);
							if(pNode == null){
								alert("null 입니다. 상위 이동 할 수 없습니다.");
								return;
							}
							if (eval(pNode.selectSingleNode("level").text) < eval(fromNode.selectSingleNode("level").text)){
								alert("상위 이동 할 수 없습니다.");
								return;
							}
							if (eval(pNode.selectSingleNode("level").text) == eval(fromNode.selectSingleNode("level").text)){
								bSupr_Node = true;
							}
							j++;
						}
						
						var form_Node = false;
						var z=1;
						var pNode1;
						while (!form_Node){
							pNode1 = datagrid1.getNode(row+z);
							if(pNode1 == null){
								alert("null 입니다. 상위 이동 할 수 없습니다.");
								return;
							}
							if (eval(pNode1.selectSingleNode("level").text) == eval(fromNode.selectSingleNode("level").text)){
								form_Node = true;
							}
							z++;
						}
						
						for(var i = 1; i < z; i++){
							datagrid1.insertRow(row - j + Number(i - 1), "below", "true", "true");
							if(i == 1){
								model.setValue("/root/resData/deptTree/item[" + (row - j + 1 + Number(i - 1)) + "]/level", from_level);
								model.setValue("/root/resData/deptTree/item[" + (row - j + 1 + Number(i - 1)) + "]/dept_nm", from_dept_nm);
								model.setValue("/root/resData/deptTree/item[" + (row - j + 1 + Number(i - 1)) + "]/dept_cd", from_dept_cd);
								model.setValue("/root/resData/deptTree/item[" + (row - j + 1 + Number(i - 1)) + "]/insd_dept_cd", from_insd_dept_cd);
								model.setValue("/root/resData/deptTree/item[" + (row - j + 1 + Number(i - 1)) + "]/supr_dept_cd", from_supr_dept_cd);
							}else if(i != 1){
								var row_tm = datagrid1.row;
								var fromNode_tm = datagrid1.getNode(row_tm + j); // 선택된 로우
								var from_dept_nm_tm = fromNode_tm.selectSingleNode("dept_nm").text;
								var from_dept_cd_tm = fromNode_tm.selectSingleNode("dept_cd").text;
								var from_level_tm = fromNode_tm.selectSingleNode("level").text;
								var from_insd_dept_cd_tm = fromNode_tm.selectSingleNode("insd_dept_cd").text;
								var from_supr_dept_cd_tm = fromNode_tm.selectSingleNode("supr_dept_cd").text;
								var from_sub_cnt_tm = fromNode_tm.selectSingleNode("sub_cnt").text;
								model.setValue("/root/resData/deptTree/item[" + (row - j + 1 + Number(i - 1)) + "]/level", from_level_tm);
								model.setValue("/root/resData/deptTree/item[" + (row - j + 1 + Number(i - 1)) + "]/dept_nm", from_dept_nm_tm);
								model.setValue("/root/resData/deptTree/item[" + (row - j + 1 + Number(i - 1)) + "]/dept_cd", from_dept_cd_tm);
								model.setValue("/root/resData/deptTree/item[" + (row - j + 1 + Number(i - 1)) + "]/insd_dept_cd", from_insd_dept_cd_tm);
								model.setValue("/root/resData/deptTree/item[" + (row - j + 1 + Number(i - 1)) + "]/supr_dept_cd", from_supr_dept_cd_tm);
							}
							makeTree();
							datagrid1.deleteRow(row + 1 + Number(i - 1));
							makeTree();
						}
						model1.setValue("/root/reqData/reqForm/dept_cd", "");
						//combo3.refresh();
						makeTree();
						*/
					]]>
			</script>
		</button>
		<button id="button10" class="btn04" disabled="true" visibility="hidden" style="left:290px; top:660px; width:88px; height:21px; ">
			<caption>하위이동</caption>
			<script type="javascript" ev:event="onclick">
				<![CDATA[
					if(treeview1.value=="" || input1.value=="") return;
				
					model.setValue("/root/reqData/reqForm/cmpy_cd", getProperty("ss_cmpycd"));
					model.setValue("/root/reqData/reqForm/acct_cd", treeview1.value);
					model.setValue("/root/reqData/reqForm/acct_type_cd", "002");
					model.setValue("/root/reqData/reqForm/acct_nm", treeview1.label);
					model.setValue("/root/reqData/reqForm/flag", "1");
					model.send("fc_acct_1026_u");
				
					if( model.getValue("/root/tempData/errmsg") != "") {
						alert(model.getValue("/root/tempData/errmsg"));
						model.removenode("/root/tempData");
					} else {
						loadAll();
					}
					
					/*
						if(datagrid1.row == "1"){
							//alert("조선일보는 이동 하실 수 없습니다.");
							alert(model1.getValue("/root/resData/cmpy_nm")+"는 이동 하실 수 없습니다.");
							
							return;
						}
						var row = datagrid1.row;
						var rows = datagrid1.rows;
						var fromNode = datagrid1.getNode(row); // 선택된 로우
						var targetNode = datagrid1.getNode(row+1); // 선택된 로우 +1
						var ch_fromNode = datagrid1.getNode(row); // 선택된 로우
						var af_targetNode = datagrid1.getNode(row+1); // 선택된 로우 +1
						var af2_targetNode = datagrid1.getNode(row+2); // 선택된 로우 +2
						var be_targetNode = datagrid1.getNode(row-1); // 선택된 로우 -1
						
						var parntNode = model.instances(0).getElementsByTagName("deptTree").nextNode();
						
						if (row == (rows - 1)){
							alert("더 이상 이동할 하위가 없습니다.");
							return;
						}
						var from_dept_nm = fromNode.selectSingleNode("dept_nm").text;
						var from_dept_cd = fromNode.selectSingleNode("dept_cd").text;
						var from_level = fromNode.selectSingleNode("level").text;
						var from_insd_dept_cd = fromNode.selectSingleNode("insd_dept_cd").text;
						var from_supr_dept_cd = fromNode.selectSingleNode("supr_dept_cd").text;
						var from_sub_cnt = fromNode.selectSingleNode("sub_cnt").text;
						
						model1.setValue("/root/tm_search", from_level);
							
						var target_dept_nm = targetNode.selectSingleNode("dept_nm").text;
						var target_dept_cd = targetNode.selectSingleNode("dept_cd").text;
						var target_level = targetNode.selectSingleNode("level").text;
						var target_insd_dept_cd = targetNode.selectSingleNode("insd_dept_cd").text;
						var target_supr_dept_cd = targetNode.selectSingleNode("supr_dept_cd").text;
						var target_sub_cnt = targetNode.selectSingleNode("sub_cnt").text;
						
						var bSupr_Node = false;
						var j=1;
						var pNode;
						var Nodelength = 0;
						while (!bSupr_Node){
							pNode = datagrid1.getNode(row + j);
							if(pNode == null){
								alert("null1 입니다. 하위 이동 할 수 없습니다.");
								return;
							}
							if (eval(pNode.selectSingleNode("level").text) < eval(fromNode.selectSingleNode("level").text)){
								alert("하위 이동 할 수 없습니다.");
								return;
							}
							if (eval(pNode.selectSingleNode("level").text) == eval(fromNode.selectSingleNode("level").text)){
								bSupr_Node = true;
								Nodelength = pNode.selectSingleNode("sub_cnt").text;
							}
							j++;
						}
						var i_tm2 = (Number(row) - Number(j - 1));
						var j_tm2 = (Number(row) + Number(j - 1));
						
						var bSupr_Node_tm = false;
						var j_tm=1;
						var pNode_tm;
						var Nodelength_tm = 0;
						while (!bSupr_Node_tm){
							pNode_tm = datagrid1.getNode(j_tm2 + j_tm);
							if(pNode_tm == null){
								alert("null 2입니다. 하위 이동 할 수 없습니다.");
								return;
							}
							if ((eval(pNode_tm.selectSingleNode("level").text) == eval(fromNode.selectSingleNode("level").text)) || (eval(pNode_tm.selectSingleNode("level").text) < eval(fromNode.selectSingleNode("level").text))){
								bSupr_Node_tm = true;
								Nodelength_tm = pNode_tm.selectSingleNode("sub_cnt").text;
							}
							j_tm++;
						}
						var i_tm1 = (Number(j_tm2) - Number(j_tm - 1));
						var j_tm1 = (Number(j_tm2) + Number(j_tm - 1));
						
						var ii_tm = j_tm;
						var jj_tm = j_tm1;
						
						var ch_level = ch_fromNode.selectSingleNode("level").text;
						var be_level = be_targetNode.selectSingleNode("level").text;
						var af_level = af_targetNode.selectSingleNode("level").text;
						var af2_level = af2_targetNode.selectSingleNode("level").text;
						
						var rows = datagrid1.rows; // 총그리드수
						
						if((j_tm2 == Number(i_tm2 + 2)) && (af_level < af2_level)){
							datagrid1.insertRow(j_tm1 -1, "below", "true", "true");
							
							model.setValue("/root/resData/deptTree/item[" + (j_tm1) + "]/level", from_level);
							model.setValue("/root/resData/deptTree/item[" + (j_tm1) + "]/dept_nm", from_dept_nm);
							model.setValue("/root/resData/deptTree/item[" + (j_tm1) + "]/dept_cd", from_dept_cd);
							model.setValue("/root/resData/deptTree/item[" + (j_tm1) + "]/insd_dept_cd", from_insd_dept_cd);
							model.setValue("/root/resData/deptTree/item[" + (j_tm1) + "]/supr_dept_cd", from_supr_dept_cd);
							
							makeTree();
							datagrid1.deleteRow(row);
							makeTree();
							model1.setValue("/root/reqData/reqForm/dept_cd", "");
							//combo3.refresh();
							makeTree();
							return;
						}
						
						if((j_tm2 == Number(i_tm2 + 2)) && (af_level = af2_level)){
							datagrid1.insertRow(row + 1, "below", "true", "true");
							
							model.setValue("/root/resData/deptTree/item[" + (row +2) + "]/level", from_level);
							model.setValue("/root/resData/deptTree/item[" + (row +2) + "]/dept_nm", from_dept_nm);
							model.setValue("/root/resData/deptTree/item[" + (row +2) + "]/dept_cd", from_dept_cd);
							model.setValue("/root/resData/deptTree/item[" + (row +2) + "]/insd_dept_cd", from_insd_dept_cd);
							model.setValue("/root/resData/deptTree/item[" + (row +2) + "]/supr_dept_cd", from_supr_dept_cd);
							
							makeTree();
							datagrid1.deleteRow(row);
							makeTree();
						}
						if(j_tm2 != Number(i_tm2 + 2)){
							datagrid1.insertRow(Number(jj_tm -1), "below", "true", "true");
							
							model.setValue("/root/resData/deptTree/item[" + (jj_tm) + "]/level", from_level);
							model.setValue("/root/resData/deptTree/item[" + (jj_tm) + "]/dept_nm", from_dept_nm);
							model.setValue("/root/resData/deptTree/item[" + (jj_tm) + "]/dept_cd", from_dept_cd);
							model.setValue("/root/resData/deptTree/item[" + (jj_tm) + "]/insd_dept_cd", from_insd_dept_cd);
							model.setValue("/root/resData/deptTree/item[" + (jj_tm) + "]/supr_dept_cd", from_supr_dept_cd);
							
							makeTree();
							datagrid1.deleteRow(row);
							makeTree();
							
							if((be_level == af_level) || (be_level < ch_level) || (ch_level < af_level)){
							
								var rows = datagrid1.rows; // 총그리드수
								
								for(var jj = 1; jj < rows; jj++){
								
									var row_tm = datagrid1.row;
									var fromNode_tm = datagrid1.getNode(row_tm); // 선택된 로우
									var targetNode_tm = datagrid1.getNode(row_tm + 1); // 선택된 로우 +1
									
									var from_dept_nm_tm = fromNode_tm.selectSingleNode("dept_nm").text;
									var from_dept_cd_tm = fromNode_tm.selectSingleNode("dept_cd").text;
									var from_level_tm = fromNode_tm.selectSingleNode("level").text;
									var from_insd_dept_cd_tm = fromNode_tm.selectSingleNode("insd_dept_cd").text;
									var from_supr_dept_cd_tm = fromNode_tm.selectSingleNode("supr_dept_cd").text;
									var from_sub_cnt_tm = fromNode_tm.selectSingleNode("sub_cnt").text;
										
									var target_dept_nm_tm = targetNode_tm.selectSingleNode("dept_nm").text;
									var target_dept_cd_tm = targetNode_tm.selectSingleNode("dept_cd").text;
									var target_level_tm = targetNode_tm.selectSingleNode("level").text;
									var target_insd_dept_cd_tm = targetNode_tm.selectSingleNode("insd_dept_cd").text;
									var target_supr_dept_cd_tm = targetNode_tm.selectSingleNode("supr_dept_cd").text;
									var target_sub_cnt_tm = targetNode_tm.selectSingleNode("sub_cnt").text;
									
									if(jj > row){
										if(model1.getValue("/root/tm_search") != model1.getValue("/root/resData/deptTree/item[" + (row_tm + 1) + "]/level")){
											datagrid1.insertRow(Number(jj_tm -1), "below", "true", "true");
											
											model.setValue("/root/resData/deptTree/item[" + (jj_tm) + "]/level", from_level_tm);
											model.setValue("/root/resData/deptTree/item[" + (jj_tm) + "]/dept_nm", from_dept_nm_tm);
											model.setValue("/root/resData/deptTree/item[" + (jj_tm) + "]/dept_cd", from_dept_cd_tm);
											model.setValue("/root/resData/deptTree/item[" + (jj_tm) + "]/insd_dept_cd", from_insd_dept_cd_tm);
											model.setValue("/root/resData/deptTree/item[" + (jj_tm) + "]/supr_dept_cd", from_supr_dept_cd_tm);
											
											makeTree();
											datagrid1.deleteRow(row);
											makeTree();
										}else if(model1.getValue("/root/tm_search") == model1.getValue("/root/resData/deptTree/item[" + (row_tm + 1) + "]/level")){
											
											datagrid1.insertRow(Number(jj_tm - 1), "below", "true", "true");
											
											model.setValue("/root/resData/deptTree/item[" + (jj_tm) + "]/level", from_level_tm);
											model.setValue("/root/resData/deptTree/item[" + (jj_tm) + "]/dept_nm", from_dept_nm_tm);
											model.setValue("/root/resData/deptTree/item[" + (jj_tm) + "]/dept_cd", from_dept_cd_tm);
											model.setValue("/root/resData/deptTree/item[" + (jj_tm) + "]/insd_dept_cd", from_insd_dept_cd_tm);
											model.setValue("/root/resData/deptTree/item[" + (jj_tm) + "]/supr_dept_cd", from_supr_dept_cd_tm);
											
											makeTree();
											datagrid1.deleteRow(row);
											makeTree();
											model1.setValue("/root/reqData/reqForm/dept_cd", "");
											//combo3.refresh();
											makeTree();
											return;
										}
									}
								}
							}
						}
						model1.setValue("/root/reqData/reqForm/dept_cd", "");
						//combo3.refresh();
						makeTree();
						*/
					]]>
			</script>
		</button>
		<datagrid id="datagrid1" nodeset="/root/resData/gridData/record" dropmode="true" scroll="autovscroll" caption="^로직^코드^" colsep="^" colwidth="24,381,100,1" rowheader="update" rowsep="|" style="left:525px; top:135px; width:385px; height:160px; text-align:left; vertical-align:middle; ">
			<col checkvalue="Y,N" disabled="false" type="checkbox"/>
			<col ref="acct_subj_nm"/>
			<col ref="insd_acct_cd" visibility="hidden"/>
			<col ref="tot_yn" visibility="hidden"/>
			<script type="javascript" ev:event="onclick">
				<![CDATA[
				var col = datagrid1.col;
				var row = datagrid1.row;
				
				if(datagrid1.fixedCols == col){
					ch_value(row,col);
				}
				]]>
			</script>
			<script type="javascript" ev:event="ondrop">
				<![CDATA[
					event.dropDataType = "text"; 
					var aaa = event.dropData;
					alert(aaa);
				]]>
			</script>
		</datagrid>
		<!--caption id="caption4" class="list_cap02" style="left:604px; top:385px; width:306px; height:26px; text-align:center; "/>
		<caption id="caption5" class="list_cap01" style="left:525px; top:385px; width:85px; height:26px; text-align:center; ">시산계정코드</caption-->
		<!--input id="srch_acct_cd" ref="/root/reqData/searchData/acct_cd" maxlength="9" style="left:615px; top:389px; width:80px; height:18px; ">
			<script type="javascript" ev:event="xforms-value-changed">
				<![CDATA[					
					if(srch_acct_cd.value.length == 9) {
						model.setValue("/root/reqData/searchData/cmpy_cd", "100");
						set_refvalue(srch_acct_subj_nm,"");
						model.send("fc_acct_1022_l");
						srch_acct_subj_nm.refresh();
						//set_refvalue(srch_acct_subj_nm, get_refvalue("/root/resData/resform/dataSet/CURLIST/record/acct_subj_nm"));
					}		
					else{
						set_refvalue(srch_acct_subj_nm,"");
						srch_acct_subj_nm.refresh();
					}		
				]]>
			</script>
		</input-->
		<!--output id="srch_acct_subj_nm" ref="/root/reqData/searchData/acct_nm" style="left:700px; top:389px; width:145px; height:18px; "/-->
		<button id="button2" class="btn02" style="left:530px; top:305px; width:52px; height:21px; ">
			<caption>▲ 추가</caption>
			<script type="javascript" ev:event="onclick">
				<![CDATA[
				var a = "";
				var selcnt = 0;
				
				if(input1.value=="") {
					alert("먼저 계정코드를 선택해 주세요");
					return;
				}

				if(model.getValue("/root/resData/tab_mode")=="1") {
								
					for(var i=1; i<datagrid2.rows; i++) {
						if( datagrid2.valueMatrix(i,1)  == "Y" ) {

							if(!check_griddata(datagrid2.valueMatrix(i,4))) {
								
								//중복사용계정여부 확인
								model.removenode("/root/resultDataSet");
								model.setValue("/root/reqData/searchData/cmpy_cd", 		getProperty("ss_cmpycd"));
								model.setValue("/root/reqData/searchData/acct_type_cd", "002");
								model.setValue("/root/reqData/searchData/acct_cd", 		datagrid2.valueMatrix(i, datagrid2.colRef("insd_acct_cd")));
								model.send("fc_acct_1027_a");
								
								if( model.getValue("/root/errData/errcode") == "") {
									if(datagrid1.valueMatrix(1,2) != "") datagrid1.addItem();
									
									datagrid1.valueMatrix( datagrid1.rows-1, 2 ) = datagrid2.valueMatrix(i, 3);
									datagrid1.valueMatrix( datagrid1.rows-1, 3 ) = datagrid2.valueMatrix(i, 4);
									selcnt++;
								}

							}

							datagrid2.valueMatrix(i,1) = "N";
						}
					}
				} else {
					for(var i=1; i<datagrid3.rows; i++) {
						if( datagrid3.valueMatrix(i,1)  == "Y" ) {
							
							if(!check_griddata(datagrid3.valueMatrix(i,3))) {

								if(datagrid1.valueMatrix(1,2) != "") datagrid1.addItem();
								
								datagrid1.valueMatrix( datagrid1.rows-1, 2 ) = datagrid3.valueMatrix(i, 4);
								datagrid1.valueMatrix( datagrid1.rows-1, 3 ) = datagrid3.valueMatrix(i, 3);
								datagrid1.valueMatrix( datagrid1.rows-1, 4 ) = "Y";
								selcnt++;
								
							}
							
							datagrid3.valueMatrix(i,1) = "N";

						}
					}
				}
				
				if(selcnt > 0) {
				}
				]]>
			</script>
		</button>
		<button id="button3" class="btn02" style="left:585px; top:305px; width:52px; height:21px; ">
			<caption>▼ 제거</caption>
			<script type="javascript" ev:event="onclick">
				<![CDATA[

				if(datagrid1.rows==2) {
					if(datagrid1.valueMatrix(1,2) == "") return;
				}

				for(var i=1; i<datagrid1.rows; i++) {
					if(datagrid1.valueMatrix(i,1) == "Y") {
						datagrid1.rowHidden(i) = true;
					}
				}
				
				for(var i=datagrid1.rows; i>=1; i--) {
					if(datagrid1.valueMatrix(i,1) == "Y") {
						datagrid1.deleteRow(i);
					}
				}
				
				datagrid1.refresh();
				if(datagrid1.rows<=1) datagrid1.addItem();

				]]>
			</script>
		</button>
		<button id="button5" class="btn02" style="left:855px; top:305px; width:52px; height:21px; ">
			<caption>저장</caption>
			<script type="javascript" ev:event="onclick">
				<![CDATA[
				var selIdx = treeview1.focusIndex;
				var cd_list = "";
				var tit_flag = "";
				
				if(input1.value=="") return;
				
				if(input2.value=="") {
					alert("계정명을 입력해 주세요");
					return;
				}
				
				
				if(windowConfirm("저장 하시겠습니까?")) {
					for(var i=1; i<datagrid1.rows;i++) {
						if(datagrid1.valueMatrix(i,4) == "Y") {
							tit_flag = ".";
						} else {
							tit_flag = "";
						}
						
						cd_list = cd_list + datagrid1.valueMatrix(i,3) + tit_flag + "^";
					}
					
					cd_list = cd_list.substring(0, cd_list.length-1 );
					
					model.setValue("/root/reqData/reqForm/acct_nm", input2.value);
					model.setValue("/root/reqData/reqForm/acct_logic", cd_list);
					model.send("fc_acct_1023_u");
	
					model.setValue("/root/reqData/searchData/cmpy_cd", getProperty("ss_cmpycd"));
					model.setValue("/root/reqData/searchData/acct_type_cd", "002");
					model.send("fc_acct_1020_m");
					model.copyNode("/root/initData/dataSet/curList", "/root/tempData/curList");
					model.copyNode("/root/initData/gridData", "/root/tempData2/gridData");
					model.refresh();
					datagrid3.refresh();
					expandAll();
					
					model.removenode("/root/tempData");
					model.removenode("/root/tempData2");
					
					treeview1.select(selIdx);
					treeview1.dispatch("onclick");
					//button7.dispatch("onclick");
				}
				
				]]>
			</script>
		</button>
		<!--button id="button11" class="btn02" style="left:855px; top:388px; width:52px; height:21px; ">
			<caption>조회</caption>
			<script type="javascript" ev:event="onclick">
				<![CDATA[
					model.send("fc_acct_1022_l");
					model.copyNode("/root/resData/gridAcctData", "/root/tempData/curList");
					datagrid2.refresh();
					model.removenode("/root/tempData");
					]]>
			</script>
		</button-->
		<switch id="switch1" style="left:515px; top:385px; width:400px; height:265px; ">
			<case id="case1">
				<caption id="caption4" class="list_cap02" style="left:1px; top:1px; width:395px; height:26px; text-align:center; "/>
				<caption id="caption5" class="list_cap01" style="left:1px; top:1px; width:85px; height:26px; text-align:center; ">내부계정코드</caption>
				<input id="srch_acct_cd" ref="/root/reqData/searchData/acct_cd" maxlength="9" style="left:90px; top:5px; width:80px; height:18px; ">
					<script type="javascript" ev:event="xforms-value-changed">
						<![CDATA[					
							if(srch_acct_cd.value.length == 9) {
								model.setValue("/root/reqData/searchData/cmpy_cd", getProperty("ss_cmpycd"));
								set_refvalue(srch_acct_subj_nm,"");
								model.send("fc_acct_1022_l");
								
								model.copyNode("/root/resData/gridAcctData", "/root/tempData/curList");
								datagrid2.refresh();
								//removenode("/root/tempData");
								//srch_acct_subj_nm.refresh();
								//set_refvalue(srch_acct_subj_nm, get_refvalue("/root/resData/resform/dataSet/CURLIST/record/acct_subj_nm"));
							}		
							else{
								set_refvalue(srch_acct_subj_nm,"");
								srch_acct_subj_nm.refresh();
							}		
						]]>
					</script>
				</input>
				<input id="srch_acct_subj_nm" ref="/root/reqData/searchData/acct_nm" style="left:173px; top:5px; width:140px; height:18px; ">
					<script type="javascript" ev:event="onkeydown">
						<![CDATA[
							if(event.keyCode == 13) {
								model.setValue("/root/reqData/searchData/acct_cd", srch_acct_cd.currentText);
								model.setValue("/root/reqData/searchData/acct_nm", srch_acct_subj_nm.currentText);
								button11.dispatch("onclick");
								//alert(srch_acct_subj_nm.currentText + " : " + model.getValue("/root/reqData/searchData/acct_cd") + " : " + model.getValue("/root/reqData/searchData/acct_nm"));
							}
						]]>
					</script>
				</input>
				<button id="button11" class="btn02" style="left:316px; top:4px; width:52px; height:21px; ">
					<caption>조회</caption>
					<script type="javascript" ev:event="onclick">
						<![CDATA[
							model.send("fc_acct_1022_l");
							model.copyNode("/root/resData/gridAcctData", "/root/tempData/curList");
							datagrid2.refresh();
							model.removenode("/root/tempData");
							]]>
					</script>
				</button>
				<datagrid id="datagrid2" nodeset="/root/resData/gridAcctData/record" scroll="auto" caption="^외부계정코드^계정과목명^내부계정코드" colsep="^" colwidth="24, 59, 193, 110" mergecellsfixedrows="bycolrec" rowheader="seq" rowsep="|" style="left:0px; top:30px; width:395px; height:232px; ">
					<col checkvalue="Y,N" disabled="false" type="checkbox"/>
					<col ref="acct_cd"/>
					<col ref="acct_subj_nm"/>
					<col ref="insd_acct_cd"/>
					<script type="javascript" ev:event="ondblclick">
						<![CDATA[
						if(input1.value=="") {
							alert("계정코드선택");
							return;
						}
						
						if ((datagrid2.mouseCol > 0) && (datagrid2.mouseCol < datagrid2.cols) && (datagrid2.mouseRow >= datagrid2.fixedRows)){
							var i = datagrid2.row;
							var k = datagrid1.rows;
							
							//alert(datagrid2.valueMatrix(i, 1) + "^" + datagrid2.valueMatrix(i, 2) + " : " + k + " " + input1.value);

							//자료 존재여부 체크							
							for(var v=0; v<k; v++) {
								if(datagrid1.valueMatrix(v,3) == datagrid2.valueMatrix(i, 4)) {
									return;
								}
							}
							
							
							if( input1.value != "" ) {
								if(datagrid1.valueMatrix(1,2) != "") datagrid1.addItem();
								
								datagrid1.valueMatrix( datagrid1.rows-1, 2 ) = datagrid2.valueMatrix(i, 3);
								datagrid1.valueMatrix( datagrid1.rows-1, 3 ) = datagrid2.valueMatrix(i, 4);
							}

							
							datagrid1.refresh();

						}
					]]>
					</script>
				</datagrid>
				<button id="button14" class="btn05" style="left:371px; top:4px; width:20px; height:21px; ">
					<caption>-</caption>
					<script type="javascript" ev:event="onclick">
						<![CDATA[
							set_refvalue(srch_acct_cd,"");
							set_refvalue(srch_acct_subj_nm,"");
						]]>
					</script>
				</button>
			</case>
			<case id="case2" selected="true">
				<datagrid id="datagrid3" nodeset="/root/initData/gridData/record" scroll="autovscroll" caption="^계층정보^ ^" colsep="^" colwidth="24,102,14,14" mergecellsfixedrows="bycolrec" rowheader="seq" rowsep="|" style="left:0px; top:0px; width:395px; height:262px; text-align:left; vertical-align:middle; ">
					<col checkvalue="Y,N" disabled="false" type="checkbox"/>
					<col ref="title_nm"/>
					<col ref="acct_cd" visibility="hidden"/>
					<col ref="acct_nm" visibility="hidden"/>
					<script type="javascript" ev:event="ondblclick">
						<![CDATA[

							if(input1.value=="") {
								alert("계정코드선택");
								return;
							}
							
							if ((datagrid3.mouseCol > 0) && (datagrid3.mouseCol < datagrid3.cols) && (datagrid3.mouseRow >= datagrid3.fixedRows)){
								var i = datagrid3.row;
								var k = datagrid1.rows;
								
								
								//자료 존재여부 체크							
								for(var v=0; v<k; v++) {
									if(datagrid1.valueMatrix(v,3) == datagrid3.valueMatrix(i, 3)) {
										return;
									}
								}
								
								
								if( input1.value != "" ) {
									if(datagrid1.valueMatrix(1,2) != "") datagrid1.addItem();
									
									datagrid1.valueMatrix( datagrid1.rows-1, 2 ) = datagrid3.valueMatrix(i, 4);
									datagrid1.valueMatrix( datagrid1.rows-1, 3 ) = datagrid3.valueMatrix(i, 3);
									datagrid1.valueMatrix( datagrid1.rows-1, 4 ) = "Y";
									datagrid3.valueMatrix(i,1) = "N";
								}
								
								datagrid1.refresh();
							}

						]]>
					</script>
				</datagrid>
			</case>
		</switch>
		<button id="button12" class="tab05" group="tab" style="left:518px; top:362px; width:92px; height:23px; ">
			<caption>계정코드조회</caption>
			<script type="javascript" ev:event="onclick">
				<![CDATA[
							model.toggle("case1");
							model.setValue("/root/resData/tab_mode" , "1");
						]]>
			</script>
		</button>
		<button id="button13" class="tab05" group="tab" style="left:611px; top:362px; width:92px; height:23px; ">
			<caption>계층정보</caption>
			<script type="javascript" ev:event="onclick">
				<![CDATA[
							model.toggle("case2");
							model.setValue("/root/resData/tab_mode" , "2");
				]]>
			</script>
		</button>
		<caption id="caption6" class="tit02" style="left:15px; top:80px; width:205px; height:20px; font-weight:bold; ">재무상태표 계층정보</caption>
	</xhtml:body>
</xhtml:html>

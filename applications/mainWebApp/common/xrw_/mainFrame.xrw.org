<?xml version="1.0" encoding="EUC-KR"?>
<?xml-stylesheet href="/css/style_sheet.css" type="text/css" ?>
<xhtml:html xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/2002/01/xforms" xmlns:ev="http://www.w3.org/2001/xml-events">
	<xhtml:head>
		<xhtml:title>조선일보통합정보지원시스템</xhtml:title>
		<model id="model1">
			<instance id="instance1">
				<root xmlns="">
					<initData/>
					<reqData>
						<mainID/>
					</reqData>
					<resData/>
					<tempData>
						<treevalue/>
						<treemenu>
							<label>C I I S</label>
							<value/>
							<img/>
							<simg/>
							<crud/>
							<url/>
						</treemenu>
					</tempData>
					<temp_copy>
						<blank>
							<treemenu>
								<label/>
								<value/>
								<img/>
								<simg/>
								<crud/>
								<url/>
							</treemenu>
						</blank>
						<temp>
							<treemenu>
								<label/>
								<value/>
								<img/>
								<simg/>
								<crud/>
								<url/>
							</treemenu>
						</temp>
						<treemenu>
							<label/>
							<value/>
							<img/>
							<simg/>
							<crud/>
							<url/>
						</treemenu>
						<temp2>
							<treemenu>
								<label/>
								<value/>
								<img/>
								<simg/>
								<crud/>
								<url/>
							</treemenu>
						</temp2>
						<temp3>
							<treemenu>
								<label/>
								<value/>
								<img/>
								<simg/>
								<crud/>
								<url/>
							</treemenu>
						</temp3>
						<crudNode>
							<crud/>
						</crudNode>
						<urlNode>
							<url/>
						</urlNode>
					</temp_copy>
				</root>
			</instance>
			<instance id="instance2">
				<root/>
			</instance>
			<instance id="instance3">
				<root/>
			</instance>
			<submission id="submission1" action="/co/mng/1000" mediatype="application/x-www-form-urlencoded" method="post" resultref="instance(&quot;instance2&quot;)/Menu"/>
			<submission id="submission2" action="/co/mng/1010" mediatype="application/x-www-form-urlencoded" method="post" resultref="instance(&quot;instance3&quot;)/Sub"/>
			<!--
			<submission id="submission1" action="../jsp/menu.jsp" mediatype="application/x-www-form-urlencoded" method="post" resultref="instance(&quot;instance2&quot;)/Menu"/>
			<submission id="submission2" action="../jsp/leftmenu.jsp" mediatype="application/x-www-form-urlencoded" method="post" resultref="instance(&quot;instance3&quot;)/Sub"/>
			-->
			<script type="javascript" ev:event="xforms-ready">
				<![CDATA[
				model.send("submission1");
				]]>
			</script>
			<script type="javascript" ev:event="xforms-submit-done">
				<![CDATA[
				setSessionInfo();
				setFrameworkInfo();
				setFrameStyle();
				loadMenuXml();
				createTabButton("기본창", 0);
				]]>
			</script>
		</model>
		<script type="javascript" src="/js/TFCommon.js"/>
		<script type="javascript">
			<![CDATA[
/*******************************************************************************************************************************************************
// 글로벌 변수 관련 설정
*******************************************************************************************************************************************************/
var g_TabBtnWidth = 130;			// Tab Button의 길이
var g_TabBtnHeight = 25;			// Tab Button의 높이
var g_TaskBtnWidth = 130;			// Task Button의 길이
var g_TaskBtnHeight = 25;			// Task Button의 높이
var g_MDIWindowWidth = 982;		// MDI Window 창 크기
var g_MDIWindowHeight = 770;	// MDI Window 창 크기


/*******************************************************************************************************************************************************
// Framework 관련 함수
*******************************************************************************************************************************************************/

/***************************************************
// 함 수 명 : setSessionInfo
// 내     용  : Session Information를 얻어와서 property로 저장
// 작 성 자 : 양정녕
// 작 성 일 : 2008-10-29
***************************************************/
function setSessionInfo()
{
	var obj = htmldocument.SessionInfo;
	
	setProperty("ss_uid"       	  , obj.uid.value);       
	setProperty("ss_emp_no"       , obj.emp_no.value);    
	setProperty("ss_emp_nm"       , obj.emp_nm.value);    
	setProperty("ss_cmpycd"       , obj.cmpycd.value);    
	setProperty("ss_deptcd"       , obj.deptcd.value);    
	setProperty("ss_deptnm"       , obj.deptnm.value);    
	setProperty("ss_selldeptcd"   , obj.selldeptcd.value);
	setProperty("ss_selldeptnm"   , obj.selldeptnm.value);
	setProperty("ss_areacd"       , obj.areacd.value);    
	setProperty("ss_areanm"       , obj.areanm.value);    
	setProperty("ss_deptplacyn"   , obj.deptplacyn.value);
    	setProperty("ss_jobcd"        , obj.jobcd.value);     
    	setProperty("ss_jobnm"        , obj.jobnm.value);     
    	setProperty("ss_posicd"       , obj.posicd.value);    
   	setProperty("ss_posinm"       , obj.posinm.value);    
    	setProperty("ss_usertypecd"   , obj.usertypecd.value);
    	setProperty("ss_usertypenm"   , obj.usertypenm.value);
    	setProperty("ss_email"        , obj.email.value);     
    	setProperty("ss_dealdeptcd"   , obj.dealdeptcd.value);
    	setProperty("ss_dealdeptnm"   , obj.dealdeptnm.value);
    	setProperty("ss_hdqtcd"       , obj.hdqtcd.value);    
    	setProperty("ss_hdqtnm"       , obj.hdqtnm.value);    
    	setProperty("ss_partcd"       , obj.partcd.value);    
    	setProperty("ss_partnm"       , obj.partnm.value);    
    	setProperty("ss_hdqtplacyn"   , obj.hdqtplacyn.value);
    	setProperty("ss_partplacyn"   , obj.partplacyn.value);
    	setProperty("ss_dealmedicd"   , obj.dealmedicd.value);
    	setProperty("ss_domainnm"   , obj.domainnm.value);
	
/*	
	ss_id.text = getProperty("ss_id");
	ss_nm.text = getProperty("ss_nm");
	ss_dept_nm.text = getProperty("ss_dept_nm");
	ss_comp_nm.text = getProperty("ss_comp_nm");
*/	
}

/***************************************************
// 함 수 명 : setFrameworkInfo
// 내     용 : Framework Information를  property로 저장
// 작 성 자 : 컴스퀘어 이재훈
// 작 성 일 : 2007-10-01
***************************************************/
function setFrameworkInfo()
{
		var strLocation = document.location;
		
		setProperty("frameworkType"		, "MDI1");
		setProperty("workwindowCount"	, "1");
		setProperty("mdiCount"				, "10");
		setProperty("windowFlag"			, "POPUP");
		setProperty("execMode"				, "REAL");
		//setProperty("domainName"			, "http://localhost:8000");	
		setProperty("domainName"			, strLocation);
		setProperty("leftFlag"					, "YES");
		setProperty("topFlag"					, "NO");	
		setProperty("taskFlag"				, "YES");
		setProperty("menuUrl"				, "/common/jsp/menu.jsp");
		setProperty("leftmenuUrl"			, "/common/jsp/leftmenu.jsp");
}

/***************************************************
// 함 수 명 : setFrameStyle
// 내     용 : Framework Information에 따라 Frame 설정
// 작 성 자 : 컴스퀘어 이재훈
// 작 성 일 : 2007-10-01
***************************************************/
function setFrameStyle()
{
	mainTab.visible = false;
	// Task Frame이 보이기 위해 Top/Tab Frame 높이 만큼 margin-bottom을 설정해야 함
	var topH = 0;
	
	// Top/Tab Frame 설정
	if (getProperty("frameworkType") == "SDI1" || getProperty("frameworkType") == "MDI1") {
		mainTab.visible = false;
		
		if (getProperty("topFlag") == "NO") {
			mainTop.visible = false;
			mainFrame.attribute("top") = "0px";
		}
		else  {
			topH = parseInt(mainTop.attribute("height").replace(/px/, ""));
			mainFrame.attribute("top") = topH + "px";
		}
	}
	else {
		if (getProperty("topFlag") == "NO") {
			topH = parseInt(mainTab.attribute("height").replace(/px/, ""));
			mainTop.visible = false;
			mainTab.attribute("top") = "0px";
			mainFrame.attribute("top") = topH + "px";
		}
		else  {
			topH += parseInt(mainTop.attribute("height").replace(/px/, "")) + parseInt(mainTab.attribute("height").replace(/px/, ""));
			mainFrame.attribute("top") = topH + "px";
		}
	}
	
	// Task Frame 설정
	if (getProperty("taskFlag") == "NO") {
		mainTask.visible = false;
	}
	else {
		topH += parseInt(mainTask.attribute("height").replace(/px/, ""));
	}
	
	// Task Frame이 보이기 위해서 margin-bottom setting
	mainFrame.attribute("margin-bottom") = topH + "px";
	
	// Task Button - Cascade/Tile/Closeall  setting
	if (getProperty("frameworkType") == "SDI1" || getProperty("frameworkType") == "SDI2") {
		btnCascade.visible = false;
		btnTile.visible = false;
		btnCloseall.visible = false;
	}
	
	// Left Frame 설정
	if (getProperty("leftFlag") == "NO") {
		btnTree.visible = false;
	}
	else if (getProperty("leftFlag") == "ALWAYS") {
		btnTree.visible = false;
		onBtnTree();
	}
}

/***************************************************
// 함 수 명 : loadMenuXml
// 내     용 : Menu XML File을 Memory에 Load
// 작 성 자 : 컴스퀘어 이재훈
// 작 성 일 : 2007-10-01
***************************************************/
function loadMenuXml()
{	
	// menu 데이터 로딩
	//var menuPath = getProperty("menuUrl");
	//model.instances(1).load(menuPath);
	
	var ins = model.instances(1);
	var main_cnt = ins.selectSingleNode("Main").length;
	var selectNode = model.instances(0).selectSingleNode("root/tempData/treemenu");
	var main_label;
	var main_value;
	
	for (var i = 0; i < main_cnt; i++) {
		nodeList = ins.getElementsByTagName("Main["+(i+1)+"]").nextNode();
		main_label = nodeList.getAttribute("name");
		main_value = nodeList.getAttribute("itemID");
		
		model.setValue("/root/temp_copy/treemenu/label",main_label);
		model.setValue("/root/temp_copy/treemenu/value",main_value);
		
		src = model.instances(0).selectSingleNode("/root/temp_copy/treemenu");
		newNode = src.cloneNode(true);
		selectNode.appendChild(newNode);
	}
	
	treeMenu.item(0).attribute("color") = "white";
	treeMenu.item(0).attribute("font-weight") = "bold";
	treeMenu.item(0).attribute("font-size") = "15";
	treeMenu.item(0).attribute("width") = "100%";
	treeMenu.item(0).attribute("text-align") = "center";
	treeMenu.item(0).attribute("background-image") = "/images/le_top_bg.gif";
	treeMenu.item(0).attribute("background-stretch") = "stretch";
	//treeMenu.item(0).attribute("indent") = "50";
}

/***************************************************
// 함 수 명 : loadLeftMenuXml
// 내     용 : Menu XML File을 Memory에 Load
// 작 성 자 : 컴스퀘어 이재훈
// 작 성 일 : 2007-10-01
***************************************************/
function loadLeftMenuXml(mainID)
{	
	//Node create and value setting
	//model.makeNode("/root/reqData/mainID");
	//model.makeValue("/root/reqData/mainID",mainID);
	
	model.setValue("/root/reqData/mainID", mainID);
	document.all("submission2").attribute("ref") ="/root/reqData/mainID";
	model.send("submission2");
	//var menuPath = getProperty("leftmenuUrl");
	//model.instances(2).load(menuPath);
	
	model.destroy("root/tempData");
	
	var main_cnt = model.instances(1).getElementsByTagName("Main").length;
	var menuName;
	var menuImg ="/images/le_top_bg.gif";
	
	for (var i = 0; i < main_cnt; i++) {
		nodeList = model.instances(1).getElementsByTagName("Main["+(i+1)+"]").nextNode();
		if (mainID== nodeList.getAttribute("itemID")){
			menuName = nodeList.getAttribute("name");
		}
	}
	
	model.makeNode("root/tempData/treemenu");
	model.makeNode("root/tempData/treemenu/label");
	model.makeNode("root/tempData/treemenu/value");
	model.makeNode("root/tempData/treemenu/img");
	model.makeNode("root/tempData/treemenu/simg");
	model.makeNode("root/tempData/treemenu/crud");
	model.makeNode("root/tempData/treemenu/url");
	model.makeNode("root/tempData/crudNode");
	model.makeNode("root/tempData/urlNode");
	
	//model.makeNode("root/tempData/treemenu/treemenu");
	model.setValue("/root/tempData/treemenu/label",menuName);
	model.setValue("/root/tempData/treemenu/img",menuImg);
	
	treeMenu.item(0).attribute("font-weight") = "bold";
	treeMenu.item(0).attribute("font-size") = "15";
	treeMenu.item(0).attribute("width") = "100%";
	treeMenu.item(0).attribute("text-align") = "center";
	treeMenu.item(0).attribute("padding-right") = "40";
	treeMenu.item(0).attribute("background-image") = "/images/le_top_bg.gif";
	treeMenu.item(0).attribute("background-stretch") = "stretch";
	//treeMenu.item(0).attribute("indent") = "50";
	
	var child_cnt = model.instances(2).getElementsByTagName("Sub").length; 
	var selectNode = model.instances(0).selectSingleNode("root/tempData/treemenu");
	var crudNode   = "/root/tempData/crudNode";
	var crudTempNode = "/root/temp_copy/crudNode/crud";
	var urlNode		= "/root/tempData/urlNode";
	var urlTempNode = "/root/temp_copy/urlNode/url";
	
	var child_label, child_value, child_img, child_crud;
	var detailList, detail_label, detail_value, detail_img, detail_crud, detail_url;
	var subdetailList, subdetail_label, subdetail_value, subdetail_img, subdetail_crud, subdetail_url;
	var enddetailList, enddetail_label, enddetail_value, enddetail_img, enddetail_crud, enddetail_url;
	var pNode, bNode, cNode, dNode, eNode, fNode, gNode, hNode, iNode, jNode, kNode;
	
	for (var i = 0; i < child_cnt; i++) {
		nodeList = model.instances(2).getElementsByTagName("Sub["+(i+1)+"]").nextNode();
		//alert(nodeList.xml);
		child_label = nodeList.getAttribute("name");
		child_value = nodeList.getAttribute("itemID");
		
		model.setValue("/root/temp_copy/treemenu/label",child_label);
		model.setValue("/root/temp_copy/treemenu/value",child_value);
		model.setValue("/root/temp_copy/treemenu/img","/images/icon_10.gif");

		appendNode(crudNode, crudTempNode, "");
		appendNode(urlNode, urlTempNode, "");
		
		var detail_cnt = 0;
		try {
			//detail_cnt = nodeList.selectSingleNode("detail").length;
			detail_cnt = nodeList.getElementsByTagName("detail").length;
		} catch ( e ) {
			detail_cnt = 0;
		}
		
		if (detail_cnt > 0) {
			for (var j=0; j < detail_cnt; j++) {
				//nodeList = model.instances(2).getElementsByTagName("detail").item(j);
				//detailList = nodeList.getElementsByTagName("detail[" + (j + 1 ) + "]").nextNode();
				detailList = nodeList.childNodes.item(j);
				//alert(nodeList.xml);
				detail_label = detailList.getAttribute("name");
				detail_value = detailList.getAttribute("itemID");
				detail_crud 	= detailList.getAttribute("crud");
				detail_url	= detailList.getAttribute("url");
				
				var subdetail_cnt = 0;
				try {
					//subdetail_cnt = detailList.selectSingleNode("Subdetail").length;
					subdetail_cnt = detailList.getElementsByTagName("Subdetail").length;
				} catch ( e ) {
					subdetail_cnt = 0;
				}
				
				if ( subdetail_cnt > 0 ) {
					detail_value = "";
				}
				appendNode(crudNode, crudTempNode, detail_crud);
				appendNode(urlNode, urlTempNode, detail_url);
				
				model.setValue("/root/temp_copy/temp/treemenu/label",detail_label);
				model.setValue("/root/temp_copy/temp/treemenu/value",detail_value);
				model.setValue("/root/temp_copy/temp/treemenu/img","/images/icon_03.gif");
				model.setValue("/root/temp_copy/temp/treemenu/simg","/images/icon_04.gif");
				model.setValue("/root/temp_copy/temp/treemenu/crud",detail_crud);
				model.setValue("/root/temp_copy/temp/treemenu/url",detail_url);
				
				pNode = model.instances(0).selectSingleNode("/root/temp_copy/treemenu");
				dNode = model.instances(0).selectSingleNode("/root/temp_copy/temp/treemenu");
				pNode.appendChild(dNode);
				//alert(pNode.xml);
					
				if (subdetail_cnt > 0) {
					for (var k=0; k < subdetail_cnt; k++) {
						//nodeList = model.instances(2).getElementsByTagName("detail").item(j);
						subdetailList = detailList.childNodes.item(k);
						
						//alert(subdetailList.xml);
						subdetail_label 	= subdetailList.getAttribute("name");
						subdetail_value	= subdetailList.getAttribute("itemID");
						subdetail_crud 	= subdetailList.getAttribute("crud");
						subdetail_url	= subdetailList.getAttribute("url");
						
						appendNode(crudNode, crudTempNode, subdetail_crud);
						appendNode(urlNode, urlTempNode, subdetail_url);
						
						var enddetail_cnt = 0;
						try {
							enddetail_cnt = subdetailList.selectSingleNode("enddetail").length;
						} catch ( e ) {
							enddetail_cnt = 0;
						}
						
						if ( enddetail_cnt > 0 ) {
							subdetail_value = "";
						}
						
						model.setValue("/root/temp_copy/temp2/treemenu/label",subdetail_label);
						model.setValue("/root/temp_copy/temp2/treemenu/value",subdetail_value);
						model.setValue("/root/temp_copy/temp2/treemenu/img","/images/icon_03.gif");
						model.setValue("/root/temp_copy/temp2/treemenu/simg","/images/icon_04.gif");
						model.setValue("/root/temp_copy/temp2/treemenu/crud",subdetail_crud);
						model.setValue("/root/temp_copy/temp2/treemenu/url",subdetail_url);
						
						eNode = pNode.lastChild;
						hNode = model.instances(0).selectSingleNode("/root/temp_copy/temp2/treemenu");
						eNode.appendChild(hNode);
						//alert(pNode.xml);
						
						for (var l=0; l < enddetail_cnt; l++) {
							enddetailList = subdetailList.childNodes.item(l);
							
							//alert(enddetailList.xml);
							enddetail_label 	= enddetailList.getAttribute("name");
							enddetail_value 	= enddetailList.getAttribute("itemID");
							enddetail_crud 	= enddetailList.getAttribute("crud");
							enddetail_url 	= enddetailList.getAttribute("url");
							
							appendNode(crudNode, crudTempNode, enddetail_crud);
							appendNode(urlNode, urlTempNode, enddetail_url);
							
							model.setValue("/root/temp_copy/temp3/treemenu/label",enddetail_label);
							model.setValue("/root/temp_copy/temp3/treemenu/value",enddetail_value);
							model.setValue("/root/temp_copy/temp3/treemenu/img","/images/icon_03.gif");
							model.setValue("/root/temp_copy/temp3/treemenu/simg","/images/icon_04.gif");
							model.setValue("/root/temp_copy/temp3/treemenu/crud",enddetail_crud);
							model.setValue("/root/temp_copy/temp3/treemenu/url",enddetail_url);
							
							iNode = eNode.lastChild;
							jNode = model.instances(0).selectSingleNode("/root/temp_copy/temp3/treemenu");
							iNode.appendChild(jNode);
						}
					}
				}	

			}
		}

		src = model.instances(0).selectSingleNode("/root/temp_copy/treemenu");
		newNode = src.cloneNode(true);
		selectNode.appendChild(newNode);
		
		//alert(model.instances(0).xml);
		
		pNode = model.instances(0).selectSingleNode("/root/temp_copy");
		bNode = model.instances(0).selectSingleNode("/root/temp_copy/blank/treemenu");
		dNode = model.instances(0).selectSingleNode("/root/temp_copy/treemenu");
		cNode = bNode.cloneNode(true);
		pNode.replaceChild(cNode,dNode);

	}
	// Tree Menu Open & ref Mapping
	treeMenu.refresh();
	for (var i=0; i<treeMenu.length; i++){
		if (treeMenu.item(i).depth == 1){
			treeMenu.item(i).attribute("font-weight") = "bold";
			treeMenu.item(i).attribute("background-image") = "/images/le_menu_01.gif";
			treeMenu.item(i).attribute("background-stretch") = "stretch";	
			treeMenu.item(i).attribute("width") = "100%";
			treeMenu.item(i).attribute("text-align") = "left";
			treeMenu.item(i).attribute("left-padding") = "-100";
		}else if(treeMenu.item(i).depth == 2){
			treeMenu.item(i).attribute("background-image") = "/images/le_menu_02.gif";
			treeMenu.item(i).attribute("background-stretch") = "stretch";
		}else if(treeMenu.item(i).depth == 3){
			treeMenu.item(i).attribute("background-image") = "/images/le_menu_03.gif";
			treeMenu.item(i).attribute("background-stretch") = "stretch";
		}else if(treeMenu.item(i).depth == 4){
			treeMenu.item(i).attribute("background-image") = "/images/le_menu_04.gif";
			treeMenu.item(i).attribute("background-stretch") = "stretch";
		}
	}
	treeMenu.select(0);
}
/***************************************************
// 함 수 명 :  appendCrud
// 내     용 : 트리의 crud값을 하나의 노드로 생성
// Param
// pageID : page ID
// attribute : attribute name
// Return : attribute value
// 작 성 자 : 
// 작 성 일 : 
***************************************************/
function appendNode(strNode, appendNode, val){
	var strNodeVar  		= model.instances(0).selectSingleNode(strNode);
	var strTempNodeVar 	= model.instances(0).selectSingleNode(appendNode);
	model.setValue(appendNode, val);
	strNodeVar.appendChild(strTempNodeVar);
}
/***************************************************
// 함 수 명 : getMenuXmlInfo
// 내     용 : Memory에 Load 된 Menu XML에서 attribute 값 얻기
// Param
//		pageID : page ID
//		attribute : attribute name
// Return : attribute value
// 작 성 자 : 컴스퀘어 이재훈
// 작 성 일 : 2007-10-01
***************************************************/
function getMenuXmlInfo(pageID, attribute)
{
	if (pageID == "separator")
		return "";	
			
	//var nodeList = model.instances(1).getElementsByTagName("Sub[@itemID='"+pageID+"']").nextNode();
	var nodeList = model.instances(2).getElementsByTagName("detail[@itemID='"+pageID+"']").nextNode();
	
	if (nodeList == null) {
		nodeList = model.instances(2).getElementsByTagName("Subdetail[@itemID='"+pageID+"']").nextNode();
		if ( nodeList == null ){
			nodeList = model.instances(2).getElementsByTagName("enddetail[@itemID='"+pageID+"']").nextNode();
			   if ( nodeList == null ){
			    return "";
			   }
		}
	}
	
	return nodeList.attributes.getNamedItem(attribute).value;
}

/***************************************************
// 함 수 명 : onLoadPopupPage
// 내     용 : pageID로 메뉴에 등록된 업무화면으로 팝업으로 열기
// Param
//		pageID : page ID
// 작 성 자 : 컴스퀘어 이재훈
// 작 성 일 : 2007-10-01
***************************************************/

function onLoadPopupPage(pageID){
	
	var crud = "";
	
	for (var i=0; i<treeMenu.length; i++){
		if(treeMenu.item(i).value == pageID){
			crud = model.getValue("/root/tempData/crudNode/crud[" + i + "]");
			break;
		}
	}
	
	var pageURL   = getPageURL(pageID);
	var pageTitle = getPageTitle(pageID);
	
	var workWin = getWorkWindow().window;
	
	setPageInfo(workWin, pageID, pageURL, pageTitle, crud);
	
	var property = "caption:hidden; align:center; width:950px; height:756px; ";
	workWin.load(pageURL, "modal" , pageID, property);

}

//==================================================================================================
//작성
//	배상용
//--------------------------------------------------------------------------------------------------
//기능
//	해당 pageID를 팝업창(모달) 형태로 IE 화면의 중간에 띄운다.
//	640*480 폼을 위한 크기
//	화면이 현재 사이즈보다 큰 경우 스크롤이 생길 수 있으므로 정확하게 개발해야함
//--------------------------------------------------------------------------------------------------
//입력
//	
//--------------------------------------------------------------------------------------------------
//출력
//	
//--------------------------------------------------------------------------------------------------
//설명
//	프로퍼티를 임의 적용 할 수 있도록 추가한 함수 다양한 크기의 팝업 창이 나올 수 있으므로
//	필요에 의해서 추가 한 함수
//	공통적으로 타이틀 감추기와 화면의 중간에 오도록 기본 설정함
//--------------------------------------------------------------------------------------------------
//예제
//	
//==================================================================================================
function onLoadPopupPageEx(pageID,openMode,propertyOption){
	
	var crud = "";
	
	for (var i=0; i<treeMenu.length; i++){
		if(treeMenu.item(i).value == pageID){
			crud = model.getValue("/root/tempData/crudNode/crud[" + i + "]");
			break;
		}
	}
	
	var pageURL   = getPageURL(pageID);
	var pageTitle = getPageTitle(pageID);
	
	var workWin = getWorkWindow().window;
	
	setPageInfo(workWin, pageID, pageURL, pageTitle, crud);

	workWin.load(pageURL, openMode , pageID, propertyOption);	
}
/***************************************************
// 함 수 명 : onLoadPopupPage
// 내     용 : pageID로 메뉴에 등록된 업무화면으로 MDIChild으로 열기
// Param
//		pageID : page ID
// 작 성 자 : 컴스퀘어 이재훈
// 작 성 일 : 2007-10-01
***************************************************/ 
function onLoadPage2(pageID)
{
	var crud = "";
	
	for (var i=0; i<treeMenu.length; i++){
		if(treeMenu.item(i).value == pageID){
			crud = model.getValue("/root/tempData/crudNode/crud[" + i + "]");
			break;
		}
	}

	var pageURL = getPageURL(pageID);
	var pageTitle = getPageTitle(pageID);
	
	if (existMDIWindow(pageID) == false) {
			
		var mdiWindows = getWorkWindow().window.mdichildren;
		var mdiCount = mdiWindows.length;
		if(mdiCount > 8){
			showMsgBox("더이상 새로운 메뉴창을 띄울수 없습니다.");
			return;
		}else{
			createMDIWindow(pageID, pageURL, pageTitle, crud);	// 활성화 된 Work Window에 MDI Window에 화면 열기
		}
	}
	else {
		//showMsgBox("[" + pageTitle + "] window는 이미 열려 있습니다.");
		onTaskButtonDOMActivate(pageID);
	}
}
/***************************************************
// 함 수 명 : onLoadPage
// 내     용 : pageID 화면 열기
// Param
//		pageID : page ID
// 작 성 자 : 컴스퀘어 이재훈
// 작 성 일 : 2007-10-01
***************************************************/
function onLoadPage(pageID,strCrud, strUrl)
{
//	if (pageID.length<3){
//		alert("Main Menu Click..!!");
//		return false;
//	}

	//var pageURL = getPageURL(pageID);
	var pageURL = strUrl;
	var pageTitle = getPageTitle(pageID);
	
	if (existMDIWindow(pageID) == false) {
			
		var mdiWindows = getWorkWindow().window.mdichildren;
		var mdiCount = mdiWindows.length;
		if(mdiCount > 8){
			showMsgBox("더이상 새로운 메뉴창을 띄울수 없습니다.");
			return;
		}else{
			createMDIWindow(pageID, pageURL, pageTitle, strCrud);	// 활성화 된 Work Window에 MDI Window에 화면 열기
		}
	}
	else {
		//showMsgBox("[" + pageTitle + "] window는 이미 열려 있습니다.");
		onTaskButtonDOMActivate(pageID);
	}
}

function getPageURL(pageID)
{
	var i = pageID.indexOf("_",3);
	
	return "/xrw/" + pageID.substring(0,2).toLowerCase() + "/" + pageID.substring(3,i).toLowerCase() + "/" + pageID + ".xrw";
	//return "../../xrw/" + pageID.substring(0,2).toLowerCase() + "/" + pageID.substring(3,i).toLowerCase() + "/" + pageID + ".xrw";
}

function getPageTitle(pageID)
{
	return getMenuXmlInfo(pageID, "name");
}

function setPageInfo(win, pageID, pageURL, pageTitle, strCrud)
{

	if (pageURL != null) {
		win.model.setValue("/root/initData/pageInfo/pageID", pageID);
		win.model.setValue("/root/initData/pageInfo/pageTitle", pageTitle );
		win.model.setValue("/root/initData/pageInfo/pageUrl", pageURL);
		win.model.setValue("/root/initData/pageInfo/strCrud", strCrud);
		win.model.setValue("/root/initData/pageInfo/statusMsg", "화면이 정상적으로 로딩 되었습니다.");
	}
	else if (pageID != null) {
		
		pageURL = getPageURL(pageID);
		pageTitle = getPageTitle(pageID);
		
		win.model.setValue("/root/initData/pageInfo/pageID", pageID);
		win.model.setValue("/root/initData/pageInfo/pageTitle", pageTitle );
		win.model.setValue("/root/initData/pageInfo/pageUrl", pageURL);
		win.model.setValue("/root/initData/pageInfo/strCrud", strCrud);
		win.model.setValue("/root/initData/pageInfo/statusMsg", "화면이 정상적으로 로딩 되었습니다.");
	}
	else {
		
		pageID = win.attribute("id");
		pageURL = getPageURL(pageID);
		pageTitle = getPageTitle(pageID);
		
		win.model.setValue("/root/initData/pageInfo/pageID", pageID);
		win.model.setValue("/root/initData/pageInfo/pageTitle", pageTitle );
		win.model.setValue("/root/initData/pageInfo/pageUrl", pageURL);
		win.model.setValue("/root/initData/pageInfo/strCrud", strCrud);
		win.model.setValue("/root/initData/pageInfo/statusMsg", "화면이 정상적으로 로딩 되었습니다.");
	}
}

/*******************************************************************************************************************************************************
// Top Frame 기능 관련 함수
*******************************************************************************************************************************************************/

/*******************************************************************************************************************************************************
// 함 수 명 : onBtnGo
// 내     용 : 화면 아이디로 화면 열기 Button 이벤트 함수
// 작 성 자 : 컴스퀘어 이재훈
// 작 성 일 : 2007-10-01
*******************************************************************************************************************************************************/
function onBtnGo()
{
	showMsgBox("기능 구현 예제입니다.");
}


/*******************************************************************************************************************************************************
// Task Frame 기능 관련 함수
*******************************************************************************************************************************************************/

/***************************************************
// 함 수 명 : onBtnTree
// 내     용 : Left Frame Toggle Button 이벤트 함수
// 작 성 자 : 컴스퀘어 이재훈
// 작 성 일 : 2007-10-01
***************************************************/
function onBtnTree(gb)
{
	if(gb=="top"){
		
		if (treeMenu.attribute("_treeVisibilityFlag") == "hidden") {
			
			var topH = 0;
			if (mainTop.visible == true) {
				topH = mainTop.attribute("height").replace(/px/, "");		// px 제거
			}
			
			var taskH = 0;
			if (mainTask.visible == true) {
				taskH = mainTask.attribute("height").replace(/px/, "");	// px 제거
			}
			
			grpLeft.attribute("top") = topH + "px";
			grpLeft.attribute("margin-bottom") = (eval(topH) + eval(taskH)) + "px";
	
			grpLeft.attribute("visibility") = "visible";
			mainFrame.attribute("left") = grpLeft.attribute("width");
			mainTab.attribute("left") = grpLeft.attribute("width");
	
			treeMenu.attribute("_treeVisibilityFlag") = "show";
			
		}
	}else{
		if (treeMenu.attribute("_treeVisibilityFlag") == "hidden") {
			
			var topH = 0;
			if (mainTop.visible == true) {
				topH = mainTop.attribute("height").replace(/px/, "");		// px 제거
			}
			
			var taskH = 0;
			if (mainTask.visible == true) {
				taskH = mainTask.attribute("height").replace(/px/, "");	// px 제거
			}
			
			grpLeft.attribute("top") = topH + "px";
			grpLeft.attribute("margin-bottom") = (eval(topH) + eval(taskH)) + "px";
	
			grpLeft.attribute("visibility") = "visible";
			mainFrame.attribute("left") = grpLeft.attribute("width");
			mainTab.attribute("left") = grpLeft.attribute("width");
	
			treeMenu.attribute("_treeVisibilityFlag") = "show";
			
		}
		else {
			
			grpLeft.attribute("visibility") = "hidden";
			mainFrame.attribute("left") = "0px";
			mainTab.attribute("left") = "0px";
			
			treeMenu.attribute("_treeVisibilityFlag") = "hidden";
		}
	}		
}

/***************************************************
// 함 수 명 : onBtnCascade
// 내     용 : MDI Window 계단식 정렬 Button 이벤트 함수
// 작 성 자 : 컴스퀘어 이재훈
// 작 성 일 : 2007-10-01
***************************************************/
function onBtnCascade()
{
	getWorkWindow().window.mdi("status") = "cascade";
}

/***************************************************
// 함 수 명 : onBtnTile
// 내     용 : MDI Window 바둑판식 정렬 Button 이벤트 함수
// 작 성 자 : 컴스퀘어 이재훈
// 작 성 일 : 2007-10-01
***************************************************/
function onBtnTile()
{
	getWorkWindow().window.mdi("status") = "tile";
}

/***************************************************
// 함 수 명 : onBtnCascade
// 내     용 : MDI Window 전체 닫기 Button 이벤트 함수
// 작 성 자 : 컴스퀘어 이재훈
// 작 성 일 : 2007-10-01
***************************************************/
function onBtnCloseall()
{
	getWorkWindow().window.mdi("status") = "closeall";
	
	removeAllTaskButton();	// Task Button 모두 삭제
}


/*******************************************************************************************************************************************************
// Work Window 기능 관련 함수
*******************************************************************************************************************************************************/

/***************************************************
// 함 수 명 : createWorkWindow
// 내     용 : Work Window 생성 함수
// Param
//		title : Work Window의 title
// 작 성 자 : 컴스퀘어 이재훈
// 작 성 일 : 2007-10-01
***************************************************/
function createWorkWindow(title)
{
	// MDI with Multi Work Window가 아니면 Work Window를 생성할 수 없다.
	if (getProperty("frameworkType") != "MDI2" && getProperty("frameworkType") != "SDI2") {
		showMsgBox("작업창을 지원하지 않는 Framework Type입니다.");
		return;
	}

	var btnSeq = eval(mainTab.attribute("_btnSeq")) + 1;		// Button 생성을 위한 Seq를 얻어와서 1 증가
	
	try {
		// Work Window 생성
		var caseObj = mainFrame.createChild("xforms:case", "id:case" + btnSeq + "; ");
		var ivObj = caseObj.createChild("xforms:iviewer", "id:workWindow" + btnSeq + "; src:blank.xrw; left:0px; top:0px; width:100%; height:100%;");
	}
	catch (e) {
		showMsgBox("작업창 생성 중 에러가 발생했습니다.");
		return;
	}
	
	try {
		// Tab Button 생성
		createTabButton(title, btnSeq);
	}
	catch (e) {
		showMsgBox("Tab Button 생성 중 에러가 발생했습니다.");
		return;
	}
	
	mainTab.attribute("_btnSeq") = btnSeq;	// Tab Button Seq 증가 (중복 아이디 생성 방지를 위해서)
	onTabButtonDOMActivate(btnSeq);		// 마지막 Tab Button에 포커스 이동
}

/***************************************************
// 함 수 명 : closeWorkWindow
// 내     용 : Work Window 닫기 함수
// 작 성 자 : 컴스퀘어 이재훈
// 작 성 일 : 2007-10-01
***************************************************/
function closeWorkWindow()
{
	var btnSelected = mainTab.attribute("_btnSelected");
	
	if (btnSelected == 0) {
		showMsgBox("기본창은 닫을 수 없습니다.");
		return;
	}
	
	// 화면 초기화
	mainFrame.removeChild("case" + btnSelected);
	
	// Tab Button 삭제
	var preIndex = removeTabButton(btnSelected);
	
	// 이전 Work Window으로 포커스 이동 - MDI with Multi Work Window Type이고 이전 Work Window index가 0이면 Tab Button이 없음
	if (preIndex != "0" || getProperty("frameworkType") != "SDI2") {
		document.all("tabBtn" + preIndex).selected = true;
	}
		
	onTabButtonDOMActivate(preIndex);
}

/***************************************************
// 함 수 명 : getWorkWindow
// 내     용 : 활성화 된 Work Window의 객체 얻기
// 작 성 자 : 컴스퀘어 이재훈
// 작 성 일 : 2007-10-01
***************************************************/
function getWorkWindow()
{
	return document.all("workWindow" + mainTab.attribute("_btnSelected"));
}


/*******************************************************************************************************************************************************
// Tab Button 기능 관련 함수
*******************************************************************************************************************************************************/

/***************************************************
// 함 수 명 : createTabButton
// 내     용 : Tab Button 생성 함수
// Param
//		title : Tab Button의 title(Work Window의 title)
//		btnSeq : 중복아이디 생성 방지를 위한 Seq
// 작 성 자 : 컴스퀘어 이재훈
// 작 성 일 : 2007-10-01
***************************************************/
function createTabButton(title, btnSeq)
{
	var btnCount = mainTab.children.length - 3;			// 생성된 Button 갯수
	var btnLeft = g_TabBtnWidth * btnCount++;				// Tab Button 생성 위치

	var btnObj = mainTab.createChild("xforms:button", "id:tabBtn" + btnSeq + "; group:tabBtn; groupalign:user; selected:true; class:tab; left:" + btnLeft + "px; top:0px; width:" + g_TabBtnWidth + "px; height:" + g_TabBtnHeight + "px; ");
	
	btnObj.attribute("text") = title;										// 생성된 Tab Button의 text
	btnObj.attribute("_mdiSelected") = "";									// Work Window에 활성화 된 MDI Window ID
	btnObj.attribute("DOMActivate") = "onTabButtonDOMActivate(" + btnSeq +")";	// 생성된 Tab Button의 DOMActivate 이벤트
	btnObj.attribute("onmouseover") = "setPopupMenuTabButton()";				// 생성된 Tab Button의 onmouseover 이벤트
	btnObj.attribute("onmouseout") = "clearPopupMenuTabButton()";			// 생성된 Tab Button의 onmouseout 이벤트
	btnObj.createChild("xforms:hint", "id:hint" + btnSeq + "; text:" + title + "; ");		// 생성된 Tab Button의 hint
}

/***************************************************
// 함 수 명 : removeTabButton
// 내     용 : Tab Button 삭제 함수
// Param
//		btnSeq : 삭제 할 Tab Button Seq
// Return : 삭제 후 활성화 시킬 Tab Button Seq
// 작 성 자 : 컴스퀘어 이재훈
// 작 성 일 : 2007-10-01
***************************************************/
function removeTabButton(btnSeq)
{
	var btnLeft = 0;					// 이동할 Button의 위치
	var removeFlag = false;			// Button 삭제 여부
	var cnt = mainTab.children.length;	// Tab 자식컨트롤 갯수
	var btnCnt = 0;
	var ret = 0;
	
	for (var i = 3; i < cnt; i++) {
		
		var ctrl = mainTab.children.item(i);
		
		if (ctrl.elementName == "xforms:button") {
			if (ctrl.attribute("id") == "tabBtn" + btnSeq) {
				btnLeft = eval(ctrl.attribute("left").replace(/px/, ""));
				mainTab.removeChild(ctrl.attribute("id"));
				removeFlag = true ;
				cnt--;
				i--;
			}
			else if (removeFlag == true) {
				ctrl.attribute("left") = btnLeft;
				btnLeft += g_TabBtnWidth;
			}
			else {
				ret = ctrl.attribute("id").replace(/tabBtn/g, "");	// 삭제하전 Tab Button에서 Seq 추출
			}
		}
	}
	
	return ret;
}

/***************************************************
// 함 수 명 : onTabButtonDOMActivate
// 내     용 : Tab Button DOMActivate 이벤트 함수
// Param
//		btnSeq : DOMActivate 이벤트 발생한 Tab Button Seq
// 작 성 자 : 컴스퀘어 이재훈
// 작 성 일 : 2007-10-01
***************************************************/
function onTabButtonDOMActivate(btnSeq)
{
	// 활성화 된 Work Window을 선택했을 때
	if (mainTab.attribute("_btnSelected") == btnSeq) {
		return;
	}
	
	mainTab.attribute("_btnSelected") = btnSeq;		// 현재 포커스가 있는 Work Window index
	
	model.toggle("case" + btnSeq);
	
	// MDI with Multi Work Window Type일 때 활성화 된 Work Window의 MDI Window의 Task Button을 만들어 줌
	if (getProperty("frameworkType") == "MDI2") {
		
		removeAllTaskButton();	// Task Button 초기화
		
		var obj = getWorkWindow().window.mdichildren;
		
		for (i = 0; i < obj.length; i++) {
			var mdiWin = obj.item(i);
			pageID	= mdiWin.model.getValue("/root/pageInfo/pageID");
			pageTitle	= mdiWin.model.getValue("/root/pageInfo/pageTitle");
			
			btnLeft = g_TaskBtnWidth * (i+1);
			var btnObj = mainTask.createChild("xforms:button", "id:taskBtn"+ pageID +"; group:taskBtn; groupalign:user; selected:true; class:task; left:"+ btnLeft +"px; top:1px; width:" + g_TaskBtnWidth + "px; height:" + g_TaskBtnHeight + "px;");
			
			btnObj.attribute("text") = pageTitle;										// 생성된 Task Button의 text
			btnObj.attribute("DOMActivate") = "onTaskButtonDOMActivate('"+ pageID +"')";		// 생성된 Task Button의 DOMActivate 이벤트
			btnObj.createChild("xforms:hint", "id:hint"+ pageID +"; text:"+ pageTitle +"; ");		// 생성된 Task Button의 hint
		}
		
		if (obj.length == 0) {
			document.all("tabBtn" + btnSeq).attribute("_mdiSelected") = "";
		}
		else if (document.all("tabBtn" + btnSeq).attribute("_mdiSelected") != "") {
			mainTask.children.item("taskBtn" + document.all("tabBtn" + btnSeq).attribute("_mdiSelected")).selected = true;
		}
	}
}

/***************************************************
// 함 수 명 : setPopupMenuTabButton
// 내     용 : Tab Button의 사용자 정의 PopupMenu 설정
// 작 성 자 : 컴스퀘어 이재훈
// 작 성 일 : 2007-10-01
***************************************************/
function setPopupMenuTabButton()
{
	// MDI with Multi Work Window Type이 아니면 필요없는 popup menu 항목을 삭제
	if (getProperty("frameworkType") != "MDI2") {
		model.removeNodeset("/root/codeData/popupMenu/item[@type='MDI2']");
	}
	
	window.setPopupMenu( true, "/root/codeData/popupMenu/item", "label", "id" );
}

/***************************************************
// 함 수 명 : clearPopupMenuTabButton
// 내     용 : Tab Button의 사용자 정의 PopupMenu 설정 해제
// 작 성 자 : 컴스퀘어 이재훈
// 작 성 일 : 2007-10-01
***************************************************/
function clearPopupMenuTabButton()
{
	window.setPopupMenu(false);
}

/***************************************************
// 함 수 명 : popupMenuCreateWorkWindow
// 내     용 : Tab Button의 사용자 정의 PopupMenu 작업창 추가
// 작 성 자 : 컴스퀘어 이재훈
// 작 성 일 : 2007-10-01
***************************************************/
function popupMenuCreateWorkWindow()
{
	createWorkWindow("작업창");
}

/***************************************************
// 함 수 명 : popupMenuRenameWorkWindow
// 내     용 : Tab Button의 사용자 정의 PopupMenu 작업창 이름 바꾸기
// 작 성 자 : 컴스퀘어 이재훈
// 작 성 일 : 2007-10-01
***************************************************/
function popupMenuRenameWorkWindow()
{
	/*
	makeNode("/root/pageInfo/btnID",btnID);
	makeNode("/root/pageInfo/name",mainTab.children.item(btnID).text);
	window.load("updateName.xrw","modal","updateName","caption:hidden; left:"+(event.clientX-70)+"px; top:"+(event.clientY+84)+"px; width:246px; height:105px;","root/pageInfo","root/pageInfo");
	*/
}

/***************************************************
// 함 수 명 : popupMenuCloseWorkWindow
// 내     용 : Tab Button의 사용자 정의 PopupMenu 작업창 닫기
// 작 성 자 : 컴스퀘어 이재훈
// 작 성 일 : 2007-10-01
***************************************************/
function popupMenuCloseWorkWindow()
{
	closeWorkWindow();
}


/*******************************************************************************************************************************************************
// MDI Window 기능 관련 함수
*******************************************************************************************************************************************************/

/***************************************************
// 함 수 명 : createMDIWindow
// 내     용 : MDI Window 생성 함수
// Param
//		pageID : 화면 ID
//		pageURL : 화면 URL
//		pageTitle : 화면 title
// 작 성 자 : 컴스퀘어 이재훈
// 작 성 일 : 2007-10-01
***************************************************/

var exception_windows = new Array;
exception_windows[0] = new Array("AD_RES_1400", "1165", "840"); //광고-게재예정표

function createMDIWindow(pageID, pageURL, pageTitle, strCrud)
{
	var workWin = getWorkWindow().window;
	
	setPageInfo(workWin, pageID, pageURL, pageTitle, strCrud);
	
	var width  		= g_MDIWindowWidth;
	var height 		= g_MDIWindowHeight;
	var window_type = "mdichild";
	var align		= "";
	var showTaskButton = true;
	
	for(var i=0; i<exception_windows.length; i++){
		if(exception_windows[i][0] == pageID){
			width  = exception_windows[i][1];
			height = exception_windows[i][2];	
			window_type = "modeless";		
			align  = "center";
			showTaskButton	= false;
			break;
		}
	}
	
	var property = "caption:hidden; left:10px; top:0px; width:" + width + "px; height:" + height + "px; align:"+align+";";
	workWin.load(pageURL, window_type , pageID, property);
	
	if(showTaskButton){
		createTaskButton(pageID, pageTitle);
	}
}

/***************************************************
// 함 수 명 : closeMDIWindow
// 내     용 : MDI Window 닫기 함수
// Param
//		pageID : 화면 ID
// 작 성 자 : 컴스퀘어 이재훈
// 작 성 일 : 2007-10-01
***************************************************/
function closeMDIWindow(pageID)
{	
	var prePageID = removeTaskButton(pageID);
	
	// 이전 MDI Window로 포커스 이동
	if (prePageID != "") {
		document.all("taskBtn" + prePageID).selected = true;
		onTaskButtonDOMActivate(prePageID);
	}
	if(getWorkWindow().window.mdichildren.item(pageID) != null){
		getWorkWindow().window.mdichildren.item(pageID).window.close();
	}
}

/***************************************************
// 함 수 명 : existMDIWindow
// 내     용 : MDI Window가 존재하는지 여부를 반환
// PARAM :
//		pageID : 화면 ID
// RETURN : MDI Window의 존재 여부(true/false)
// 작 성 자 : 컴스퀘어 이 재 훈
// 작 성 일 : 2006-03-08
***************************************************/
function existMDIWindow(pageID)
{
	var mdiWin = getWorkWindow().window.mdichildren.item(pageID);
	
	return (mdiWin == null ) ? false : true;
}
function getMDIWindow(pageID)
{
	return getWorkWindow().window.mdichildren.item(pageID);
}

/*******************************************************************************************************************************************************
// Task Button 기능 관련 함수
*******************************************************************************************************************************************************/

/***************************************************
// 함 수 명 : createTaskButton
// 내     용 : Task Button 생성 함수
// Param
//		pageID : 화면 ID
//		pageTitle : 화면 title
// 작 성 자 : 컴스퀘어 이재훈
// 작 성 일 : 2007-10-01
***************************************************/
function createTaskButton(pageID, pageTitle)
{
	var mainObj = getWorkWindow().window;
	var curBtn = mainTask.children.item(pageID);		// 생성하려는 Button
	var mdiCnt = mainObj.mdichildren.length;	// MDI 창의 갯수

	var btnLeft = 0;		// 생성될 Button의 위치
		
	if ( curBtn == null ) {	// 생성하려는 Button이 없을때
		btnLeft = g_TaskBtnWidth * (mdiCnt);

		var btnObj = mainTask.createChild("xforms:button", "id:taskBtn"+ pageID +"; group:taskBtn; groupalign:user; selected:true; class:task; left:"+ btnLeft +"px; top:1px; width:" + g_TaskBtnWidth + "px; height:" + g_TaskBtnHeight + "px;");
		
		btnObj.attribute("text") = pageTitle;										// 생성된 Task Button의 text
		btnObj.attribute("DOMActivate") = "onTaskButtonDOMActivate('"+ pageID +"')";		// 생성된 Task Button의 DOMActivate 이벤트
		btnObj.createChild("xforms:hint", "id:hint"+ pageID +"; text:"+ pageTitle +"; ");		// 생성된 Task Button의 hint
	}
	else 	{
		onTaskButtonDOMActivate(pageID) ;
	}
}

/***************************************************
// 함 수 명 : removeTaskButton
// 내     용 : Task Button 삭제 함수
// Param
//		pageID : 화면 ID
//Return : 삭제 후 활성화 시킬 MDI Window pageID
// 작 성 자 : 컴스퀘어 이재훈
// 작 성 일 : 2007-10-01
***************************************************/
function removeTaskButton(pageID)
{
	var btnLeft = 0;					// 생성될 Button의 위치
	var removeFlag = false;			// Button 삭제 여부
	var cnt = mainTask.children.length;	// 그룹컨트롤 갯수
	var btnCnt = 0;
	var ret = "";
	
	for (var i = 7; i < cnt; i++) {
		
		var ctrl = mainTask.children.item(i);
		
		if (ctrl.elementName == "xforms:button") {
			if (ctrl.attribute("id") == "taskBtn" + pageID) {
				btnLeft = eval(ctrl.attribute("left").replace(/px/, ""));
				mainTask.removeChild(ctrl.attribute("id"));
				removeFlag = true ;
				cnt--;
				i--;
			}
			else if (removeFlag == true) {
				ctrl.attribute("left") = btnLeft;
				btnLeft += g_TaskBtnWidth;
			}
			else {
				ret = ctrl.attribute("id").replace(/taskBtn/g, "");	// 삭제하전 Tab Button에서 Seq 추출
			}
		}
	}
	
	return ret;
}

/***************************************************
// 함 수 명 : removeAllTaskButton
// 내     용 : 모든 Task Button 삭제 함수
// Param
//		pageID : 화면 ID
// 작 성 자 : 컴스퀘어 이재훈
// 작 성 일 : 2007-10-01
***************************************************/
function removeAllTaskButton()
{
	var cnt = mainTask.children.length;	// 그룹컨트롤 갯수
	
	for(i = cnt - 1; i > 6; i--) {
		
		var ctrl = mainTask.children.item(i);
		
		if (ctrl.elementName == "xforms:button" && ctrl.attribute("id").substring(0,7) == "taskBtn") {
			mainTask.removeChild(ctrl.attribute("id"));
		}
	}
}

/***************************************************
// 함 수 명 : onTaskButtonDOMActivate
// 내     용 : Task Button 삭제 함수
// Param
//		pageID : 화면 ID
// 작 성 자 : 컴스퀘어 이재훈
// 작 성 일 : 2007-10-01
***************************************************/
function onTaskButtonDOMActivate(pageID)
{
	var mdiWin = getWorkWindow().window.mdichildren.item(pageID);
	
	if ( mdiWin != null ) {
		mdiWin.visible = true;
		mdiWin.restore();
		mdiWin.mdiActivate();
		if (getProperty("frameworkType") == "MDI2") {
			document.all("tabBtn" + mainTab.attribute("_btnSelected")).attribute("_mdiSelected") = pageID;
		}
	}
	else {
		// MDI 창이 존재 안하는 경우 어떻게 할까? 그냥 Button을 삭제해주자
		// Button은 있고 MDI 창은 없고 이런 경우는 나오면 안됨!
		//removeTaskButton(pageID);
	}
}

/***************************************************
// 함 수 명 : winMin
// 내     용 : MDI Window의 축소화 최대화 Button 이벤트
// 작 성 자 : 컴스퀘어 이재훈
// 작 성 일 : 2006-03-27
***************************************************/
function winMin()
{	
	window.minimize();
	window.visible = false;
}
/***************************************************
// 함 수 명 : winMax
// 내     용 : MDI Window의 축소화 최대화 Button 이벤트
// 작 성 자 : 컴스퀘어 이재훈
// 작 성 일 : 2006-03-27
***************************************************/
function winMax()
{	
	var child = btnMax.children;
	
	if (btnMax.attribute("_maxFlag") == "MAX") {	// 전체창 Button
		window.maximize();
		btnMax.attribute("hover.background-image") = "/images/mainFrame/mdi_win_ov.gif";
		btnMax.attribute("background-image") = "/images/mainFrame/mdi_win.gif";
		
		for ( i = 0; i < child.length; i++) {
			if ( child.item(i).elementName == "xforms:hint" ) {
				child.item(i).attribute("text") = "화면 복원";
			}
		}
		
		btnMax.attribute("_maxFlag") = "MIN";
	}
	else {	// 화면 복원 Button
		window.restore();
		btnMax.attribute("hover.background-image") = "/images/mainFrame/mdi_max_ov.gif";
		btnMax.attribute("background-image") = "/images/mainFrame/mdi_max.gif";
		
		for ( i = 0; i < child.length; i++) {
			if ( child.item(i).elementName == "xforms:hint" ) {
				child.item(i).attribute("text") = "최대화";
			}
		}
		
		btnMax.attribute("_maxFlag") = "MAX";
	}
}
			]]>
		</script>
	</xhtml:head>
	<xhtml:body overflow="hidden" pagewidth="1260" pageheight="800" style="font-family:굴림; font-size:11pt; focus-rect:hidden; ">
		<group id="mainTab" overflow="hidden" _btnSelected="0" _btnSeq="0" style="left:0px; top:0px; width:100%; height:0px; background-color:#e7eff3; border-bottom-color:#bdcae0; border-bottom-style:solid; "/>
		<switch id="mainFrame" style="left:0px; top:0px; width:1260px; height:800px; ">
			<case id="case0" selected="true">
				<iviewer id="workWindow0" src="blank.xrw" style="left:0px; top:0px; width:100%; height:100%; "/>
			</case>
		</switch>
		<group id="grpLeft" visibility="hidden" style="left:0px; top:0px; width:256px; height:100%; ">
			<treeview id="treeMenu" ref="/root/tempData/treemenu" cellspacing="1" expanddepth="1" fullrowselect="true" hasbuttons="false" hasimages="true" haslines="false" indent="10" itemheight="25" oneclickexpand="true" _treeVisibilityFlag="hidden" style="left:0px; top:0px; width:100%; height:100%; padding-left:-10; background-image:/images/le_bg.gif; background-stretch:stretch; border-color:#aec9e9; ">
				<itemset nodeset="/root/tempData/treemenu">
					<label ref="label"/>
					<value ref="value"/>
					<image ref="img"/>
					<crud ref="crud"/>
					<selectedimage ref="simg"/>
				</itemset>
				<script type="javascript" ev:event="xforms-select">
					<![CDATA[
						var treeItem = treeMenu.item(treeMenu.focusIndex);
						var strCrud;
						
						if (treeItem == null || treeItem.depth < 2) return false;
						//alert(treeItem);
						if ( treeItem.depth == 2 && treeItem.value == "" ){
							return;
						}
						if ( treeItem.depth == 3 && treeItem.value == "" ){
							return;
						}
						if ( treeItem.depth == 4 && treeItem.value == "" ){
							return;
						}
						
						strCrud = model.getValue("/root/tempData/crudNode/crud[" + treeMenu.focusIndex + "]");
						strUrl  = model.getValue("/root/tempData/urlNode/url[" + treeMenu.focusIndex + "]");
						/*
						if (treeItem.depth == 4){
							strCrud = model.getValue("/root/tempData/treemenu/treemenu/treemenu/treemenu/treemenu[" + (treeMenu.focusIndex + 1) + "]/crud");
						} else if (treeItem.depth == 3){
							strCrud = model.getValue("/root/tempData/treemenu/treemenu/treemenu/treemenu[" + (treeMenu.focusIndex + 1) + "]/crud");
						} else if (treeItem.depth == 2){
							strCrud = model.getValue("/root/tempData/treemenu/treemenu/treemenu[" + (treeMenu.focusIndex + 1) + "]/crud");
						}
						*/
						onLoadPage(treeItem.value,strCrud, strUrl);
					]]>
				</script>
			</treeview>
		</group>
		<group id="mainTop" overflow="hidden" style="left:0px; top:0px; width:100%; height:0px; background-color:#404040; ">
			<group id="grpCommon" right="100%" style="top:0px; width:700px; height:25px; background-color:transparent; ">
				<select1 id="cboMymenu" ref="/root/Mymenu/selectMymenu" appearance="minimal" style="left:281px; top:3px; width:95px; height:18px; ">
					<choices>
						<itemset nodeset="/root/Mymenu/cboMymenu/item">
							<label ref="label"/>
							<value ref="value"/>
						</itemset>
					</choices>
				</select1>
				<button id="btnMymenu" focus.background-image="/images/top_btn_mymenu_ov.gif" hover.background-image="/images/top_btn_mymenu_ov.gif" style="left:378px; top:3px; width:18px; height:18px; background-image:/images/top_btn_mymenu.gif; ">
					<caption/>
				</button>
			</group>
			<img id="img1" src="/images/top_tran_id.gif" style="left:12px; top:3px; width:72px; height:18px; background-stretch:stretch; "/>
			<input id="txtPageID" ref="/root/Search/pageID" imemode="alpha" style="left:85px; top:3px; width:93px; height:18px; ">
				<script type="javascript" ev:event="onkeypress">
					<![CDATA[
					if ( event.keyCode == 13 ) {
						onBtnGo();
					}
					]]>
				</script>
			</input>
			<button id="btnGo" focus.background-image="/images/top_btn_go_ov.gif" hover.background-image="/images/top_btn_go_ov.gif" style="left:180px; top:3px; width:25px; height:18px; background-image:/images/top_btn_go.gif; ">
				<caption/>
				<script type="javascript" ev:event="DOMActivate">
					<![CDATA[
					onBtnGo();
					]]>
				</script>
			</button>
			<button id="btnSea" focus.background-image="/images/top_btn_search_ov.gif" hover.background-image="/images/top_btn_search_ov.gif" style="left:208px; top:3px; width:21px; height:18px; background-image:/images/top_btn_search.gif; ">
				<caption/>
				<script type="javascript" ev:event="DOMActivate">
					<![CDATA[
					onBtnGo();
					]]>
				</script>
			</button>
		</group>
		<group id="mainTask" overflow="hidden" bottom="100%" style="left:0px; top:770px; width:1255px; height:30px; background-image:/images/task_back.gif; background-repeat:repeat-x; ">
			<button id="btnTree" hover.background-image="/images/brow01_ov.gif" style="left:10px; top:4px; width:15px; height:15px; background-image:/images/brow01.gif; border-style:none; focus-rect:hidden; ">
				<caption/>
				<script type="javascript" ev:event="DOMActivate">
					<![CDATA[
					onBtnTree();
					]]>
				</script>
				<hint>
					<![CDATA[트리메뉴]]>
				</hint>
			</button>
			<button id="btnCascade" hover.background-image="/images/brow03_ov.gif" style="left:35px; top:5px; width:15px; height:15px; background-image:/images/brow03.gif; border-style:none; focus-rect:hidden; ">
				<caption/>
				<script type="javascript" ev:event="DOMActivate">
					<![CDATA[
					onBtnCascade();
					]]>
				</script>
				<hint>
					<![CDATA[계단식]]>
				</hint>
			</button>
			<button id="btnTile" hover.background-image="/images/brow04_ov.gif" style="left:60px; top:5px; width:15px; height:15px; background-image:/images/brow04.gif; border-style:none; focus-rect:hidden; ">
				<caption/>
				<script type="javascript" ev:event="DOMActivate">
					<![CDATA[
					onBtnTile();
					]]>
				</script>
				<hint>
					<![CDATA[바둑판식 ]]>
				</hint>
			</button>
			<button id="btnCloseall" hover.background-image="/images/brow05_ov.gif" style="left:85px; top:5px; width:15px; height:15px; background-image:/images/brow05.gif; border-style:none; focus-rect:hidden; ">
				<caption/>
				<script type="javascript" ev:event="DOMActivate">
					<![CDATA[
					onBtnCloseall();
					]]>
				</script>
				<hint>
					<![CDATA[모두닫기]]>
				</hint>
			</button>
		</group>
	</xhtml:body>
</xhtml:html>
